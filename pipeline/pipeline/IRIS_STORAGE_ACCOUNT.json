{
	"name": "IRIS_STORAGE_ACCOUNT",
	"properties": {
		"activities": [
			{
				"name": "Lista arquivos",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.02:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_HMAISDATADRIVEN_BINARY",
						"type": "DatasetReference",
						"parameters": {
							"FileSystem": "urobrasil"
						}
					},
					"fieldList": [
						"childItems",
						"itemType",
						"itemName",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "Filtro",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lista arquivos",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lista arquivos').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@endsWith(item().name, 'csv')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filtro",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filtro').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copia dados para a STG",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": {
										"value": "@{concat('Drop table stg.',activity('Lista arquivos').output.itemName)}",
										"type": "Expression"
									},
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_HMAISDATADRIVEN",
									"type": "DatasetReference",
									"parameters": {
										"Filesystem": {
											"value": "@activity('Lista arquivos').output.itemName",
											"type": "Expression"
										},
										"File": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AZ_SQL_STG",
									"type": "DatasetReference",
									"parameters": {
										"SCHEMA": "stg",
										"TABELA": {
											"value": "@activity('Lista arquivos').output.itemName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Move arquivo para PROCESSADOS",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "STG DW",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_HMAISDATADRIVEN",
									"type": "DatasetReference",
									"parameters": {
										"Filesystem": {
											"value": "@activity('Lista arquivos').output.itemName",
											"type": "Expression"
										},
										"File": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_HMAISDATADRIVEN",
									"type": "DatasetReference",
									"parameters": {
										"Filesystem": {
											"value": "@concat(activity('Lista arquivos').output.itemName,'\\Processados')",
											"type": "Expression"
										},
										"File": {
											"value": "@concat(item().name,'-',utcnow())",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Apaga arquivo",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Move arquivo para PROCESSADOS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_HMAISDATADRIVEN",
									"type": "DatasetReference",
									"parameters": {
										"Filesystem": {
											"value": "@activity('Lista arquivos').output.itemName",
											"type": "Expression"
										},
										"File": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "sv_hmaisbrasildatadriven",
										"type": "LinkedServiceReference"
									},
									"path": "ceop/logs"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "STG DW",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Copia dados para a STG",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SQL_DESTINO",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "NonQuery",
										"text": "MERGE\t           \n\tdw.ortocity AS destino           \nUSING            \n\tstg.ortocity AS origem           \n           \n    ON(        \ndestino.CD_ESTABELECIMENTO\t\t= origem.CD_ESTABELECIMENTO AND\ndestino.DS_ESTABELECIMENTO\t\t= origem.DS_ESTABELECIMENTO AND\ndestino.NR_ATENDIMENTO\t\t\t= origem.NR_ATENDIMENTO AND\ndestino.NR_INTERNO_CONTA\t\t= origem.NR_INTERNO_CONTA AND\ndestino.CD_PESSOA_FISICA\t\t= origem.CD_PESSOA_FISICA AND\ndestino.CD_CONVENIO\t\t\t\t= origem.CD_CONVENIO AND\ndestino.CD_MEDICO_EXECUTANTE\t=\torigem.CD_MEDICO_EXECUTANTE \n)        \n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \ndestino.CD_ESTABELECIMENTO=origem.CD_ESTABELECIMENTO ,\ndestino.DS_ESTABELECIMENTO=origem.DS_ESTABELECIMENTO ,\ndestino.NR_ATENDIMENTO=origem.NR_ATENDIMENTO ,\ndestino.NR_INTERNO_CONTA=origem.NR_INTERNO_CONTA ,\ndestino.CD_PESSOA_FISICA=origem.CD_PESSOA_FISICA ,\ndestino.NM_PESSOA_FISICA=origem.NM_PESSOA_FISICA ,\ndestino.DT_NASCIMENTO=origem.DT_NASCIMENTO ,\ndestino.CD_CONVENIO=origem.CD_CONVENIO ,\ndestino.DS_CONVENIO=origem.DS_CONVENIO ,\ndestino.CD_MEDICO_EXECUTANTE=origem.CD_MEDICO_EXECUTANTE ,\ndestino.NM_MEDICO_EXECUTANTE=origem.NM_MEDICO_EXECUTANTE ,\ndestino.CD_SETOR_EXECUTANTE=origem.CD_SETOR_EXECUTANTE ,\ndestino.DS_SETOR_EXECUTANTE=origem.DS_SETOR_EXECUTANTE ,\ndestino.DT_ENTRADA=origem.DT_ENTRADA ,\ndestino.CD_ITEM=origem.CD_ITEM ,\ndestino.DS_ITEM=origem.DS_ITEM ,\ndestino.DT_LANC_ITEM=origem.DT_LANC_ITEM ,\ndestino.QT=origem.QT ,\ndestino.VALOR=origem.VALOR \n\n\n  \n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.CD_ESTABELECIMENTO,\norigem.DS_ESTABELECIMENTO,\norigem.NR_ATENDIMENTO,\norigem.NR_INTERNO_CONTA,\norigem.CD_PESSOA_FISICA,\norigem.NM_PESSOA_FISICA,\norigem.DT_NASCIMENTO,\norigem.CD_CONVENIO,\norigem.DS_CONVENIO,\norigem.CD_MEDICO_EXECUTANTE,\norigem.NM_MEDICO_EXECUTANTE,\norigem.CD_SETOR_EXECUTANTE,\norigem.DS_SETOR_EXECUTANTE,\norigem.DT_ENTRADA,\norigem.CD_ITEM,\norigem.DS_ITEM,\norigem.DT_LANC_ITEM,\norigem.QT,\norigem.VALOR\n); "
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "\nSELECT \nosm_num\n,osm_pac\n,osm_dthr\n,osm_cnv\n,osm_proc\n,osm_mreq\n,osm_str\n,osm_status\n,osm_ind_urg\n,osm_serie\n,osm_hsp_num\n,osm_tipo\n,osm_dt_result\n,osm_atend\n,osm_obs_coleta\n,osm_lta_cod\n,osm_ctle_cnv\n,osm_nota_sala\n,osm_cid_cod\n,osm_obs\n,osm_mcnv\n,OSM_PADRAO_PRECO\n,OSM_DT_SOLIC\n,OSM_HORA_ESP\n,OSM_SUS_GRUPO_ATENDE\n,OSM_SUS_TIPO_ATENDE\n,OSM_CNPJ_SOLIC\n,OSM_SAP_COD\n,OSM_LIB_PAG\n,OSM_LIB_PAG_DTHR\n,OSM_LIB_PAG_USR\n,OSM_MTE_SERIE_BENEF\n,OSM_MTE_SEQ_BENEF\n,OSM_OSM_SERIE_BENEF\n,OSM_OSM_NUM_BENEF\n,OSM_LIB_PAG_SERIE\n,OSM_LIB_PAG_NUM\n,OSM_ASO_MES_REF\n,OSM_NUM_EXTERNO\n,OSM_CML_CNV_COD\n,OSM_LEG_COD\n,OSM_CML_CONV_COD\n,OSM_CML_CONV_NOME\n,OSM_LIB_PAG_NFL_NUM\n,OSM_LIB_PAG_NFL_SERIE\n,OSM_IND_COLETA_DOM\n,OSM_MREQ_IND_SLINE\n,osm_usr_login_cad\n,osm_mreq_2\n,osm_mreq_3\n,osm_dt_solic_2\n,osm_dt_solic_3\n,osm_nota_sala_cobranca_mat\n,OSM_MCNV_PROTOCOLO\n,osm_tipo_acidente\n,osm_tipo_doenca\n,osm_tempo_doenca\n,osm_escala_doenca\n,osm_tiss_indic_clinica\n,osm_tiss_tipo_atende\n,OSM_TISS_TIPO_SAIDA\n,osm_sus_idade\n,osm_sus_sexo\n,osm_dthr_saida\n,osm_empnome_solic\n,osm_tiss_guia_principal\n,osm_cnes_solic\n,osm_w_login\n,osm_w_senha\n,osm_num_externo_alfa\n,osm_pln_cod\n,osm_obs_tiss\n,osm_psv_indic\n,osm_imp_etiq\n,osm_ind_web\n,osm_etiqueta_cip_lsf\n,osm_tipo_audit\n,OSM_PAC_ETIQUETA_CIP_LSF\n,osm_planserv_rat_empresa\n,osm_cod_cebim\n,osm_email_result\n,osm_cr_cor\n,osm_planserv_bm_mot_tipo\n,osm_planserv_bm_mot_cod\n,osm_obs_extenso\n,osm_trak_passagem\n,osm_id_alvaro\n,osm_obs_pend_b2b\n,osm_ind_vacina\n,osm_lib_pag_prt\n,osm_tiss_guia_operadora\n,osm_planserv_rat_dt_emis\n,osm_dthr_biometria_unimed\n,osm_resultado_biometria_unimed\n,OSM_IND_ANTECIPADA\n,OSM_ORI_SOL\n,osm_click_protocolo\n,osm_click_requisicao\n,osm_click_ind_integracao\n,osm_dthr_exp\n,osm_orp_num\n,osm_sus_ind_prog_transp\n,osm_mcnv_protocolo_v2\n,osm_token\n,osm_cod_justificativa\n,osm_status_confirmacao\n,osm_id_integra\n,osm_tp_ident_benef\n  FROM dba.osm\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_osm"
						}
					}
				]
			}
		],
		"folder": {
			"name": "Data Warehouse/P&P"
		},
		"annotations": []
	}
}