{
	"name": "IRIS_CARGA_DINAMICA_ADF",
	"properties": {
		"activities": [
			{
				"name": "LISTA ORIGEM DESTINO",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "COPY STG TO DW",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.05:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[adf].[sp_origem_destino]",
						"storedProcedureParameters": {
							"COD_TABELA": {
								"type": "String",
								"value": null
							},
							"Dt_inicio_manual": {
								"type": "DateTime",
								"value": null
							},
							"manual": {
								"type": "String",
								"value": "N"
							},
							"plataforma": {
								"type": "String",
								"value": "SMART_IRIS_ODBC_XXX"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "LISTA_TABELAS_ADF",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "PROCESSA ETL",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "DROPA TABELAS DESTINO",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LISTA ORIGEM DESTINO').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "SE CARGA COMPLETA",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().TIPO_CARGA,'COMPLETA')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "DATA_HORA_INICIO_PARCIAL",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "StartTime",
											"value": {
												"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
												"type": "Expression"
											}
										}
									},
									{
										"name": "CARGA PARCIAL",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "DATA_HORA_INICIO_PARCIAL",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.05:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "OracleSource",
												"oracleReaderQuery": {
													"value": "@concat(\n'select * from ', item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM,' where ', item().nome_coluna_referencia,' >= ''',\nitem().Data_Inicio, ''' and  ', item().nome_coluna_referencia,' <= ''', item().Data_Fim, ''''\n)",
													"type": "Expression"
												},
												"partitionOption": "None",
												"queryTimeout": "02:00:00"
											},
											"sink": {
												"type": "AzureSqlSink",
												"writeBehavior": "insert"
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "ORACLE_DINAMICO",
												"type": "DatasetReference",
												"parameters": {
													"NOME_KEYVAULT_SECRET": "@item().NOME_KEYVAULT_SECRET",
													"schema_name": "@item().NOME_SCHEMA_ORIGEM",
													"table_name": "@item().NOME_TABELA_ORIGEM"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DESTINO_TABELAS_ADF",
												"type": "DatasetReference",
												"parameters": {
													"Schema_Destino": {
														"value": "@item().NOME_SCHEMA_DESTINO",
														"type": "Expression"
													},
													"Tabela_Destino": {
														"value": "@item().NOME_TABELA_DESTINO",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "LOG PROCESSAMENTO PARCIAL SUCESSO",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "CARGA PARCIAL",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.05:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[adf].[SP_LOG_PROCESSAMENTO]",
											"storedProcedureParameters": {
												"CODIGO_TABELA": {
													"value": {
														"value": "@item().codigo_tabela",
														"type": "Expression"
													},
													"type": "String"
												},
												"COMANDO_SQL": {
													"value": {
														"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
														"type": "Expression"
													},
													"type": "String"
												},
												"DATA_FIM": {
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													},
													"type": "String"
												},
												"DATA_HORA_EXECUCAO": {
													"value": {
														"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													},
													"type": "String"
												},
												"DATA_INICIO": {
													"value": {
														"value": "@variables('startTime')",
														"type": "Expression"
													},
													"type": "String"
												},
												"ID_EXECUCAO": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"ID_TRIGGER": {
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													},
													"type": "String"
												},
												"MENSAGEM_ERRO": {
													"value": null,
													"type": "String"
												},
												"NOME_ADF": {
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_CONTAINER": {
													"value": {
														"value": "CARGA_COMPLETA",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_ORIGEM": {
													"value": {
														"value": "@item().NOME_KEYVAULT_SECRET",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_PIPELINE": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_PROCESSO": {
													"value": null,
													"type": "String"
												},
												"NOME_TABELA_ORIGEM": {
													"value": {
														"value": "@item().nome_tabela_origem",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_TRIGGER": {
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													},
													"type": "String"
												},
												"QUANTIDADE_REGISTROS": {
													"value": {
														"value": "@activity('CARGA PARCIAL').output.rowsCopied",
														"type": "Expression"
													},
													"type": "String"
												},
												"TIPO_FINALIZACAO": {
													"value": {
														"value": "SUCESSO",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "AzureSQL_DB_Procedimentos",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "LOG PROCESSAMENTO PARCIAL ERRO",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "CARGA PARCIAL",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "0.05:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[adf].[SP_LOG_PROCESSAMENTO]",
											"storedProcedureParameters": {
												"CODIGO_TABELA": {
													"value": {
														"value": "@item().codigo_tabela",
														"type": "Expression"
													},
													"type": "String"
												},
												"COMANDO_SQL": {
													"value": {
														"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
														"type": "Expression"
													},
													"type": "String"
												},
												"DATA_FIM": {
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													},
													"type": "String"
												},
												"DATA_HORA_EXECUCAO": {
													"value": {
														"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													},
													"type": "String"
												},
												"DATA_INICIO": {
													"value": {
														"value": "@variables('startTime')",
														"type": "Expression"
													},
													"type": "String"
												},
												"ID_EXECUCAO": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"ID_TRIGGER": {
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													},
													"type": "String"
												},
												"MENSAGEM_ERRO": {
													"value": {
														"value": "@activity('CARGA PARCIAL').error.message",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_ADF": {
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_CONTAINER": {
													"value": {
														"value": "CARGA_COMPLETA",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_ORIGEM": {
													"value": {
														"value": "@item().NOME_KEYVAULT_SECRET",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_PIPELINE": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_PROCESSO": {
													"value": null,
													"type": "String"
												},
												"NOME_TABELA_ORIGEM": {
													"value": {
														"value": "@item().nome_tabela_origem",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_TRIGGER": {
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													},
													"type": "String"
												},
												"QUANTIDADE_REGISTROS": {
													"value": {
														"value": "@activity('CARGA PARCIAL').output.rowsCopied",
														"type": "Expression"
													},
													"type": "String"
												},
												"TIPO_FINALIZACAO": {
													"value": {
														"value": "ERRO",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "AzureSQL_DB_Procedimentos",
											"type": "LinkedServiceReference"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "DATA_HORA_INICIO_COMPLETA",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "StartTime",
											"value": {
												"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
												"type": "Expression"
											}
										}
									},
									{
										"name": "CARGA COMPLETA",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "DATA_HORA_INICIO_COMPLETA",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.10:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"queryTimeout": "02:00:00",
												"partitionOption": "PhysicalPartitionsOfTable"
											},
											"sink": {
												"type": "AzureSqlSink",
												"writeBehavior": "insert",
												"sqlWriterUseTableLock": false,
												"tableOption": "autoCreate",
												"disableMetricsCollection": false
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "SQL_DINAMICO",
												"type": "DatasetReference",
												"parameters": {
													"NOME_KEYVAULT_SECRET": {
														"value": "@item().NOME_KEYVAULT_SECRET",
														"type": "Expression"
													},
													"schema_name": {
														"value": "@item().NOME_SCHEMA_ORIGEM",
														"type": "Expression"
													},
													"table_name": {
														"value": "@item().NOME_TABELA_ORIGEM",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DESTINO_TABELAS_ADF",
												"type": "DatasetReference",
												"parameters": {
													"Schema_Destino": {
														"value": "@item().NOME_SCHEMA_DESTINO",
														"type": "Expression"
													},
													"Tabela_Destino": {
														"value": "@item().NOME_TABELA_DESTINO",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "LOG PROCESSAMENTO COMPLETA SUCESSO",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "CARGA COMPLETA",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.05:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[adf].[SP_LOG_PROCESSAMENTO]",
											"storedProcedureParameters": {
												"CODIGO_TABELA": {
													"value": {
														"value": "@item().codigo_tabela",
														"type": "Expression"
													},
													"type": "String"
												},
												"COMANDO_SQL": {
													"value": {
														"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
														"type": "Expression"
													},
													"type": "String"
												},
												"DATA_FIM": {
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													},
													"type": "String"
												},
												"DATA_HORA_EXECUCAO": {
													"value": {
														"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													},
													"type": "String"
												},
												"DATA_INICIO": {
													"value": {
														"value": "@variables('startTime')",
														"type": "Expression"
													},
													"type": "String"
												},
												"ID_EXECUCAO": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"ID_TRIGGER": {
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													},
													"type": "String"
												},
												"MENSAGEM_ERRO": {
													"value": null,
													"type": "String"
												},
												"NOME_ADF": {
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_CONTAINER": {
													"value": {
														"value": "CARGA_COMPLETA",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_ORIGEM": {
													"value": {
														"value": "@item().NOME_KEYVAULT_SECRET",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_PIPELINE": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_PROCESSO": {
													"value": null,
													"type": "String"
												},
												"NOME_TABELA_ORIGEM": {
													"value": {
														"value": "@item().nome_tabela_origem",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_TRIGGER": {
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													},
													"type": "String"
												},
												"QUANTIDADE_REGISTROS": {
													"value": {
														"value": "@activity('CARGA COMPLETA').output.rowsCopied",
														"type": "Expression"
													},
													"type": "String"
												},
												"TIPO_FINALIZACAO": {
													"value": {
														"value": "SUCESSO",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "AzureSQL_DB_Procedimentos",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "LOG PROCESSAMENTO COMPLETA ERRO",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "CARGA COMPLETA",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "0.05:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[adf].[SP_LOG_PROCESSAMENTO]",
											"storedProcedureParameters": {
												"CODIGO_TABELA": {
													"value": {
														"value": "@item().codigo_tabela",
														"type": "Expression"
													},
													"type": "String"
												},
												"COMANDO_SQL": {
													"value": {
														"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
														"type": "Expression"
													},
													"type": "String"
												},
												"DATA_FIM": {
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													},
													"type": "String"
												},
												"DATA_HORA_EXECUCAO": {
													"value": {
														"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													},
													"type": "String"
												},
												"DATA_INICIO": {
													"value": {
														"value": "@variables('startTime')",
														"type": "Expression"
													},
													"type": "String"
												},
												"ID_EXECUCAO": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"ID_TRIGGER": {
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													},
													"type": "String"
												},
												"MENSAGEM_ERRO": {
													"value": {
														"value": "@activity('CARGA COMPLETA').error.message",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_ADF": {
													"value": {
														"value": "@pipeline().DataFactory",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_CONTAINER": {
													"value": {
														"value": "CARGA_COMPLETA",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_ORIGEM": {
													"value": {
														"value": "@item().NOME_KEYVAULT_SECRET",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_PIPELINE": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_PROCESSO": {
													"value": null,
													"type": "String"
												},
												"NOME_TABELA_ORIGEM": {
													"value": {
														"value": "@item().nome_tabela_origem",
														"type": "Expression"
													},
													"type": "String"
												},
												"NOME_TRIGGER": {
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													},
													"type": "String"
												},
												"QUANTIDADE_REGISTROS": {
													"value": {
														"value": "@activity('CARGA COMPLETA').output.rowsCopied",
														"type": "Expression"
													},
													"type": "String"
												},
												"TIPO_FINALIZACAO": {
													"value": {
														"value": "ERRO",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "AzureSQL_DB_Procedimentos",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "DROPA TABELAS DESTINO",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LISTA ORIGEM DESTINO",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LISTA ORIGEM DESTINO').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 30,
					"activities": [
						{
							"name": "LIMPA TABELA DESTINO",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.05:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N',\n'''',   \nitem().NOME_SCHEMA_DESTINO,\n'.',\nitem().NOME_TABELA_DESTINO,\n'''',\n') AND type in (N',\n'''',\n'U',\n'''',\n'))',\n' DROP TABLE ',\nitem().NOME_SCHEMA_DESTINO,\n'.',\nitem().NOME_TABELA_DESTINO,\n'  SELECT 0'\n)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DESTINO_TABELAS_ADF",
									"type": "DatasetReference",
									"parameters": {
										"Schema_Destino": {
											"value": "@item().NOME_SCHEMA_DESTINO",
											"type": "Expression"
										},
										"Tabela_Destino": {
											"value": "@item().NOME_TABELA_DESTINO",
											"type": "Expression"
										}
									}
								},
								"firstRowOnly": true
							}
						}
					]
				}
			},
			{
				"name": "Copy STG OSM",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG CNV",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.osm\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "truncate table stg.iris_osm",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_osm"
						}
					}
				]
			},
			{
				"name": "Copy STG CNV",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG HON",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.cnv\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "truncate table stg.iris_CNV",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_cnv"
						}
					}
				]
			},
			{
				"name": "Copy STG CTF",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG OSM",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.CTF\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "truncate table stg.iris_CTF",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_CTF"
						}
					}
				]
			},
			{
				"name": "Copy STG GCC",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG CTF",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.GCC\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_GCC"
						}
					}
				]
			},
			{
				"name": "Copy STG HON",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG SMM",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.HON A\nWHERE SUBSTRING(A.hon_dthr_alt,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_HON"
						}
					}
				]
			},
			{
				"name": "Copy STG PSV",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG GCC",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.PSV\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_PSV"
						}
					}
				]
			},
			{
				"name": "Copy STG SMK",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG PSV",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.SMK\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_SMK"
						}
					}
				]
			},
			{
				"name": "Copy STG SMM",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG NFS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.SMM A\nWHERE SUBSTRING(A.smm_dthr_alter,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_SMM"
						}
					}
				]
			},
			{
				"name": "Copy STG STR",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG SMK",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.STR\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_STR"
						}
					}
				]
			},
			{
				"name": "Copy STG NFS",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG EXT",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.nfs A\nWHERE SUBSTRING(A.nfs_dthr_proc,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_NFS"
						}
					}
				]
			},
			{
				"name": "Copy STG EMP",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG STR",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.EMP\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_EMP"
						}
					}
				]
			},
			{
				"name": "Copy STG FAT",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG EMP",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.FAT\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_FAT"
						}
					}
				]
			},
			{
				"name": "Copy STG EXT",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG MNS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.EXT\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_EXT"
						}
					}
				]
			},
			{
				"name": "Copy STG MNS",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG PAC",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.mns A\nWHERE SUBSTRING(A.mns_dt_reg,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_MNS"
						}
					}
				]
			},
			{
				"name": "Copy STG PAC",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG MTE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.pac A\nWHERE SUBSTRING(A.pac_dreg,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_PAC"
						}
					}
				]
			},
			{
				"name": "Copy STG MTE",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG AGM",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.mte A\nWHERE SUBSTRING(A.mte_dt_reg,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_MTE"
						}
					}
				]
			},
			{
				"name": "Copy STG NFL",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG FAT",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.NFL\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_NFL"
						}
					}
				]
			},
			{
				"name": "Copy STG AGM",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "STG TO DW FLE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.agm A\nWHERE SUBSTRING(A.agm_hini,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_AGM"
						}
					}
				]
			},
			{
				"name": "Copy STG FLE",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.fle A\nWHERE SUBSTRING(A.fle_dthr_reg,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_FLE"
						}
					}
				]
			},
			{
				"name": "Copy STG LOC",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG NFL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.LOC\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_LOC"
						}
					}
				]
			},
			{
				"name": "Copy STG GMM",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy STG LOC",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": "SELECT  *  FROM dba.GMM\n\n\n",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_IRIS_ODBC",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "iris_GMM"
						}
					}
				]
			},
			{
				"name": "COPY STG TO DW",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Copy STG GMM",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "/**\n\ndrop table dw.iris_hon;\nselect '96' as ESTABELECIMENTO,* into dw.iris_hon from stg.iris_hon;\ndrop table dw.iris_smm;\nselect '96' as ESTABELECIMENTO,* into dw.iris_smm from stg.iris_smm;\ndrop table dw.iris_nfs;\nselect '96' as ESTABELECIMENTO,* into dw.iris_nfs from stg.iris_nfs;\ndrop table dw.iris_ext;\nselect '96' as ESTABELECIMENTO,* into dw.iris_ext from stg.iris_ext;\ndrop table dw.iris_mns;\nselect '96' as ESTABELECIMENTO,* into dw.iris_mns from stg.iris_mns;\ndrop table dw.iris_pac;\nselect '96' as ESTABELECIMENTO,* into dw.iris_pac from stg.iris_pac;\ndrop table dw.iris_mte;\nselect '96' as ESTABELECIMENTO,* into dw.iris_mte from stg.iris_mte;\ndrop table dw.iris_agm;\nselect '96' as ESTABELECIMENTO,* into dw.iris_agm from stg.iris_agm;\ndrop table dw.iris_fle;\nselect '96' as ESTABELECIMENTO,* into dw.iris_fle from stg.iris_fle;\n\n\ndrop table dw.iris_osm;\nselect '96' as ESTABELECIMENTO,* into dw.iris_osm from stg.iris_osm;\ndrop table dw.iris_cnv;\nselect '96' as ESTABELECIMENTO,* into dw.iris_cnv from stg.iris_cnv;\ndrop table dw.iris_ctf;\nselect '96' as ESTABELECIMENTO,* into dw.iris_ctf from stg.iris_ctf;\ndrop table dw.iris_gcc;\nselect '96' as ESTABELECIMENTO,* into dw.iris_gcc from stg.iris_gcc;\ndrop table dw.iris_psv;\nselect '96' as ESTABELECIMENTO,* into dw.iris_psv from stg.iris_psv;\ndrop table dw.iris_smk;\nselect '96' as ESTABELECIMENTO,* into dw.iris_smk from stg.iris_smk;\ndrop table dw.iris_str;\nselect '96' as ESTABELECIMENTO,* into dw.iris_str from stg.iris_str;\ndrop table dw.iris_emp;\nselect '96' as ESTABELECIMENTO,* into dw.iris_emp from stg.iris_emp;\ndrop table dw.iris_fat;\nselect '96' as ESTABELECIMENTO,* into dw.iris_fat from stg.iris_fat;\ndrop table dw.iris_nfl;\nselect '96' as ESTABELECIMENTO,* into dw.iris_nfl from stg.iris_nfl;\ndrop table dw.iris_loc;\nselect '96' as ESTABELECIMENTO,* into dw.iris_loc from stg.iris_loc;\ndrop table dw.iris_gmm;\nselect '96' as ESTABELECIMENTO,* into dw.iris_gmm from stg.iris_gmm;\n\n**/"
						}
					]
				}
			},
			{
				"name": "STG TO DW HON",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Copy STG HON",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "WITH STG_HON \nAS\n(\n\nSELECT DISTINCT\n\t   '96' as estabelecimento\n\t  ,[hon_med]\n      ,[hon_psv_vinc]\n      ,[hon_ctf]\n      ,[hon_str]\n      ,[hon_tpctf]\n      ,[hon_str_solic]\n      ,[hon_seq]\n      ,[hon_aux]\n      ,[hon_cc1]\n      ,[hon_pc1]\n      ,[hon_vl1]\n      ,[hon_cc2]\n      ,[hon_pc2]\n      ,[hon_vl2]\n      ,[hon_cc3]\n      ,[hon_pc3]\n      ,[hon_vl3]\n      ,[hon_cc4]\n      ,[hon_pc4]\n      ,[hon_vl4]\n      ,[hon_cc5]\n      ,[hon_pc5]\n      ,[hon_vl5]\n      ,[hon_cnv_cod]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(hon_dthr_ini as varchar(1000))) = 1 THEN  cast(hon_dthr_ini as varchar(1000)) -- substring(substring(cast(hon_dthr_ini as varchar(1000)),9,2),1,4) + '/' + substring(substring(cast(hon_dthr_ini as varchar(1000)),6,2),1,4) + '/' + substring(substring(cast(hon_dthr_ini as varchar(1000)),1,10),1,4) \n\t\t\tWHEN ISDATE(cast(hon_dthr_ini as varchar(1000))) <> 1 THEN Null \n\t\tEND as hon_dthr_ini\n      ,[hon_status]\n      ,[HON_USR_LOGIN_CAD]\n      ,[HON_USR_LOGIN_ALT]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(HON_DTHR_ALT as varchar(1000))) = 1 THEN  cast(HON_DTHR_ALT as varchar(1000)) \n\t\t\tWHEN ISDATE(cast(HON_DTHR_ALT as varchar(1000))) <> 1 THEN Null \n\t   END as HON_DTHR_ALT\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(HON_DTHR_CAD as varchar(1000))) = 1 THEN  cast(HON_DTHR_CAD as varchar(1000)) \n\t\t\tWHEN ISDATE(cast(HON_DTHR_CAD as varchar(1000))) <> 1 THEN Null \n\t   END as HON_DTHR_CAD\n      ,[HON_GMR_COD]\n      ,[HON_CTF_CATEG]\n      ,[HON_EMP_COD]\n      ,[HON_CC6]\n      ,[HON_PC6]\n      ,[HON_VL6]\n      ,[hon_psv_solic]\n      ,[hon_ih_origem]\n      ,[HON_DIA]\n      ,[HON_HOR_INI]\n      ,[HON_HOR_FIM]\n      ,[hon_obs]\n      ,[hon_smk_tipo]\n      ,[hon_smk_cod]\n      ,[hon_forma_pag]\n      ,[hon_ind_rat]\n      ,[hon_gmr_solic]\n      ,[hon_cnv_emp_cod]\n      ,[hon_psv_tipo_solic]\n      ,[hon_tap_cod]\n      ,[hon_dce_id]\n      ,[hon_adicional_1]\n      ,[hon_adicional_2]\n      ,[hon_adicional_3]\n      ,[hon_adicional_4]\n      ,[hon_adicional_5]\n      ,[hon_adicional_6]\n      ,[hon_grupo_id]\n\t  \n  FROM [stg].[iris_HON]  with(nolock)\n\t  )\n\n--Sincronize a tabela de destino com dados atualizados da tabela de origem\nMERGE\t\n\t[a].[tbl_HON] AS destino\nUSING \n\tSTG_HON AS origem\n\n\tON (destino.hon_seq\t\t\t= origem.hon_seq\t\t\tAND \n\t\tdestino.estabelecimento = origem.estabelecimento)\n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração\nWHEN MATCHED \nTHEN UPDATE SET      \ndestino.[hon_med] = origem.[hon_med],\ndestino.[hon_psv_vinc] = origem.[hon_psv_vinc],\ndestino.[hon_ctf] = origem.[hon_ctf],\ndestino.[hon_str] = origem.[hon_str],\ndestino.[hon_tpctf] = origem.[hon_tpctf],\ndestino.[hon_str_solic] = origem.[hon_str_solic],\ndestino.[hon_seq] = origem.[hon_seq],\ndestino.[hon_aux] = origem.[hon_aux],\ndestino.[hon_cc1] = origem.[hon_cc1],\ndestino.[hon_pc1] = origem.[hon_pc1],\ndestino.[hon_vl1] = origem.[hon_vl1],\ndestino.[hon_cc2] = origem.[hon_cc2],\ndestino.[hon_pc2] = origem.[hon_pc2],\ndestino.[hon_vl2] = origem.[hon_vl2],\ndestino.[hon_cc3] = origem.[hon_cc3],\ndestino.[hon_pc3] = origem.[hon_pc3],\ndestino.[hon_vl3] = origem.[hon_vl3],\ndestino.[hon_cc4] = origem.[hon_cc4],\ndestino.[hon_pc4] = origem.[hon_pc4],\ndestino.[hon_vl4] = origem.[hon_vl4],\ndestino.[hon_cc5] = origem.[hon_cc5],\ndestino.[hon_pc5] = origem.[hon_pc5],\ndestino.[hon_vl5] = origem.[hon_vl5],\ndestino.[hon_cnv_cod] = origem.[hon_cnv_cod],\ndestino.[hon_dthr_ini] = origem.[hon_dthr_ini],\ndestino.[hon_status] = origem.[hon_status],\ndestino.[HON_USR_LOGIN_CAD] = origem.[HON_USR_LOGIN_CAD],\ndestino.[HON_USR_LOGIN_ALT] = origem.[HON_USR_LOGIN_ALT],\ndestino.[HON_DTHR_ALT] = origem.[HON_DTHR_ALT],\ndestino.[HON_DTHR_CAD] = origem.[HON_DTHR_CAD],\ndestino.[HON_GMR_COD] = origem.[HON_GMR_COD],\ndestino.[HON_CTF_CATEG] = origem.[HON_CTF_CATEG],\ndestino.[HON_EMP_COD] = origem.[HON_EMP_COD],\ndestino.[HON_CC6] = origem.[HON_CC6],\ndestino.[HON_PC6] = origem.[HON_PC6],\ndestino.[HON_VL6] = origem.[HON_VL6],\ndestino.[hon_psv_solic] = origem.[hon_psv_solic],\ndestino.[hon_ih_origem] = origem.[hon_ih_origem],\ndestino.[HON_DIA] = origem.[HON_DIA],\ndestino.[HON_HOR_INI] = origem.[HON_HOR_INI],\ndestino.[HON_HOR_FIM] = origem.[HON_HOR_FIM],\ndestino.[hon_obs] = origem.[hon_obs],\ndestino.[hon_smk_tipo] = origem.[hon_smk_tipo],\ndestino.[hon_smk_cod] = origem.[hon_smk_cod],\ndestino.[hon_forma_pag] = origem.[hon_forma_pag],\ndestino.[hon_ind_rat] = origem.[hon_ind_rat],\ndestino.[hon_gmr_solic] = origem.[hon_gmr_solic],\ndestino.[hon_cnv_emp_cod] = origem.[hon_cnv_emp_cod],\ndestino.[hon_psv_tipo_solic] = origem.[hon_psv_tipo_solic],\ndestino.[hon_tap_cod] = origem.[hon_tap_cod],\ndestino.[hon_dce_id] = origem.[hon_dce_id],\ndestino.[hon_adicional_1] = origem.[hon_adicional_1],\ndestino.[hon_adicional_2] = origem.[hon_adicional_2],\ndestino.[hon_adicional_3] = origem.[hon_adicional_3],\ndestino.[hon_adicional_4] = origem.[hon_adicional_4],\ndestino.[hon_adicional_5] = origem.[hon_adicional_5],\ndestino.[hon_adicional_6] = origem.[hon_adicional_6],\ndestino.[hon_grupo_id] = origem.[hon_grupo_id]\n\n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT \n\tVALUES (  \norigem.estabelecimento,\norigem.[hon_med],\norigem.[hon_psv_vinc],\norigem.[hon_ctf],\norigem.[hon_str],\norigem.[hon_tpctf],\norigem.[hon_str_solic],\norigem.[hon_seq],\norigem.[hon_aux],\norigem.[hon_cc1],\norigem.[hon_pc1],\norigem.[hon_vl1],\norigem.[hon_cc2],\norigem.[hon_pc2],\norigem.[hon_vl2],\norigem.[hon_cc3],\norigem.[hon_pc3],\norigem.[hon_vl3],\norigem.[hon_cc4],\norigem.[hon_pc4],\norigem.[hon_vl4],\norigem.[hon_cc5],\norigem.[hon_pc5],\norigem.[hon_vl5],\norigem.[hon_cnv_cod],\norigem.[hon_dthr_ini],\norigem.[hon_status],\norigem.[HON_USR_LOGIN_CAD],\norigem.[HON_USR_LOGIN_ALT],\norigem.[HON_DTHR_ALT],\norigem.[HON_DTHR_CAD],\norigem.[HON_GMR_COD],\norigem.[HON_CTF_CATEG],\norigem.[HON_EMP_COD],\norigem.[HON_CC6],\norigem.[HON_PC6],\norigem.[HON_VL6],\norigem.[hon_psv_solic],\norigem.[hon_ih_origem],\norigem.[HON_DIA],\norigem.[HON_HOR_INI],\norigem.[HON_HOR_FIM],\norigem.[hon_obs],\norigem.[hon_smk_tipo],\norigem.[hon_smk_cod],\norigem.[hon_forma_pag],\norigem.[hon_ind_rat],\norigem.[hon_gmr_solic],\norigem.[hon_cnv_emp_cod],\norigem.[hon_psv_tipo_solic],\norigem.[hon_tap_cod],\norigem.[hon_dce_id],\norigem.[hon_adicional_1],\norigem.[hon_adicional_2],\norigem.[hon_adicional_3],\norigem.[hon_adicional_4],\norigem.[hon_adicional_5],\norigem.[hon_adicional_6],\norigem.[hon_grupo_id]\n) ;\n \n\n\n"
						}
					]
				}
			},
			{
				"name": "STG TO DW FLE",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Copy STG FLE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "WITH STG_FLE \nAS\n(\n\nSELECT DISTINCT\n\t   '96' as estabelecimento\n\t ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_chegada as varchar(1000))) = 1 THEN  cast(fle_dthr_chegada as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_chegada as varchar(1000))) <> 1 THEN Null \n\t  END as fle_dthr_chegada\n      ,[FLE_PSV_COD]\n      ,[FLE_STR_COD]\n      ,[FLE_PAC_REG]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_atendimento as varchar(1000))) = 1 THEN  cast(fle_dthr_atendimento as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_atendimento as varchar(1000))) <> 1 THEN Null \n\t   END as fle_dthr_atendimento\n      ,[FLE_ORDEM]\n      ,[FLE_STATUS]\n      ,[FLE_USR_LOGIN]\n    --  ,[FLE_OBS_OLD]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_marcada as varchar(1000))) = 1 THEN  cast(fle_dthr_marcada as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_marcada as varchar(1000))) <> 1 THEN Null \n\t\tEND as fle_dthr_marcada\n      ,[FLE_MARC_EXTRA]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(FLE_DTHR_FINAL as varchar(1000))) = 1 THEN  cast(FLE_DTHR_FINAL as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(FLE_DTHR_FINAL as varchar(1000))) <> 1 THEN Null \n\t\tEND as FLE_DTHR_FINAL\n      ,[FLE_PSV_RESP]\n      ,[FLE_MFL_RETORNO]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(FLE_DTHR_REG as varchar(1000))) = 1 THEN  cast(FLE_DTHR_REG as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(FLE_DTHR_REG as varchar(1000))) <> 1 THEN Null \n\t\tEND as FLE_DTHR_REG\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_chegada_inicial as varchar(1000))) = 1 THEN  cast(fle_dthr_chegada_inicial as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_chegada_inicial as varchar(1000))) <> 1 THEN Null \n\t   END as fle_dthr_chegada_inicial\n      ,[FLE_PROCED]\n      ,[FLE_COR]\n      ,[FLE_BIP]\n      ,[FLE_VERSAO]\n      ,[FLE_USR_ATENDIMENTO]\n      ,[FLE_USR_FINAL]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_hora_aguardo as varchar(1000))) = 1 THEN  cast(fle_dthr_hora_aguardo as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_hora_aguardo as varchar(1000))) <> 1 THEN Null \n\t\tEND as fle_dthr_hora_aguardo\n\n      ,[FLE_OSM_SERIE]\n      ,[FLE_OSM_NUM]\n      ,[FLE_SMM_NUM]\n      ,[FLE_LOC_COD]\n      ,[FLE_OBS]\n      ,[FLE_OBS_PSV]\n      ,[FLE_PREFERENCIAL]\n      ,[FLE_ID]\n      ,[FLE_SMA_SERIE]\n      ,[FLE_SMA_NUM]\n      ,[FLE_IND_OCUPADO]\n      ,[FLE_PSV_T_PREFIXO]\n      ,[FLE_ID_FILA_SOLICITACAO_RD]\n      ,[FLE_PAC_NOME]\n      ,[FLE_RETORNO]\n      ,[FLE_RISCO_QUEDA]\n      ,[FLE_VULNERAVEL]\n   --   ,[FLE_TOLIFE_EPISODE]\n\t  \n  FROM [stg].[iris_FLE]  with(nolock)\n\t  )\n\n--Sincronize a tabela de destino com dados atualizados da tabela de origem\nMERGE\t\n\t[a].[tbl_FLE] AS destino\nUSING \n\tSTG_FLE AS origem\n\n\tON (\n\t\tdestino.estabelecimento\t\t\t= origem.estabelecimento\t\t\tAND\t\n\t\tdestino.FLE_PSV_COD\t\t\t\t= origem.FLE_PSV_COD\t\t\t\tAND \n\t\tdestino.FLE_PAC_REG\t\t\t\t= origem.FLE_PAC_REG\t\t\t\tAND\n\t\tdestino.FLE_DTHR_ATENDIMENTO\t= origem.FLE_DTHR_ATENDIMENTO\t\tAND\n\t\tdestino.FLE_DTHR_FINAL\t\t\t= origem.FLE_DTHR_FINAL\t\t\t\tAND\n\t\tdestino.FLE_USR_LOGIN\t\t\t= origem.FLE_USR_LOGIN\t\t\t\tAND\n\t\tdestino.FLE_ORDEM\t\t\t\t= origem.FLE_ORDEM\t\t\t\t\tAND\n\t\tdestino.FLE_DTHR_MARCADA\t\t= origem.FLE_DTHR_MARCADA\t\t\tAND\n\t\tdestino.FLE_DTHR_CHEGADA\t\t= origem.FLE_DTHR_CHEGADA\n\t\t\n\t\t)\n\n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração\nWHEN MATCHED \nTHEN UPDATE SET      \ndestino.fle_bip=origem.fle_bip,\ndestino.fle_cor=origem.fle_cor,\ndestino.fle_dthr_atendimento=origem.fle_dthr_atendimento,\ndestino.fle_dthr_chegada=origem.fle_dthr_chegada,\ndestino.fle_dthr_chegada_inicial=origem.fle_dthr_chegada_inicial,\ndestino.FLE_DTHR_FINAL=origem.FLE_DTHR_FINAL,\ndestino.fle_dthr_hora_aguardo=origem.fle_dthr_hora_aguardo,\ndestino.fle_dthr_marcada=origem.fle_dthr_marcada,\ndestino.FLE_DTHR_REG=origem.FLE_DTHR_REG,\ndestino.fle_id=origem.fle_id,\ndestino.fle_id_fila_solicitacao_rd=origem.fle_id_fila_solicitacao_rd,\ndestino.fle_ind_ocupado=origem.fle_ind_ocupado,\ndestino.fle_loc_cod=origem.fle_loc_cod,\ndestino.fle_marc_extra=origem.fle_marc_extra,\ndestino.FLE_MFL_RETORNO=origem.FLE_MFL_RETORNO,\ndestino.fle_obs=origem.fle_obs,\ndestino.FLE_OBS_PSV=origem.FLE_OBS_PSV,\ndestino.fle_ordem=origem.fle_ordem,\ndestino.fle_osm_num=origem.fle_osm_num,\ndestino.fle_osm_serie=origem.fle_osm_serie,\ndestino.fle_pac_nome=origem.fle_pac_nome,\ndestino.fle_pac_reg=origem.fle_pac_reg,\ndestino.fle_preferencial=origem.fle_preferencial,\ndestino.fle_proced=origem.fle_proced,\ndestino.fle_psv_cod=origem.fle_psv_cod,\ndestino.FLE_PSV_RESP=origem.FLE_PSV_RESP,\ndestino.fle_psv_t_prefixo=origem.fle_psv_t_prefixo,\ndestino.fle_retorno=origem.fle_retorno,\ndestino.fle_risco_queda=origem.fle_risco_queda,\ndestino.fle_sma_num=origem.fle_sma_num,\ndestino.fle_sma_serie=origem.fle_sma_serie,\ndestino.fle_smm_num=origem.fle_smm_num,\ndestino.fle_status=origem.fle_status,\ndestino.fle_str_cod=origem.fle_str_cod,\ndestino.fle_usr_atendimento=origem.fle_usr_atendimento,\ndestino.fle_usr_final=origem.fle_usr_final,\ndestino.fle_usr_login=origem.fle_usr_login,\ndestino.fle_versao=origem.fle_versao,\ndestino.fle_vulneravel=origem.fle_vulneravel\n\n\n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT \n\tVALUES (  \norigem.estabelecimento,\norigem.fle_dthr_chegada,\norigem.fle_psv_cod,\norigem.fle_str_cod,\norigem.fle_pac_reg,\norigem.fle_dthr_atendimento,\norigem.fle_ordem,\norigem.fle_status,\norigem.fle_usr_login,\norigem.fle_obs,\norigem.fle_dthr_marcada,\norigem.fle_marc_extra,\norigem.FLE_DTHR_FINAL,\norigem.FLE_PSV_RESP,\norigem.FLE_OBS_PSV,\norigem.FLE_MFL_RETORNO,\norigem.FLE_DTHR_REG,\norigem.fle_dthr_chegada_inicial,\norigem.fle_cor,\norigem.fle_bip,\norigem.fle_proced,\norigem.fle_versao,\norigem.fle_usr_atendimento,\norigem.fle_usr_final,\norigem.fle_dthr_hora_aguardo,\norigem.fle_osm_serie,\norigem.fle_osm_num,\norigem.fle_smm_num,\norigem.fle_loc_cod,\norigem.fle_preferencial,\norigem.fle_id,\norigem.fle_sma_serie,\norigem.fle_sma_num,\norigem.fle_ind_ocupado,\norigem.fle_psv_t_prefixo,\norigem.fle_id_fila_solicitacao_rd,\norigem.fle_pac_nome,\norigem.fle_retorno,\norigem.fle_risco_queda,\norigem.fle_vulneravel\n\n) ;\n \n\n\n"
						}
					]
				}
			}
		],
		"concurrency": 5,
		"variables": {
			"StartTime": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Data Warehouse/P&P"
		},
		"annotations": []
	}
}