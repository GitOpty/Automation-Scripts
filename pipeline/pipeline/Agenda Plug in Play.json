{
	"name": "Agenda Plug in Play",
	"properties": {
		"activities": [
			{
				"name": "Agenda Naja",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "SELECT \n       EMP_COD AS 'CD_ESTABELECIMENTO',\n       EMP_NomFan AS 'NM_ESTABELECIMENTO',\n       SUBSTRING(CAST(CAST(AEX.AEX_Data AS DATE)AS VARCHAR(20)),1,10)+ ' ' + SUBSTRING(AEX.AEX_Hora,1,2) + ':' + SUBSTRING(AEX.AEX_Hora,3,2)  AS 'DT_AGENDAMENTO',\n       SUBSTRING(CAST(CAST(AGD.AGD_DATA AS DATE)AS VARCHAR(20)),1,10)+ ' ' + SUBSTRING(AGI.AGI_HoraSeq,1,2) + ':' + SUBSTRING(AGI.AGI_HoraSeq,3,2) AS 'DT_HORA_AGENDA',\n\t AEX.AEX_ATE_Isn,\n       PAC_COD AS CD_PACIENTE,\n       PAC_Nome AS 'NOME_PACIENTE',\n    --    AEX_NomePac AS 'NOME_PACIENTE_AGENDA',\n\n--   (SELECT Top 1 isnull(FNE_DDD, '')+' '+FNE_NumFon\n--    FROM FoneCont\n--    WHERE FNE_PAC_Cod = PAC_Cod\n--      AND FNE_Tipo = 3) AS 'CONTATO 1',\n\n--   (SELECT Top 1 isnull(FNE_DDD, '')+' '+FNE_NumFon\n--    FROM FoneCont\n--    WHERE FNE_PAC_Cod = PAC_Cod\n--      AND FNE_Tipo = 1) AS 'CONTATO 2',\n    --    (isnull(AEX_DDDFone1, '')+''+AEX_NumFone1) AS 'CONTATO 3',\n    --    (isnull(AEX_DDDFone2, '')+''+AEX_NumFone2) AS 'CONTATO 4',\n    --    Paciente.PAC_CPF AS 'CPF',\n       AGD_RAG_Cod AS 'CD_AGENDA',\n       RAG_Nome AS 'DS_AGENDA',\n       exe.MED_Cod as 'CD_MEDICO_AGENDAMENTO',\n       exe.MED_Nome AS 'DS_MEDICO_AGENDAMENTO',\n       exe.MED_Crm AS 'CRM_MEDICO',\n       MED.MED_Cod AS 'CD_MEDICO_AGENDA',\n       MED.MED_Nome AS 'DS_MEDICO_AGENDA',\n       PAX_PRO_Cod AS 'CD_PROCEDIMENTO',\n       PRO_Nome AS 'DS_PROCEDIMENTO',\n       CON_COD AS 'CD_CONVENIO',\n       CON_NomeFant AS 'DS_CONVENIO',\n       AEX_Status AS 'COD_STATUS',\n       CASE\n           WHEN (AEX_Status) = 1 THEN 'Cancelado'\n           WHEN (AEX_Status) = 2 THEN 'Agendado'\n           WHEN (AEX_Status) = 3 THEN 'Confirmado'\n           WHEN (AEX_Status) = 4 THEN 'Atendido na recepção'\n           WHEN (AEX_Status) = 5 THEN 'Pré-Agendado'\n           WHEN (AEX_Status) = 6 THEN 'Pré-Atendido'\n           WHEN (AEX_Status) = 7 THEN 'Aguardando na recepção'\n           WHEN (AEX_Status) = 8 THEN 'Em Atendimento'\n           WHEN (AEX_Status) = 9 THEN 'Atendido pelo médico'\n           WHEN (AEX_Status) = 11 THEN 'Aguardando agendamento'\n           WHEN (AEX_Status) > 100 THEN\n                  (SELECT TOP 1 AST_Nome\n                   FROM AgendaStatus\n                   WHERE AST_Isn = AEX_Status)\n            WHEN PAC_NOME IS NULL THEN 'Livre'       \n       END AS 'STATUS',\n       Cad.USU_Nome AS 'USUARIO_CADASTRO',\n       Conf.USU_Nome AS 'USUARIO_CONFIRMACAO'\n    --    FGA_Dsc AS 'FATOGERADOR'\n\nFROM AGENDA AGD WITH(NOLOCK)\nINNER JOIN AgendaItem AGI WITH(NOLOCK) ON AGI.AGI_AGD_Isn = AGD.AGD_Isn \nLEFT JOIN ProdAgendaExame WITH (NOLOCK) ON AGI_Isn = PAX_AGI_Isn\nLEFT JOIN AgendaExame AEX WITH (NOLOCK) ON AEX_Isn = PAX_AEX_Isn\nLEFT JOIN Empresa WITH (NOLOCK) ON EMP_Cod = agd.AGD_EMP_Cod\nLEFT JOIN Convenio WITH (NOLOCK) ON CON_Cod = AEX_CON_Cod\nLEFT JOIN Paciente WITH (NOLOCK) ON PAC_Cod = AEX_PAC_Cod\nLEFT JOIN Medico Exe WITH (NOLOCK) ON exe.MED_Cod = PAX_MED_MedRea\nleft join medico med with(nolock) on med.MED_Cod = agd.AGD_MED_Cod\nLEFT JOIN RecursoAg WITH (NOLOCK) ON RAG_Cod = PAX_RAG_Cod\nLEFT JOIN Produto WITH (NOLOCK) ON PRO_Cod = PAX_PRO_Cod\nLEFT JOIN Usuario Cad WITH (NOLOCK) ON Cad.USU_Cod = AEX_USU_Cadastro\nLEFT JOIN Usuario Conf WITH (NOLOCK) ON Conf.USU_Cod = AEX_USU_Confirmacao\n-- LEFT JOIN FatoGeradorAgenda WITH (NOLOCK) ON FGA_Cod = AEX_FGA_Cod\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "NAJA_DW",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZSQL_DINAMICO",
						"type": "DatasetReference",
						"parameters": {
							"schema_destino": "dw",
							"tabela_destino": "naja_bi_agenda"
						}
					}
				]
			}
		],
		"folder": {
			"name": "Data Warehouse/Agenda Nacional"
		},
		"annotations": []
	}
}