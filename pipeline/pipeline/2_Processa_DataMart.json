{
	"name": "2_Processa_DataMart",
	"properties": {
		"activities": [
			{
				"name": "Verifica Start Datamart",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT\n    COUNT(1) as QT_REGISTRO \nFROM(\n    SELECT \n        A.ID_PLATAFORMA\n        ,B.DS_PLATAFORMA\n        ,A.TIPO_PROCESSO\n        ,MAX(A.DT_INICIO_PROCESS) DT_INICIO_PROCESS \n        ,CAST(MAX(A.DT_FIM_PROCESS) AS DATE) DT_FIM_PROCESS         \n    FROM DBO.LOG_PROCESSAMENTO_DW A\n    INNER JOIN DBO.cfg_plataforma_dw B ON B.ID_PLATAFORMA = A.ID_PLATAFORMA\n    WHERE UPPER(A.NOME_PROCESSO) LIKE '%CARGA_DW'\n    GROUP BY A.ID_PLATAFORMA\n        ,B.DS_PLATAFORMA\n        ,A.TIPO_PROCESSO\n)TMP    \nWHERE TMP.DT_FIM_PROCESS = CAST(GETDATE() AS DATE)\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AZ_SQL",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Processo",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Verifica Start Datamart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Verifica Start Datamart').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Inicia Atualizacao Datamart",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greaterOrEquals(item().QT_REGISTRO,2 )",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Busca Email",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": "SELECT * FROM ADF.OWNER",
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "AZ_SQL",
												"type": "DatasetReference"
											}
										}
									},
									{
										"name": "Variable Email",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Busca Email",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "email",
											"value": {
												"value": "@activity('Busca Email').output.firstRow['Email']",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Disparado de Erro Datamart Receb",
										"type": "ExecutePipeline",
										"dependsOn": [
											{
												"activity": "Variable Email",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "Send email",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"EmailTo": {
													"value": "@variables('email')",
													"type": "Expression"
												},
												"Subject": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"ErrorMessage": "Falha na atualização do Datamart "
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Execute Datamart Recebimento",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "DM_Recebimento",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true
										}
									},
									{
										"name": "Execute Datamart Prod Diaria Tasy",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "DM_ProdDiaria_TASY",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true
										}
									},
									{
										"name": "Execute Datamart Prod Diaria Smart",
										"type": "ExecutePipeline",
										"dependsOn": [
											{
												"activity": "Execute Datamart Prod Diaria Tasy",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "DM_ProdDiaria_SMART",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"variables": {
			"email": {
				"type": "String"
			},
			"qt_registro": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Data Warehouse/1_Inicializador"
		},
		"annotations": []
	}
}