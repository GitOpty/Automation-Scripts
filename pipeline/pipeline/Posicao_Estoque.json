{
	"name": "Posicao_Estoque",
	"properties": {
		"activities": [
			{
				"name": "Posicao Estoque HTML",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"oracleReaderQuery": "select distinct \n    TO_CHAR(SLE.Dt_Mesano_Referencia,'YYYY-MM-DD')           AS MES_REF,\n    TO_CHAR(SLE.cd_estabelecimento)                          AS CD_ESTABELECIMENTO,\n    ESTB.nm_fantasia_estab                                   AS DS_ESTABELECIMENTO,\n    TO_CHAR(SLE.cd_local_estoque)                            AS CD_LOCAL_ESTOQUE,\n    LE.ds_local_estoque,\n    0                                                       AS CD_ALMOXERIFADO,\n    ''                                                      AS DS_ALMOXERIFADO,\n    CAST(SLE.cd_material AS INT)                            AS CD_MATERIAL,\n    MAT.ds_reduzida                                         AS DS_MATERIAL_SHORT,\n    TO_CHAR(MAT_C.CD_CLASSE_MATERIAL)                       AS CD_CLASSE_MATERIAL,    \n    MAT_C.ds_classe_material                                AS DS_CLASSE_MATERIAL,\n    TO_CHAR(MAT_GRP.CD_GRUPO_MATERIAL)                      AS CD_GRUPO_MATERIAL,\n    MAT_GRP.ds_grupo_material                               AS DS_GRUPO_MATERIAL,\n   -- ds_fabricante Fabricante,       \n    SLE.qt_estoque                                          AS QT_ESTOQUE,\n    ROUND(SLE.vl_custo_medio)                               AS VL_MED_UNIT,\n    ROUND(SLE.vl_custo_medio * QT_ESTOQUE,2)                AS VL_TOTAL,\n    TO_CHAR(MAT.IE_CONSIGNADO)                              AS IE_CONSIGNADO\n    from saldo_estoque SLE\n    \n    left join estabelecimento ESTB\n    on (SLE.cd_estabelecimento = ESTB.cd_estabelecimento)\n    \n    left join local_estoque LE\n    on (LE.cd_estabelecimento = SLE.cd_estabelecimento AND\n        LE.cd_local_estoque = SLE.cd_local_estoque)\n        \n    left join material MAT\n    on (SLE.cd_material = MAT.cd_material) \n    \n    left join material_familia MAT_F\n    on (MAT.nr_seq_familia = MAT_F.nr_sequencia)\n    \n    left join classe_material MAT_C\n    on (MAT.cd_classe_material = MAT_C.cd_classe_material)\n    \n    left join subgrupo_material MAT_SUB\n    on (MAT_C.cd_subgrupo_material = MAT_SUB.cd_subgrupo_material)\n    \n    left join grupo_material MAT_GRP\n    on (MAT_SUB.cd_grupo_material = MAT_GRP.cd_grupo_material)\n    \n    left join mat_fabricante MAT_FAB\n    on MAT.nr_seq_fabric =  MAT_FAB.nr_sequencia    \n  \n    --Where To_Char(SLE.Dt_Mesano_Referencia,'DD/MM/YYYY') = TO_CHAR(TRUNC(SYSDATE,'MM')-30,'DD/MM/YYYY')\n    Where To_Char(SLE.Dt_Mesano_Referencia,'DD/MM/YYYY') = TO_CHAR(TRUNC(SYSDATE,'MM'),'DD/MM/YYYY') ",
						"partitionOption": "None",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "DELETE FROM ESTOQUE_POSICAO\nWHERE MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE()-30 AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE)",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "MES_REF"
								},
								"sink": {
									"name": "MES_REF",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "CD_ESTABELECIMENTO"
								},
								"sink": {
									"name": "CD_ESTABELECIMENTO",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "DS_ESTABELECIMENTO"
								},
								"sink": {
									"name": "DS_ESTABELECIMENTO",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CD_LOCAL_ESTOQUE"
								},
								"sink": {
									"name": "CD_LOCAL_ESTOQUE",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "DS_LOCAL_ESTOQUE"
								},
								"sink": {
									"name": "DS_LOCAL_ESTOQUE",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CD_ALMOXERIFADO"
								},
								"sink": {
									"name": "CD_ALMOXERIFADO",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "DS_ALMOXERIFADO"
								},
								"sink": {
									"name": "DS_ALMOXERIFADO",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CD_MATERIAL"
								},
								"sink": {
									"name": "CD_MATERIAL",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "DS_MATERIAL_SHORT"
								},
								"sink": {
									"name": "DS_MATERIAL_SHORT",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CD_CLASSE_MATERIAL"
								},
								"sink": {
									"name": "CD_CLASSE_MATERIAL",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "DS_CLASSE_MATERIAL"
								},
								"sink": {
									"name": "DS_CLASSE_MATERIAL",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CD_GRUPO_MATERIAL"
								},
								"sink": {
									"name": "CD_GRUPO_MATERIAL",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "DS_GRUPO_MATERIAL"
								},
								"sink": {
									"name": "DS_GRUPO_MATERIAL",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "QT_ESTOQUE"
								},
								"sink": {
									"name": "QT_ESTOQUE",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "VL_MED_UNIT"
								},
								"sink": {
									"name": "VL_MED_UNIT",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "VL_TOTAL"
								},
								"sink": {
									"name": "VL_TOTAL",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "IE_CONSIGNADO"
								},
								"sink": {
									"name": "IE_CONSIGNADO",
									"type": "Int32"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "CloudTasyPrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_ESTOQUE_POSICAO",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Posicao Estoque Sadalla",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Posicao Estoque HTML",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"oracleReaderQuery": "select distinct \n    TO_CHAR(SLE.Dt_Mesano_Referencia,'YYYY-MM-DD')           AS MES_REF,\n    TO_CHAR(SLE.cd_estabelecimento)                          AS CD_ESTABELECIMENTO,\n    ESTB.nm_fantasia_estab                                   AS DS_ESTABELECIMENTO,\n    TO_CHAR(SLE.cd_local_estoque)                            AS CD_LOCAL_ESTOQUE,\n    LE.ds_local_estoque,\n    0                                                       AS CD_ALMOXERIFADO,\n    ''                                                      AS DS_ALMOXERIFADO,\n    CAST(SLE.cd_material AS INT)                            AS CD_MATERIAL,\n    MAT.ds_reduzida                                         AS DS_MATERIAL_SHORT,\n    TO_CHAR(MAT_C.CD_CLASSE_MATERIAL)                       AS CD_CLASSE_MATERIAL,    \n    MAT_C.ds_classe_material                                AS DS_CLASSE_MATERIAL,\n    TO_CHAR(MAT_GRP.CD_GRUPO_MATERIAL)                      AS CD_GRUPO_MATERIAL,\n    MAT_GRP.ds_grupo_material                               AS DS_GRUPO_MATERIAL,\n   -- ds_fabricante Fabricante,       \n    SLE.qt_estoque                                          AS QT_ESTOQUE,\n    ROUND(SLE.vl_custo_medio)                               AS VL_MED_UNIT,\n    ROUND(SLE.vl_custo_medio * QT_ESTOQUE,2)                AS VL_TOTAL,\n    TO_CHAR(MAT.IE_CONSIGNADO)                              AS IE_CONSIGNADO\n    from saldo_estoque SLE\n    \n    left join estabelecimento ESTB\n    on (SLE.cd_estabelecimento = ESTB.cd_estabelecimento)\n    \n    left join local_estoque LE\n    on (LE.cd_estabelecimento = SLE.cd_estabelecimento AND\n        LE.cd_local_estoque = SLE.cd_local_estoque)\n        \n    left join material MAT\n    on (SLE.cd_material = MAT.cd_material) \n    \n    left join material_familia MAT_F\n    on (MAT.nr_seq_familia = MAT_F.nr_sequencia)\n    \n    left join classe_material MAT_C\n    on (MAT.cd_classe_material = MAT_C.cd_classe_material)\n    \n    left join subgrupo_material MAT_SUB\n    on (MAT_C.cd_subgrupo_material = MAT_SUB.cd_subgrupo_material)\n    \n    left join grupo_material MAT_GRP\n    on (MAT_SUB.cd_grupo_material = MAT_GRP.cd_grupo_material)\n    \n    left join mat_fabricante MAT_FAB\n    on MAT.nr_seq_fabric =  MAT_FAB.nr_sequencia    \n  \n    --Where To_Char(SLE.Dt_Mesano_Referencia,'DD/MM/YYYY') = TO_CHAR(TRUNC(SYSDATE,'MM')-30,'DD/MM/YYYY')\n    Where To_Char(SLE.Dt_Mesano_Referencia,'DD/MM/YYYY') = TO_CHAR(TRUNC(SYSDATE,'MM'),'DD/MM/YYYY') ",
						"partitionOption": "None",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "MES_REF"
								},
								"sink": {
									"name": "MES_REF",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "CD_ESTABELECIMENTO"
								},
								"sink": {
									"name": "CD_ESTABELECIMENTO",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "DS_ESTABELECIMENTO"
								},
								"sink": {
									"name": "DS_ESTABELECIMENTO",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CD_LOCAL_ESTOQUE"
								},
								"sink": {
									"name": "CD_LOCAL_ESTOQUE",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "DS_LOCAL_ESTOQUE"
								},
								"sink": {
									"name": "DS_LOCAL_ESTOQUE",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CD_ALMOXERIFADO"
								},
								"sink": {
									"name": "CD_ALMOXERIFADO",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "DS_ALMOXERIFADO"
								},
								"sink": {
									"name": "DS_ALMOXERIFADO",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CD_MATERIAL"
								},
								"sink": {
									"name": "CD_MATERIAL",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "DS_MATERIAL_SHORT"
								},
								"sink": {
									"name": "DS_MATERIAL_SHORT",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CD_CLASSE_MATERIAL"
								},
								"sink": {
									"name": "CD_CLASSE_MATERIAL",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "DS_CLASSE_MATERIAL"
								},
								"sink": {
									"name": "DS_CLASSE_MATERIAL",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CD_GRUPO_MATERIAL"
								},
								"sink": {
									"name": "CD_GRUPO_MATERIAL",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "DS_GRUPO_MATERIAL"
								},
								"sink": {
									"name": "DS_GRUPO_MATERIAL",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "QT_ESTOQUE"
								},
								"sink": {
									"name": "QT_ESTOQUE",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "VL_MED_UNIT"
								},
								"sink": {
									"name": "VL_MED_UNIT",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "VL_TOTAL"
								},
								"sink": {
									"name": "VL_TOTAL",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "IE_CONSIGNADO"
								},
								"sink": {
									"name": "IE_CONSIGNADO",
									"type": "Int32"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "SadallaTasyPrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_ESTOQUE_POSICAO",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Posicao DH ITG",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Posicao Estoque Sadalla",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\nWITH AUX AS(\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , SUM(ETQ.ETQ_QUANTIDADE) AS estoque\n    , ROUND((\n            SUM(CASE \n                    WHEN etq.etq_cml_preco_medio IS NULL\n                        THEN 0\n                    ELSE etq.etq_cml_preco_medio\n                    END * etq.etq_quantidade) / SUM(ETQ.ETQ_QUANTIDADE)\n            ) * 1.0000000000, 10) etq_etq_cml_preco_medio\n    , ROUND(SUM(CASE \n                WHEN etq.etq_cml_preco_medio IS NULL\n                    THEN 0\n                ELSE etq.etq_cml_preco_medio\n                END * etq.etq_quantidade), 10) AS valor_total\n    , mat.mat_prc_ult_entrada AS saldo_residual\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END AS consignado\n    , MAT.MAT_IND_APLIC_DIRETA\nFROM MAT    (nolock)\n    , cfg   (nolock)\n    , gmm   (nolock)\n    , LMA   (nolock)\n    , ETQ   (nolock)\n   \nWHERE (LMA.LMA_GMM_COD = gmm.gmm_cod)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (ETQ.ETQ_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (8 = 8)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nHAVING SUM(etq.etq_quantidade) <> 0\n\nUNION ALL\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , SUM(ETQ.ETQ_QUANTIDADE)\n    , mat.mat_vlr_pm etq_etq_cml_preco_medio\n    , ROUND(SUM(CASE \n                WHEN etq.etq_cml_preco_medio IS NULL\n                    THEN 0\n                ELSE etq.etq_cml_preco_medio\n                END * etq.etq_quantidade), 10)\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nFROM MAT    (nolock)\n    , cfg   (nolock)\n    , gmm   (nolock)\n    , LMA   (nolock)\n    , ETQ   (nolock)\n\nWHERE (LMA.LMA_GMM_COD = gmm.gmm_cod)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (ETQ.ETQ_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (8 = 8)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nHAVING SUM(etq.etq_quantidade) = 0\n\nUNION ALL\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , sum(mma_qtd * mma_tipo_es_fator * - 1)\n    , 0\n    , ROUND(sum(mma_valor * mma_tipo_es_fator * - 1), 10)\n    , mat.mat_prc_ult_entrada AS saldo_residual\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN mma.mma_ind_consig = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END AS consignado\n    , MMA.MMA_IND_APLIC_DIRETA\nFROM MMA (nolock)\nLEFT OUTER JOIN ETQ  (nolock)  ON (mma.mma_mat_cod = etq.etq_mat_cod AND mma.mma_sba_cod = etq.etq_sba_cod)\n        , MAT   (nolock)\n        , cfg   (nolock)\n        , gmm   (nolock)\n        , LMA   (nolock)   \n-- WHERE (cast(mma.mma_data_mov as date) BETWEEN '2021-04-01' and '2021-04-30')\nWHERE (cast(mma.mma_data_mov as date) >= @MES_REF)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (MMA.MMA_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (gmm.gmm_cod = mma.mma_gmm_cod)\n    AND (7 = 7)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN mma.mma_ind_consig = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MMA.MMA_IND_APLIC_DIRETA\n\n)\n\nSELECT \n    @MES_REF                                                                                AS MES_REF,\n    GCC.gcc_cod                                                                             AS CD_ESTABELECIMENTO,\n    GCC.gcc_descr                                                                           AS DS_ESTABELECIMENTO,\n    STR.str_cod                                                                             AS CD_LOCAL_ESTOQUE,\n    STR.str_nome                                                                            AS DS_LOCAL_ESTOQUE,\n    SBA_COD                                                                                 as CD_ALMOXERIFADO,\n    SBA_NOME                                                                                AS DS_ALMOXERIFADO,\n    A.MAT_COD                                                                               AS CD_MATERIAL\n    ,A.MAT_DESC_RESUMIDA                                                                    AS DS_MATERIAL_SHORT\n    ,A.LMA_COD                                                                              AS CD_CLASSE_MATERIAL\n    ,A.LMA_NOME                                                                             AS DS_CLASSE_MATERIAL\n    ,A.gmm_cod                                                                              AS CD_GRUPO_MATERIAL\n    ,A.gmm_nome                                                                             AS DS_GRUPO_MATERIAL\n    ,A.estoque                                                                              AS QT_ESTOQUE\n    ,A.etq_etq_cml_preco_medio                                                              AS VL_MED_UNIT\n    ,A.valor_total                                                                          AS VL_TOTAL\n    ,A.consignado                                                                           AS IE_CONSIGNADO\nFROM AUX A  \nLEFT JOIN SBA SBA (NOLOCK) ON SBA.SBA_COD = A.etq_sba_cod\nLEFT JOIN STR STR (NOLOCK) ON STR.str_cod = SBA.SBA_STR_COD\nLEFT JOIN GCC GCC (NOLOCK) ON GCC.gcc_str_cod = STR.str_str_cod ",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "MES_REF",
									"type": "DateTime",
									"physicalType": "date"
								},
								"sink": {
									"name": "MES_REF",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "CD_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "DS_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_ALMOXERIFADO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_ALMOXERIFADO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_ALMOXERIFADO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_ALMOXERIFADO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_MATERIAL",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "CD_MATERIAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "DS_MATERIAL_SHORT",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_MATERIAL_SHORT",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "DS_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "QT_ESTOQUE",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 38
								},
								"sink": {
									"name": "QT_ESTOQUE",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "VL_MED_UNIT",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 7,
									"precision": 38
								},
								"sink": {
									"name": "VL_MED_UNIT",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "VL_TOTAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 10,
									"precision": 38
								},
								"sink": {
									"name": "VL_TOTAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "IE_CONSIGNADO",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "IE_CONSIGNADO",
									"type": "Int32",
									"physicalType": "int"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SMART_ITAIGARA_PrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_ESTOQUE_POSICAO",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Posicao DH ITB",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Posicao DH ITG",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\nWITH AUX AS(\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , SUM(ETQ.ETQ_QUANTIDADE) AS estoque\n    , ROUND((\n            SUM(CASE \n                    WHEN etq.etq_cml_preco_medio IS NULL\n                        THEN 0\n                    ELSE etq.etq_cml_preco_medio\n                    END * etq.etq_quantidade) / SUM(ETQ.ETQ_QUANTIDADE)\n            ) * 1.0000000000, 10) etq_etq_cml_preco_medio\n    , ROUND(SUM(CASE \n                WHEN etq.etq_cml_preco_medio IS NULL\n                    THEN 0\n                ELSE etq.etq_cml_preco_medio\n                END * etq.etq_quantidade), 10) AS valor_total\n    , mat.mat_prc_ult_entrada AS saldo_residual\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END AS consignado\n    , MAT.MAT_IND_APLIC_DIRETA\nFROM MAT    (nolock)\n    , cfg   (nolock)\n    , gmm   (nolock)\n    , LMA   (nolock)\n    , ETQ   (nolock)\n   \nWHERE (LMA.LMA_GMM_COD = gmm.gmm_cod)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (ETQ.ETQ_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (8 = 8)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nHAVING SUM(etq.etq_quantidade) <> 0\n\nUNION ALL\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , SUM(ETQ.ETQ_QUANTIDADE)\n    , mat.mat_vlr_pm etq_etq_cml_preco_medio\n    , ROUND(SUM(CASE \n                WHEN etq.etq_cml_preco_medio IS NULL\n                    THEN 0\n                ELSE etq.etq_cml_preco_medio\n                END * etq.etq_quantidade), 10)\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nFROM MAT    (nolock)\n    , cfg   (nolock)\n    , gmm   (nolock)\n    , LMA   (nolock)\n    , ETQ   (nolock)\n\nWHERE (LMA.LMA_GMM_COD = gmm.gmm_cod)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (ETQ.ETQ_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (8 = 8)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nHAVING SUM(etq.etq_quantidade) = 0\n\nUNION ALL\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , sum(mma_qtd * mma_tipo_es_fator * - 1)\n    , 0\n    , ROUND(sum(mma_valor * mma_tipo_es_fator * - 1), 10)\n    , mat.mat_prc_ult_entrada AS saldo_residual\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN mma.mma_ind_consig = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END AS consignado\n    , MMA.MMA_IND_APLIC_DIRETA\nFROM MMA (nolock)\nLEFT OUTER JOIN ETQ  (nolock)  ON (mma.mma_mat_cod = etq.etq_mat_cod AND mma.mma_sba_cod = etq.etq_sba_cod)\n        , MAT   (nolock)\n        , cfg   (nolock)\n        , gmm   (nolock)\n        , LMA   (nolock)   \n-- WHERE (cast(mma.mma_data_mov as date) BETWEEN '2021-04-01' and '2021-04-30')\nWHERE (cast(mma.mma_data_mov as date) >= @MES_REF)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (MMA.MMA_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (gmm.gmm_cod = mma.mma_gmm_cod)\n    AND (7 = 7)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN mma.mma_ind_consig = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MMA.MMA_IND_APLIC_DIRETA\n\n)\n\nSELECT \n    @MES_REF                                                                                AS MES_REF,\n    GCC.gcc_cod                                                                             AS CD_ESTABELECIMENTO,\n    GCC.gcc_descr                                                                           AS DS_ESTABELECIMENTO,\n    STR.str_cod                                                                             AS CD_LOCAL_ESTOQUE,\n    STR.str_nome                                                                            AS DS_LOCAL_ESTOQUE,\n    SBA_COD                                                                                 as CD_ALMOXERIFADO,\n    SBA_NOME                                                                                AS DS_ALMOXERIFADO,\n    A.MAT_COD                                                                               AS CD_MATERIAL\n    ,A.MAT_DESC_RESUMIDA                                                                    AS DS_MATERIAL_SHORT\n    ,A.LMA_COD                                                                              AS CD_CLASSE_MATERIAL\n    ,A.LMA_NOME                                                                             AS DS_CLASSE_MATERIAL\n    ,A.gmm_cod                                                                              AS CD_GRUPO_MATERIAL\n    ,A.gmm_nome                                                                             AS DS_GRUPO_MATERIAL\n    ,A.estoque                                                                              AS QT_ESTOQUE\n    ,A.etq_etq_cml_preco_medio                                                              AS VL_MED_UNIT\n    ,A.valor_total                                                                          AS VL_TOTAL\n    ,A.consignado                                                                           AS IE_CONSIGNADO\nFROM AUX A  \nLEFT JOIN SBA SBA (NOLOCK) ON SBA.SBA_COD = A.etq_sba_cod\nLEFT JOIN STR STR (NOLOCK) ON STR.str_cod = SBA.SBA_STR_COD\nLEFT JOIN GCC GCC (NOLOCK) ON GCC.gcc_str_cod = STR.str_str_cod ",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "MES_REF",
									"type": "DateTime",
									"physicalType": "date"
								},
								"sink": {
									"name": "MES_REF",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "CD_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "DS_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_ALMOXERIFADO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_ALMOXERIFADO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_ALMOXERIFADO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_ALMOXERIFADO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_MATERIAL",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "CD_MATERIAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "DS_MATERIAL_SHORT",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_MATERIAL_SHORT",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "DS_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "QT_ESTOQUE",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 38
								},
								"sink": {
									"name": "QT_ESTOQUE",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "VL_MED_UNIT",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 7,
									"precision": 38
								},
								"sink": {
									"name": "VL_MED_UNIT",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "VL_TOTAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 10,
									"precision": 38
								},
								"sink": {
									"name": "VL_TOTAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "IE_CONSIGNADO",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "IE_CONSIGNADO",
									"type": "Int32",
									"physicalType": "int"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SMART_ITABUNA_PrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_ESTOQUE_POSICAO",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Posicao HOSL",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Posicao DH ITB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\nWITH AUX AS(\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , SUM(ETQ.ETQ_QUANTIDADE) AS estoque\n    , ROUND((\n            SUM(CASE \n                    WHEN etq.etq_cml_preco_medio IS NULL\n                        THEN 0\n                    ELSE etq.etq_cml_preco_medio\n                    END * etq.etq_quantidade) / SUM(ETQ.ETQ_QUANTIDADE)\n            ) * 1.0000000000, 10) etq_etq_cml_preco_medio\n    , ROUND(SUM(CASE \n                WHEN etq.etq_cml_preco_medio IS NULL\n                    THEN 0\n                ELSE etq.etq_cml_preco_medio\n                END * etq.etq_quantidade), 10) AS valor_total\n    , mat.mat_prc_ult_entrada AS saldo_residual\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END AS consignado\n    , MAT.MAT_IND_APLIC_DIRETA\nFROM MAT    (nolock)\n    , cfg   (nolock)\n    , gmm   (nolock)\n    , LMA   (nolock)\n    , ETQ   (nolock)\n   \nWHERE (LMA.LMA_GMM_COD = gmm.gmm_cod)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (ETQ.ETQ_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (8 = 8)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nHAVING SUM(etq.etq_quantidade) <> 0\n\nUNION ALL\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , SUM(ETQ.ETQ_QUANTIDADE)\n    , mat.mat_vlr_pm etq_etq_cml_preco_medio\n    , ROUND(SUM(CASE \n                WHEN etq.etq_cml_preco_medio IS NULL\n                    THEN 0\n                ELSE etq.etq_cml_preco_medio\n                END * etq.etq_quantidade), 10)\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nFROM MAT    (nolock)\n    , cfg   (nolock)\n    , gmm   (nolock)\n    , LMA   (nolock)\n    , ETQ   (nolock)\n\nWHERE (LMA.LMA_GMM_COD = gmm.gmm_cod)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (ETQ.ETQ_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (8 = 8)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nHAVING SUM(etq.etq_quantidade) = 0\n\nUNION ALL\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , sum(mma_qtd * mma_tipo_es_fator * - 1)\n    , 0\n    , ROUND(sum(mma_valor * mma_tipo_es_fator * - 1), 10)\n    , mat.mat_prc_ult_entrada AS saldo_residual\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN mma.mma_ind_consig = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END AS consignado\n    , MMA.MMA_IND_APLIC_DIRETA\nFROM MMA (nolock)\nLEFT OUTER JOIN ETQ  (nolock)  ON (mma.mma_mat_cod = etq.etq_mat_cod AND mma.mma_sba_cod = etq.etq_sba_cod)\n        , MAT   (nolock)\n        , cfg   (nolock)\n        , gmm   (nolock)\n        , LMA   (nolock)   \n-- WHERE (cast(mma.mma_data_mov as date) BETWEEN '2021-04-01' and '2021-04-30')\nWHERE (cast(mma.mma_data_mov as date) >= @MES_REF)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (MMA.MMA_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (gmm.gmm_cod = mma.mma_gmm_cod)\n    AND (7 = 7)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN mma.mma_ind_consig = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MMA.MMA_IND_APLIC_DIRETA\n\n)\n\nSELECT \n    @MES_REF                                                                                AS MES_REF,\n    GCC.gcc_cod                                                                             AS CD_ESTABELECIMENTO,\n    GCC.gcc_descr                                                                           AS DS_ESTABELECIMENTO,\n    STR.str_cod                                                                             AS CD_LOCAL_ESTOQUE,\n    STR.str_nome                                                                            AS DS_LOCAL_ESTOQUE,\n    SBA_COD                                                                                 as CD_ALMOXERIFADO,\n    SBA_NOME                                                                                AS DS_ALMOXERIFADO,\n    A.MAT_COD                                                                               AS CD_MATERIAL\n    ,A.MAT_DESC_RESUMIDA                                                                    AS DS_MATERIAL_SHORT\n    ,A.LMA_COD                                                                              AS CD_CLASSE_MATERIAL\n    ,A.LMA_NOME                                                                             AS DS_CLASSE_MATERIAL\n    ,A.gmm_cod                                                                              AS CD_GRUPO_MATERIAL\n    ,A.gmm_nome                                                                             AS DS_GRUPO_MATERIAL\n    ,A.estoque                                                                              AS QT_ESTOQUE\n    ,A.etq_etq_cml_preco_medio                                                              AS VL_MED_UNIT\n    ,A.valor_total                                                                          AS VL_TOTAL\n    ,A.consignado                                                                           AS IE_CONSIGNADO\nFROM AUX A  \nLEFT JOIN SBA SBA (NOLOCK) ON SBA.SBA_COD = A.etq_sba_cod\nLEFT JOIN STR STR (NOLOCK) ON STR.str_cod = SBA.SBA_STR_COD\nLEFT JOIN GCC GCC (NOLOCK) ON GCC.gcc_str_cod = STR.str_str_cod ",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "MES_REF",
									"type": "DateTime",
									"physicalType": "date"
								},
								"sink": {
									"name": "MES_REF",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "CD_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "DS_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_ALMOXERIFADO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_ALMOXERIFADO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_ALMOXERIFADO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_ALMOXERIFADO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_MATERIAL",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "CD_MATERIAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "DS_MATERIAL_SHORT",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_MATERIAL_SHORT",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "DS_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "QT_ESTOQUE",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 38
								},
								"sink": {
									"name": "QT_ESTOQUE",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "VL_MED_UNIT",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 7,
									"precision": 38
								},
								"sink": {
									"name": "VL_MED_UNIT",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "VL_TOTAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 10,
									"precision": 38
								},
								"sink": {
									"name": "VL_TOTAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "IE_CONSIGNADO",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "IE_CONSIGNADO",
									"type": "Int32",
									"physicalType": "int"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SMART_HOSL_PrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_ESTOQUE_POSICAO",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Posicao Oftalmoclin",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Posicao HOSL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\nWITH AUX AS(\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , SUM(ETQ.ETQ_QUANTIDADE) AS estoque\n    , ROUND((\n            SUM(CASE \n                    WHEN etq.etq_cml_preco_medio IS NULL\n                        THEN 0\n                    ELSE etq.etq_cml_preco_medio\n                    END * etq.etq_quantidade) / SUM(ETQ.ETQ_QUANTIDADE)\n            ) * 1.0000000000, 10) etq_etq_cml_preco_medio\n    , ROUND(SUM(CASE \n                WHEN etq.etq_cml_preco_medio IS NULL\n                    THEN 0\n                ELSE etq.etq_cml_preco_medio\n                END * etq.etq_quantidade), 10) AS valor_total\n    , mat.mat_prc_ult_entrada AS saldo_residual\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END AS consignado\n    , MAT.MAT_IND_APLIC_DIRETA\nFROM MAT    (nolock)\n    , cfg   (nolock)\n    , gmm   (nolock)\n    , LMA   (nolock)\n    , ETQ   (nolock)\n   \nWHERE (LMA.LMA_GMM_COD = gmm.gmm_cod)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (ETQ.ETQ_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (8 = 8)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nHAVING SUM(etq.etq_quantidade) <> 0\n\nUNION ALL\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , SUM(ETQ.ETQ_QUANTIDADE)\n    , mat.mat_vlr_pm etq_etq_cml_preco_medio\n    , ROUND(SUM(CASE \n                WHEN etq.etq_cml_preco_medio IS NULL\n                    THEN 0\n                ELSE etq.etq_cml_preco_medio\n                END * etq.etq_quantidade), 10)\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nFROM MAT    (nolock)\n    , cfg   (nolock)\n    , gmm   (nolock)\n    , LMA   (nolock)\n    , ETQ   (nolock)\n\nWHERE (LMA.LMA_GMM_COD = gmm.gmm_cod)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (ETQ.ETQ_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (8 = 8)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nHAVING SUM(etq.etq_quantidade) = 0\n\nUNION ALL\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , sum(mma_qtd * mma_tipo_es_fator * - 1)\n    , 0\n    , ROUND(sum(mma_valor * mma_tipo_es_fator * - 1), 10)\n    , mat.mat_prc_ult_entrada AS saldo_residual\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN mma.mma_ind_consig = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END AS consignado\n    , MMA.MMA_IND_APLIC_DIRETA\nFROM MMA (nolock)\nLEFT OUTER JOIN ETQ  (nolock)  ON (mma.mma_mat_cod = etq.etq_mat_cod AND mma.mma_sba_cod = etq.etq_sba_cod)\n        , MAT   (nolock)\n        , cfg   (nolock)\n        , gmm   (nolock)\n        , LMA   (nolock)   \n-- WHERE (cast(mma.mma_data_mov as date) BETWEEN '2021-04-01' and '2021-04-30')\nWHERE (cast(mma.mma_data_mov as date) >= @MES_REF)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (MMA.MMA_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (gmm.gmm_cod = mma.mma_gmm_cod)\n    AND (7 = 7)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN mma.mma_ind_consig = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MMA.MMA_IND_APLIC_DIRETA\n\n)\n\nSELECT \n    @MES_REF                                                                                AS MES_REF,\n    GCC.gcc_cod                                                                             AS CD_ESTABELECIMENTO,\n    GCC.gcc_descr                                                                           AS DS_ESTABELECIMENTO,\n    STR.str_cod                                                                             AS CD_LOCAL_ESTOQUE,\n    STR.str_nome                                                                            AS DS_LOCAL_ESTOQUE,\n    SBA_COD                                                                                 as CD_ALMOXERIFADO,\n    SBA_NOME                                                                                AS DS_ALMOXERIFADO,\n    A.MAT_COD                                                                               AS CD_MATERIAL\n    ,A.MAT_DESC_RESUMIDA                                                                    AS DS_MATERIAL_SHORT\n    ,A.LMA_COD                                                                              AS CD_CLASSE_MATERIAL\n    ,A.LMA_NOME                                                                             AS DS_CLASSE_MATERIAL\n    ,A.gmm_cod                                                                              AS CD_GRUPO_MATERIAL\n    ,A.gmm_nome                                                                             AS DS_GRUPO_MATERIAL\n    ,A.estoque                                                                              AS QT_ESTOQUE\n    ,A.etq_etq_cml_preco_medio                                                              AS VL_MED_UNIT\n    ,A.valor_total                                                                          AS VL_TOTAL\n    ,A.consignado                                                                           AS IE_CONSIGNADO\nFROM AUX A  \nLEFT JOIN SBA SBA (NOLOCK) ON SBA.SBA_COD = A.etq_sba_cod\nLEFT JOIN STR STR (NOLOCK) ON STR.str_cod = SBA.SBA_STR_COD\nLEFT JOIN GCC GCC (NOLOCK) ON GCC.gcc_str_cod = STR.str_str_cod ",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "MES_REF",
									"type": "DateTime",
									"physicalType": "date"
								},
								"sink": {
									"name": "MES_REF",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "CD_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "DS_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_ALMOXERIFADO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_ALMOXERIFADO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_ALMOXERIFADO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_ALMOXERIFADO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_MATERIAL",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "CD_MATERIAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "DS_MATERIAL_SHORT",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_MATERIAL_SHORT",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "DS_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "QT_ESTOQUE",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 38
								},
								"sink": {
									"name": "QT_ESTOQUE",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "VL_MED_UNIT",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 7,
									"precision": 38
								},
								"sink": {
									"name": "VL_MED_UNIT",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "VL_TOTAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 10,
									"precision": 38
								},
								"sink": {
									"name": "VL_TOTAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "IE_CONSIGNADO",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "IE_CONSIGNADO",
									"type": "Int32",
									"physicalType": "int"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_ESTOQUE_POSICAO",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Posicao IOF",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Posicao Oftalmoclin",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\nWITH AUX AS(\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , SUM(ETQ.ETQ_QUANTIDADE) AS estoque\n    , ROUND((\n            SUM(CASE \n                    WHEN etq.etq_cml_preco_medio IS NULL\n                        THEN 0\n                    ELSE etq.etq_cml_preco_medio\n                    END * etq.etq_quantidade) / SUM(ETQ.ETQ_QUANTIDADE)\n            ) * 1.0000000000, 10) etq_etq_cml_preco_medio\n    , ROUND(SUM(CASE \n                WHEN etq.etq_cml_preco_medio IS NULL\n                    THEN 0\n                ELSE etq.etq_cml_preco_medio\n                END * etq.etq_quantidade), 10) AS valor_total\n    , mat.mat_prc_ult_entrada AS saldo_residual\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END AS consignado\n    , MAT.MAT_IND_APLIC_DIRETA\nFROM MAT    (nolock)\n    , cfg   (nolock)\n    , gmm   (nolock)\n    , LMA   (nolock)\n    , ETQ   (nolock)\n   \nWHERE (LMA.LMA_GMM_COD = gmm.gmm_cod)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (ETQ.ETQ_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (8 = 8)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nHAVING SUM(etq.etq_quantidade) <> 0\n\nUNION ALL\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , SUM(ETQ.ETQ_QUANTIDADE)\n    , mat.mat_vlr_pm etq_etq_cml_preco_medio\n    , ROUND(SUM(CASE \n                WHEN etq.etq_cml_preco_medio IS NULL\n                    THEN 0\n                ELSE etq.etq_cml_preco_medio\n                END * etq.etq_quantidade), 10)\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nFROM MAT    (nolock)\n    , cfg   (nolock)\n    , gmm   (nolock)\n    , LMA   (nolock)\n    , ETQ   (nolock)\n\nWHERE (LMA.LMA_GMM_COD = gmm.gmm_cod)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (ETQ.ETQ_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (8 = 8)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN MAT.MAT_IND_CONSIGNADO = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MAT.MAT_IND_APLIC_DIRETA\nHAVING SUM(etq.etq_quantidade) = 0\n\nUNION ALL\n\nSELECT \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , sum(mma_qtd * mma_tipo_es_fator * - 1)\n    , 0\n    , ROUND(sum(mma_valor * mma_tipo_es_fator * - 1), 10)\n    , mat.mat_prc_ult_entrada AS saldo_residual\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN mma.mma_ind_consig = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END AS consignado\n    , MMA.MMA_IND_APLIC_DIRETA\nFROM MMA (nolock)\nLEFT OUTER JOIN ETQ  (nolock)  ON (mma.mma_mat_cod = etq.etq_mat_cod AND mma.mma_sba_cod = etq.etq_sba_cod)\n        , MAT   (nolock)\n        , cfg   (nolock)\n        , gmm   (nolock)\n        , LMA   (nolock)   \n-- WHERE (cast(mma.mma_data_mov as date) BETWEEN '2021-04-01' and '2021-04-30')\nWHERE (cast(mma.mma_data_mov as date) >= @MES_REF)\n    AND (LMA.LMA_GMM_COD = MAT.MAT_GMM_COD)\n    AND (LMA.LMA_COD = MAT.MAT_LMA_COD)\n    AND (MMA.MMA_MAT_COD = MAT.MAT_COD)\n    AND (MAT.MAT_COD > 0)\n    AND (gmm.gmm_cod = mma.mma_gmm_cod)\n    AND (7 = 7)\nGROUP BY \n    ETQ.etq_sba_cod\n    , MAT.MAT_COD\n    , MAT.MAT_DESC_RESUMIDA\n    , MAT.MAT_CONS_MEDIO\n    , MAT.MAT_UNM_COD_SAIDA\n    , MAT.mat_vlr_pm\n    , cfg.cfg_emp\n    , LMA.LMA_NOME\n    , gmm.gmm_nome\n    , gmm.gmm_cod\n    , LMA.LMA_COD\n    , mat.mat_prc_ult_entrada\n    , mat.mat_unm_cod_entrada\n    , MAT.MAT_IND_FRACIONADO\n    , MAT.MAT_FAT_CONV_S_V\n    , CASE \n        WHEN mma.mma_ind_consig = 'S'\n            THEN 'S'\n        ELSE 'N'\n        END\n    , MMA.MMA_IND_APLIC_DIRETA\n\n)\n\nSELECT \n    @MES_REF                                                                                AS MES_REF,\n    GCC.gcc_cod                                                                             AS CD_ESTABELECIMENTO,\n    GCC.gcc_descr                                                                           AS DS_ESTABELECIMENTO,\n    STR.str_cod                                                                             AS CD_LOCAL_ESTOQUE,\n    STR.str_nome                                                                            AS DS_LOCAL_ESTOQUE,\n    SBA_COD                                                                                 as CD_ALMOXERIFADO,\n    SBA_NOME                                                                                AS DS_ALMOXERIFADO,\n    A.MAT_COD                                                                               AS CD_MATERIAL\n    ,A.MAT_DESC_RESUMIDA                                                                    AS DS_MATERIAL_SHORT\n    ,A.LMA_COD                                                                              AS CD_CLASSE_MATERIAL\n    ,A.LMA_NOME                                                                             AS DS_CLASSE_MATERIAL\n    ,A.gmm_cod                                                                              AS CD_GRUPO_MATERIAL\n    ,A.gmm_nome                                                                             AS DS_GRUPO_MATERIAL\n    ,A.estoque                                                                              AS QT_ESTOQUE\n    ,A.etq_etq_cml_preco_medio                                                              AS VL_MED_UNIT\n    ,A.valor_total                                                                          AS VL_TOTAL\n    ,A.consignado                                                                           AS IE_CONSIGNADO\nFROM AUX A  \nLEFT JOIN SBA SBA (NOLOCK) ON SBA.SBA_COD = A.etq_sba_cod\nLEFT JOIN STR STR (NOLOCK) ON STR.str_cod = SBA.SBA_STR_COD\nLEFT JOIN GCC GCC (NOLOCK) ON GCC.gcc_str_cod = STR.str_str_cod ",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "MES_REF",
									"type": "DateTime",
									"physicalType": "date"
								},
								"sink": {
									"name": "MES_REF",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "CD_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "DS_ESTABELECIMENTO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_LOCAL_ESTOQUE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_ALMOXERIFADO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_ALMOXERIFADO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_ALMOXERIFADO",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_ALMOXERIFADO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_MATERIAL",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "CD_MATERIAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "DS_MATERIAL_SHORT",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_MATERIAL_SHORT",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "DS_CLASSE_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CD_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "CD_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DS_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "DS_GRUPO_MATERIAL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "QT_ESTOQUE",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 38
								},
								"sink": {
									"name": "QT_ESTOQUE",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "VL_MED_UNIT",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 7,
									"precision": 38
								},
								"sink": {
									"name": "VL_MED_UNIT",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "VL_TOTAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 10,
									"precision": 38
								},
								"sink": {
									"name": "VL_TOTAL",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "IE_CONSIGNADO",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "IE_CONSIGNADO",
									"type": "Int32",
									"physicalType": "int"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SMART_IOF_PrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_ESTOQUE_POSICAO",
						"type": "DatasetReference"
					}
				]
			}
		],
		"folder": {
			"name": "Estoque"
		},
		"annotations": []
	}
}