{
	"name": "Dev_Extracao_Smart",
	"properties": {
		"description": "Criado somente para extrair para validação",
		"activities": [
			{
				"name": "Ciclo Receita Smart",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "with ctf as(\n\n    SELECT\n        x.ctf_cod    \n        ,x.ctf_tipo\n        ,case\n            when UPPER(x.ctf_categ) = 'C' then 'Consultas'\n            when UPPER(x.ctf_categ) = 'R' then 'Cirurgias'\n            when UPPER(x.ctf_categ) = 'E' then 'Exames'\n            when UPPER(x.ctf_categ) = 'T' then 'Taxas'\n            when UPPER(x.ctf_categ) = 'D' then 'Diárias'\n            when UPPER(x.ctf_categ) = 'A' then 'Terapia'\n            when UPPER(x.ctf_categ) = 'M' then 'Materiais'\n            when UPPER(x.ctf_categ) = 'S' then 'Materiais Especiais'\n            when UPPER(x.ctf_categ) = 'N' then 'Medicamentos'\n            when UPPER(x.ctf_categ) = 'G' then 'Gases'\n            when UPPER(x.ctf_categ) = 'O' then 'Outros'\n          end DS_CLASSIF_PROCEDIMENTO  \n    from dbo.ctf x\n)\n\n,aux_pre_fat as(\n\n    SELECT 'A' AS CD_TIPO_PFAT , 'ABERTO' AS DS_TIPO_PFAT\n        UNION ALL\n    SELECT 'P' AS CD_TIPO_PFAT , 'PROCESSADO' AS DS_TIPO_PFAT\n        UNION ALL\n    SELECT 'X' AS CD_TIPO_PFAT , 'EM PROCESSAMENTO' AS DS_TIPO_PFAT\n        UNION ALL\n    SELECT 'R' AS CD_TIPO_PFAT , 'PROCESSAMENTO INTERROPIDO POR ITENS SEM RATEIO' AS DS_TIPO_PFAT\n        UNION ALL                        \n    SELECT 'Z' AS CD_TIPO_PFAT , 'PRE-FATURA ZERADA' AS DS_TIPO_PFAT\n                       \n     \n)\n\n,aux_status_fat as(\n    SELECT 'A' AS CD_TIPO_FAT, 'ABERTO' AS DS_STATUS_FAT\n        UNION ALL\n    SELECT 'P' AS CD_TIPO_FAT, 'PENDENTE' AS DS_STATUS_FAT\n        UNION ALL\n    SELECT 'F' AS CD_TIPO_FAT, 'FATURADO' AS DS_STATUS_FAT\n        UNION ALL\n    SELECT 'C' AS CD_TIPO_FAT, 'CANCELADO' AS DS_STATUS_FAT\n    \n\n)\n\n\n\n,prod as(\nSELECT\n    pac.pac_nome\n    ,a.osm_pac                                                                              as cd_pessoa_fisica\n    ,cast(a.osm_num as varchar(15))                                                         as nr_atendimento\n    ,cast(a.osm_serie as varchar(15))                                                       as nr_interno_conta\n    ,cast(a.osm_serie as varchar(5)) + '.' + cast(a.osm_num as varchar(15))                 as nr_os\n    ,a.osm_ctle_cnv                                                                         as nr_guia\n    ,a.osm_serie\n    ,a.osm_num\n    ,a.osm_dthr                                                                             as dt_entrada\n    ,a.osm_mreq                                                                             as cd_medico_sol\n    ,a.osm_atend                                                                            as cd_tipo_atend\n    ,a.osm_mcnv                                                                             as cd_carterinha_pac\n    ,a.osm_w_senha                                                                          as senha_conv\n    ,a.osm_cid_cod                                                                          as cd_cid\n    ,a.osm_pln_cod                                                                          as cd_plano_convenio\n    ,a.osm_leg_cod                                                                          as cd_estabelecimento\n    ,a.osm_cnv                                                                              as cd_convenio\n    ,a.osm_str                                                                              as cd_setor_atendimento\n    ,itm.smm_str                                                                            as cd_setor_executante\n    ,itm.smm_dthr_lanc                                                                      as dt_lanc_item\n    -- ,itm.smm_dthr_exec                                                                      as dt_lanc_item\n    ,itm.smm_med                                                                            as cd_medico_executante\n    ,itm.smm_pre_ccv                                                                        as cd_item_conv\n    ,smk.smk_cod                                                                            as cd_item_smart\n    -- ,ISNULL(dp.cod_thm_1992,dp.cod_thm_1990)                                                as cd_amb\n    ,smk.smk_amb                                                                             as cd_amb\n    ,smk.smk_ctf\n    ,smk.smk_tipo\n    ,smk.smk_nome                                                                           as ds_item\n    ,itm.smm_motivo_cancela                                                                 as motivo_cancel_item\n    ,itm.smm_canc_mot_cod                                                                   as cod_motivo_cancel_item\n    ,itm.smm_rpi_serie                                                                      as nr_serie_repasse\n    ,itm.smm_rpi_num                                                                        as nr_repasse\n    ,itm.smm_pacote                                                                         as ie_pacote\n    ,itm.smm_fat_serie\n    ,itm.smm_fat\n    ,itm.smm_tipo_fatura\n    ,itm.smm_sfat\n    ,itm.smm_mns_serie\n    ,itm.smm_mns_num                                                                      \n    ,itm.smm_qt                                                                             as qtd\n    ,itm.smm_vlr+ isnull(itm.smm_ajuste_vlr,0)                                              as vl_item\n    ,itm.smm_num\n    ,itm.smm_dthr_alter                                                                     as dt_atualizacao\nFROM dbo.osm a                  (NOLOCK)\n-- left join dbo.hsp inter         (nolock) on inter.hsp_num = a.osm_hsp_num   \ninner join dbo.pac pac          (NOLOCK) on pac.pac_reg = a.osm_pac\ninner join dbo.smm itm          (NOLOCK) on itm.smm_osm = a.osm_num and itm.smm_osm_serie = a.osm_serie\ninner join dbo.smk smk           (NOLOCK) on smk.smk_cod = itm.smm_cod and smk.smk_tipo = itm.smm_tpcod\n-- left join dbo.cbhpm5_lpm dp     (NOLOCK) on dp.cod_cbhpm5 = itm.smm_pre_ccv\nWHERE \n    --  a.osm_num = 107911\n    --  a.osm_num in (109642,108325,61936,107911,90371)\n    --    and a.osm_serie = 120\n    --    and itm.smm_vlr <> 0\n        (itm.smm_pacote IS NULL OR ( itm.smm_pacote = 'C' )) \n    -- and year(cast(itm.smm_dthr_lanc as date)) = 2019\n       and itm.smm_canc_mot_cod is null \n       and itm.smm_sfat <> 'C' \n       and itm.smm_exec <> 'C'\n       and itm.smm_str like '%'\n       and smk.smk_ctf LIKE '%'\n    \n)\n\nselect \n    -- convert(varchar(10),a.dt_lancamento,111)\n    CAST(CAST(a.osm_serie as varchar(10)) \n        + cast(a.osm_num as varchar(50)) \n        + CAST(a.smm_num AS VARCHAR(50))\n        + CAST(a.cd_pessoa_fisica as varchar(50))\n         AS DECIMAL)                                                                       as NR_SEQUENCIA\n    ,a.cd_pessoa_fisica\n    ,a.nr_atendimento\n    ,a.nr_interno_conta\n    ,a.nr_os\n    ,a.cd_carterinha_pac\n    ,RTRIM(LTRIM(replace(a.nr_guia,'\"','')))                                                as nr_guia\n    ,a.cd_cid\n    ,RTRIM(LTRIM(replace(a.senha_conv,'\"','')))                                             as senha_conv\n    ,emp.emp_cgc                                                                            as cgc_convenio\n    ,emp.emp_raz_soc                                                                        as nm_razao_social\n    ,emp.emp_nome_fantasia                                                                  as nm_nome_fantasia\n    ,a.cd_convenio                                                                          as cd_convenio  \n    ,conv.cnv_nome                                                                          as ds_convenio\n    ,a.dt_entrada\n    ,G.gcc_cod                                                                              AS cd_estabelecimento\n    ,G.gcc_descr                                                                            AS ds_estabelecimento\n    ,g_fat.gcc_cod                                                                          as cd_estab_fat\n    ,g_fat.gcc_descr                                                                        as ds_estab_fat\n    ,str.str_nome                                                                           as ds_setor_atendimento\n    ,str_exec.str_nome                                                                      as ds_setor_executante\n    ,a.dt_lanc_item\n    ,c.DS_CLASSIF_PROCEDIMENTO                                                              as classif_item\n    ,a.cd_amb\n    ,a.cd_item_conv                                                                         as cd_item    \n    ,replace(a.ds_item,',','')                                                              as ds_item\n    ,a.qtd                                                                                  as qt_item\n    ,a.vl_item                                                                              as vl_item\n    ,fat.fat_dini                                                                           as dt_inicio_pre_fat\n    ,cast(fat.fat_serie as varchar(10)) + '-' + cast(fat.fat_num as varchar(15))            as pre_fatura\n    ,DS_TIPO_PFAT                                                                           as status_pre_fatura\n    ,DS_STATUS_FAT                                                                          as status_faturamento\n    ,nfs.nfs_numero                                                                         as nr_nfs\n    ,nfs.nfs_dt_emis                                                                        as dt_emissao_nf\n    ,nfs.nfs_dt_vcto                                                                        as dt_nf_vcto\n    ,nfs.nfs_dt_envio                                                                       as dt_envio_nfs\n    ,mns.MNS_DT                                                                             as dt_receb\n    ,round(isnull(ext.ext_valor_receb,0),2)                                                 as vlr_receb\n    ,round(isnull(GL_INI.ext_valor_glosa,0),2)                                                 as vlr_glosa_inicial\n    ,round(isnull(GL_AC.EXT_GLOSA_ACATADA,0),2)                                               as vlr_glosa_acatada\n    ,round(\n          round(a.vl_item,2) \n        - round(isnull(ext.ext_valor_receb,0),2) \n        -- - round(isnull(ext.ext_valor_glosa,0),2) \n        - round(isnull(GL_AC.EXT_GLOSA_ACATADA,0),2)\n        ,2)                                         as vlr_saldo\n    ,case\n        when a.smm_sfat <> 'F' then 'CTA A FATURAR'\n        when isnull(ext.ext_valor_receb,0) = 0 and isnull(GL_INI.ext_valor_glosa,0) = 0 and DATEDIFF(DAY,nfs.nfs_dt_vcto,isnull(mns.MNS_DT,getdate())) > 0 then 'INADIMPLENTE'\n        when isnull(ext.ext_valor_receb,0) = 0 and  DATEDIFF(DAY,nfs.nfs_dt_vcto,isnull(mns.MNS_DT,getdate())) < 1 and mns.MNS_DT is null then 'CONTA A VENCER'\n        when isnull(GL_INI.ext_valor_glosa,0) > 0 then 'GLOSA'\n        when round(a.vl_item,2)  = round(isnull(ext.ext_valor_receb,0),2) and a.smm_sfat = 'F' then 'PG INTEGRAL'\n        when round(a.vl_item,2)  > round(isnull(ext.ext_valor_receb,0),2) and isnull(GL_INI.ext_valor_glosa,0) = 0 then 'PG PARCIALMENTE'\n        else 'S/STATUS'        \n        -- else 'À VENCER'\n      end status_cta_receber  \n    ,DATEDIFF(DAY,nfs.nfs_dt_envio,isnull(nfs.NFS_DT_RECEB,getdate()))                    as tempo_receb    \n    ,DATEDIFF(DAY,a.dt_entrada,isnull(fat.fat_dini,getdate()))                            as tempo_faturamento\n    ,a.dt_atualizacao\n    ,GETDATE()                                                                             as dt_geracao_query\n    ,pac.pac_nome\nfrom prod a\ninner join dbo.str str              (NOLOCK)        on str.str_cod = a.cd_setor_atendimento\ninner join dbo.str str_exec         (NOLOCK)        on str_exec.str_cod = a.cd_setor_executante\ninner join dbo.gcc g                (NOLOCK)        on g.gcc_str_cod = str.str_str_cod\ninner join dbo.cnv conv             (NOLOCK)        on conv.cnv_cod = a.cd_convenio\ninner join dbo.emp                  (nolock)        on emp_cod = conv.cnv_emp_cod  \ninner join ctf   c                                  on ctf_cod = a.smk_ctf  and ctf_tipo = a.smk_tipo\nleft join dbo.fat fat               (NOLOCK)        on fat.fat_num = a.smm_fat and fat.fat_serie = a.smm_fat_serie and a.cd_convenio = fat.fat_cnv\nleft join aux_status_fat                            on CD_TIPO_FAT = a.smm_sfat\nleft join dbo.nfs nfs               (nolock)        on nfs.nfs_numero = fat.fat_nfs_numero and fat.fat_nfs_tipo = nfs.nfs_tipo and nfs.nfs_serie = fat_nfs_serie\nleft join aux_pre_fat                               on CD_TIPO_PFAT = fat.fat_stat\nleft join dbo.gcc g_fat             (nolock)        on g_fat.gcc_str_cod = fat.fat_str_cod_sol\ninner join dbo.pac  pac             (nolock)        on pac.pac_reg = a.cd_pessoa_fisica\n    -- ON fat_nfs_tipo = fat_nfs_tipo\n    --     AND nfs_serie = fat_nfs_serie\n    --     AND nfs_numero = fat_nfs_numero\nOUTER APPLY (\n        select\n        tmp.*\n    from(\n        select \n            ROW_NUMBER() over (PARTITION by ext.ext_smm_num order by ext.ext_dt_mov ASC) id_linha\n            -- ROW_NUMBER() over (PARTITION by ext.ext_smm_num order by ext.ext_valor_glosa DESC) id_linha\n            ,ext.ext_valor_glosa\n        from dbo.ext ext (nolock)\n        where ext.ext_osm_num = a.osm_num\n        and ext.ext_osm_serie = a.osm_serie\n        and ext.ext_smm_num = a.smm_num\n        and ext.ext_mog_cod is not null\n    )tmp\n    where tmp.id_linha = 1    \n)GL_INI    \nouter apply(\n    --     select\n    --     tmp.*\n    -- from(\n    --     select \n    --        ROW_NUMBER() over (PARTITION by ext.ext_smm_num order by ext.ext_mns_serie DESC,ext.ext_mns_num DESC) id_linha\n    --         ,ext.ext_osm_num\n    --         ,ext.ext_osm_serie\n    --         ,ext.ext_smm_num\n    --         ,ext.ext_valor_receb\n    --         ,ext.ext_valor_glosa\n    --         ,ext.EXT_GLOSA_ACATADA\n    --         ,ext.ext_valor_imposto\n    --     from dbo.ext ext (nolock)\n    --     where ext.ext_osm_num = a.osm_num\n    --     and ext.ext_osm_serie = a.osm_serie\n    --     and ext.ext_smm_num = a.smm_num\n    --     -- and ext.ext_mns_num = \n    -- )tmp\n    -- where tmp.id_linha = 1\n            select \n                ext.ext_smm_num\n                ,sum(ext.ext_valor_receb) as ext_valor_receb                \n                -- ,sum(ext.EXT_GLOSA_ACATADA) as EXT_GLOSA_ACATADA\n            from dbo.ext ext (nolock)\n            where ext.ext_osm_num = a.osm_num\n                and ext.ext_osm_serie = a.osm_serie\n                and ext.ext_smm_num = a.smm_num           \n            group by ext.ext_smm_num    \n\n)ext\n\nouter apply (\n        select \n            ext.ext_smm_num\n            -- ,sum(ext.ext_valor_receb) as ext_valor_receb                \n            ,sum(ext.EXT_GLOSA_ACATADA) as EXT_GLOSA_ACATADA\n    from dbo.ext ext (nolock)\n    inner join mns mns (nolock) on mns.mns_num = ext.ext_mns_num and mns.MNS_SERIE = ext.ext_mns_serie\n    where ext.ext_osm_num = a.osm_num\n        and ext.ext_osm_serie = a.osm_serie\n        and ext.ext_smm_num = a.smm_num\n        and upper(substring(mns.MNS_TIPO,1,1)) = 'G'\n    group by ext.ext_smm_num   \n)GL_AC\n\n\nouter apply(\n    select top 1\n        mns.MNS_DT\n        ,min(mns.MNS_NUM) num\n    from dbo.mns mns (nolock)\n    where mns.MNS_NFS_NUMERO = nfs.nfs_numero AND mns.MNS_NFS_SERIE = NFS.nfs_serie AND MNS.MNS_NFS_TIPO = NFS.nfs_tipo \n    group by mns.MNS_DT\n)mns\n\n\n-- where nfs.nfs_numero in (999908220,\t999908229,\t999908230,\t999908231,\t999908253,\t999908255,\t999908256,\t999908257,\t999908259,\t999908265,\t999908269,\t999908270,\t999908272,\t999908273,\t999908274,\t999908275,\t999908276,\t999908277,\t999908301,\t999908306,\t999908308,\t999908309,\t999908310,\t999908312,\t999908313,\t999908314,\t999908315,\t999908319,\t999908320,\t999908321,\t999908323,\t999908325,\t999908326,\t999908327,\t999908330,\t999908331,\t999908333,\t999908334,\t999908335,\t999908338,\t999908339,\t999908340,\t999908342,\t999908343,\t999908349,\t999908350,\t999908351,\t999908352,\t999908353,\t999908354,\t999908355,\t999908358,\t999908360,\t999908368,\t999908369,\t999908370,\t999908372,\t999908373,\t999908374,\t999908375,\t999908377,\t999908378,\t999908379,\t999908380,\t999908381,\t999908384,\t999908385,\t999908386,\t999908388,\t999908390,\t999908391,\t999908394,\t999908395,\t999908397,\t999908400,\t999908403,\t999908404,\t999908405,\t999908407,\t999908408,\t999908409,\t999908410,\t999908411,\t999908412,\t999908413,\t999908416,\t999908417,\t999908419,\t999908420,\t999908422,\t999908423,\t999908426,\t999908428,\t999908429,\t999908430,\t999908431,\t999908432,\t999908438,\t999908439,\t999908446,\t999908448,\t999908449,\t999908450,\t999908451,\t999908452,\t999908454,\t999908455,\t999908456,\t999908459,\t999908463,\t999908464,\t999908465,\t999908466,\t999908467,\t999908468,\t999908471,\t999908472,\t999908473,\t999908474,\t999908476,\t999908477,\t999908479,\t999908482,\t999908486,\t999908489,\t999908490,\t999908492,\t999908493,\t999908495,\t999908496,\t999908498,\t999908499,\t999908500,\t999908501,\t999908502,\t999908503,\t999908504,\t999908505,\t999908506,\t999908507,\t999908508,\t999908512,\t999908515,\t999908516,\t999908517,\t999908518,\t999908519,\t999908520,\t999908521,\t999908523,\t999908524,\t999908529,\t999908530,\t999908534,\t999908535,\t999908536,\t999908537,\t999908543,\t999908547,\t999908556,\t999908557,\t999908560,\t999908563,\t999908567,\t999908568,\t999908569,\t999908570,\t999908572,\t999908575,\t999908586,\t999908592,\t999908594,\t999908603,\t999908611,\t999908612,\t999908613,\t999908614,\t999908615,\t999908617,\t999908618,\t999908620,\t999908622,\t999908625,\t999908626,\t999908627,\t999908630,\t999908637,\t999908643,\t999908648,\t999908655,\t999908684,\t999908695,\t999908696,\t999908704,\t999908718,\t999908744,\t999908767,\t999908235,\t999908240,\t999908241,\t999908242,\t999908243,\t999908252,\t999908260,\t999908261,\t999908263,\t999908264,\t999908266,\t999908267,\t999908268,\t999908271,\t999908299,\t999908300,\t999908302,\t999908303,\t999908305,\t999908307,\t999908311,\t999908316,\t999908318,\t999908322,\t999908324,\t999908328,\t999908332,\t999908344,\t999908345,\t999908346,\t999908347,\t999908356,\t999908357,\t999908359,\t999908361,\t999908362,\t999908363,\t999908364,\t999908365,\t999908366,\t999908367,\t999908382,\t999908383,\t999908387,\t999908389,\t999908396,\t999908399,\t999908401,\t999908402,\t999908406,\t999908414,\t999908418,\t999908421,\t999908433,\t999908435,\t999908436,\t999908437,\t999908440,\t999908441,\t999908442,\t999908443,\t999908444,\t999908445,\t999908447,\t999908461,\t999908462,\t999908480,\t999908488,\t999908494,\t999908514,\t999908525,\t999908538,\t999908540,\t999908548,\t999908552,\t999908554,\t999908559,\t999908616,\t999908619,\t999908628,\t999908632,\t999908722,\t999908738,\t999908201,\t999908215,\t999908337,\t999908341,\t999908371,\t999908393,\t999908424,\t999908460,\t999908526,\t999908562\n-- )\nwhere \ncast(a.dt_entrada as date) between '2015-01-01' and '2021-12-31'\n-- and nfs.nfs_numero = 99988358\n-- and a.nr_os = '117.13431'\nand c.DS_CLASSIF_PROCEDIMENTO is not null\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "TRUNCATE TABLE STG.DEV_CICLO_SMART",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "NR_SEQUENCIA",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								},
								"sink": {
									"name": "NR_SEQUENCIA",
									"type": "Decimal",
									"physicalType": "Decimal"
								}
							},
							{
								"source": {
									"name": "cd_pessoa_fisica",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "cd_pessoa_fisica",
									"type": "Int32",
									"physicalType": "Int32"
								}
							},
							{
								"source": {
									"name": "nr_atendimento",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "nr_atendimento",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "nr_interno_conta",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "nr_interno_conta",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "nr_os",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "nr_os",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "cd_carterinha_pac",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "cd_carterinha_pac",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "nr_guia",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "nr_guia",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "cd_cid",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "cd_cid",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "senha_conv",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "senha_conv",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "cgc_convenio",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "cgc_convenio",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "nm_razao_social",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "nm_razao_social",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "nm_nome_fantasia",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "nm_nome_fantasia",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "cd_convenio",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "cd_convenio",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ds_convenio",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ds_convenio",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "dt_entrada",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "dt_entrada",
									"type": "DateTime",
									"physicalType": "DateTime"
								}
							},
							{
								"source": {
									"name": "cd_estabelecimento",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "cd_estabelecimento",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ds_estabelecimento",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ds_estabelecimento",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "cd_estab_fat",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "cd_estab_fat",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ds_estab_fat",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ds_estab_fat",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ds_setor_atendimento",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "ds_setor_atendimento",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ds_setor_executante",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "ds_setor_executante",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "dt_lanc_item",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "dt_lanc_item",
									"type": "DateTime",
									"physicalType": "DateTime"
								}
							},
							{
								"source": {
									"name": "classif_item",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "classif_item",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "cd_amb",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "cd_amb",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "cd_item",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "cd_item",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ds_item",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ds_item",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "qt_item",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 4
								},
								"sink": {
									"name": "qt_item",
									"type": "Decimal",
									"physicalType": "Decimal"
								}
							},
							{
								"source": {
									"name": "vl_item",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "vl_item",
									"type": "Double",
									"physicalType": "Double"
								}
							},
							{
								"source": {
									"name": "dt_inicio_pre_fat",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "dt_inicio_pre_fat",
									"type": "DateTime",
									"physicalType": "DateTime"
								}
							},
							{
								"source": {
									"name": "pre_fatura",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "pre_fatura",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "status_pre_fatura",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "status_pre_fatura",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "status_faturamento",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "status_faturamento",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "nr_nfs",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "nr_nfs",
									"type": "Int32",
									"physicalType": "Int32"
								}
							},
							{
								"source": {
									"name": "dt_emissao_nf",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "dt_emissao_nf",
									"type": "DateTime",
									"physicalType": "DateTime"
								}
							},
							{
								"source": {
									"name": "dt_nf_vcto",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "dt_nf_vcto",
									"type": "DateTime",
									"physicalType": "DateTime"
								}
							},
							{
								"source": {
									"name": "dt_envio_nfs",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "dt_envio_nfs",
									"type": "DateTime",
									"physicalType": "DateTime"
								}
							},
							{
								"source": {
									"name": "dt_receb",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "dt_receb",
									"type": "DateTime",
									"physicalType": "DateTime"
								}
							},
							{
								"source": {
									"name": "vlr_receb",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "vlr_receb",
									"type": "Double",
									"physicalType": "Double"
								}
							},
							{
								"source": {
									"name": "vlr_glosa_inicial",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "vlr_glosa_inicial",
									"type": "Double",
									"physicalType": "Double"
								}
							},
							{
								"source": {
									"name": "vlr_glosa_acatada",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "vlr_glosa_acatada",
									"type": "Double",
									"physicalType": "Double"
								}
							},
							{
								"source": {
									"name": "vlr_saldo",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "vlr_saldo",
									"type": "Double",
									"physicalType": "Double"
								}
							},
							{
								"source": {
									"name": "status_cta_receber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "status_cta_receber",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "tempo_receb",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "tempo_receb",
									"type": "Int32",
									"physicalType": "Int32"
								}
							},
							{
								"source": {
									"name": "tempo_faturamento",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "tempo_faturamento",
									"type": "Int32",
									"physicalType": "Int32"
								}
							},
							{
								"source": {
									"name": "dt_atualizacao",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "dt_atualizacao",
									"type": "DateTime",
									"physicalType": "DateTime"
								}
							},
							{
								"source": {
									"name": "dt_geracao_query",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "dt_geracao_query",
									"type": "DateTime",
									"physicalType": "DateTime"
								}
							},
							{
								"source": {
									"name": "pac_nome",
									"type": "String",
									"physicalType": "char"
								},
								"sink": {
									"name": "pac_nome",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SMART_ITAIGARA_PrdDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_DEV_CICLO_RECEITA_SMART",
						"type": "DatasetReference"
					}
				]
			}
		],
		"folder": {
			"name": "Ciclo Receita"
		},
		"annotations": []
	}
}