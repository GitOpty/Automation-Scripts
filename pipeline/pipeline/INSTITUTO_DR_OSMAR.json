{
	"name": "INSTITUTO_DR_OSMAR",
	"properties": {
		"activities": [
			{
				"name": "Agendamento",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Atendimento_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Agendamento]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Agendamento]\n",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_AGENDAMENTO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Agendamento"
						}
					}
				]
			},
			{
				"name": "Agendamento_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Agendamento",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Agendamento_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Agendamento_Diario]\n",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_AGENDAMENTO_DIARIO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Agendamento_Diario"
						}
					}
				]
			},
			{
				"name": "Atendimento",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "01:30:00",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Atendimento]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Atendimento]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_ATENDIMENTO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Atendimento"
						}
					}
				]
			},
			{
				"name": "Atendimento_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Atendimento",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Atendimento_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Atendimento_Diario]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_ATENDIMENTO_DIARIO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_atendimento_diario"
						}
					}
				]
			},
			{
				"name": "Faturamento",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Agendamento_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Faturamento]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Faturamento]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_FATURAMENTO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Faturamento"
						}
					}
				]
			},
			{
				"name": "Faturamento_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Faturamento",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Faturamento_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Faturamento_Diario]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_FATURAMENTO_DIARIO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Faturamento_Diario"
						}
					}
				]
			},
			{
				"name": "Financeiro",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Faturamento_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Financeiro]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Financeiro]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_FINANCEIRO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Financeiro"
						}
					}
				]
			},
			{
				"name": "Financeiro_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Financeiro",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Financeiro_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Financeiro_Diario]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_FINANCEIRO_DIARIO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Financeiro_Diario"
						}
					}
				]
			},
			{
				"name": "Repasse",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Financeiro_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Repasse]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Repasse]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_REPASSE",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Repasse"
						}
					}
				]
			},
			{
				"name": "Repasse_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Repasse",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Repasse_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Repasse_Diario]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_REPASSE_DIARIO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Repasse_Diario"
						}
					}
				]
			},
			{
				"name": "Questionario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Repasse_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Questionario]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Questionario]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_QUESTIONARIO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_questionario"
						}
					}
				]
			},
			{
				"name": "Questionario_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Questionario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Questionario_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Questionario_Diario]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_QUESTIONARIO_DIARIO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_questionario_diario"
						}
					}
				]
			},
			{
				"name": "ContasPagarReceber",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Questionario_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_ContasPagarReceber]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_ContasPagarReceber]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_CONTASPAGARRECEBER",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_ContasPagarReceber"
						}
					}
				]
			},
			{
				"name": "ContasPagarReceber_Diarias",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ContasPagarReceber",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_ContasPagarReceber_Diarias]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_ContasPagarReceber_Diarias]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_CONTASPAGARRECEBER_DIARIAS",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_ContasPagarReceber_Diarias"
						}
					}
				]
			},
			{
				"name": "Caixa",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ContasPagarReceber_Diarias",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Caixa]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Caixa]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_CAIXA",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Caixa"
						}
					}
				]
			},
			{
				"name": "Caixa_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Caixa",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Caixa_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Caixa_Diario]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_CAIXA_DIARIO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Caixa_Diario"
						}
					}
				]
			},
			{
				"name": "Paciente",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Caixa_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Paciente]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Paciente]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_PACIENTE",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Paciente"
						}
					}
				]
			},
			{
				"name": "Paciente_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Paciente",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Paciente_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Paciente_Diario]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_PACIENTE_DIARIO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Paciente_Diario"
						}
					}
				]
			},
			{
				"name": "Teleorientacao",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Paciente_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Teleorientacao]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Teleorientacao]\n",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_TELEORIENTACAO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Teleorientacao"
						}
					}
				]
			},
			{
				"name": "Teleorientacao_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Teleorientacao",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Teleorientacao_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Teleorientacao_Diario]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_TELEORIENTACAO_DIARIA",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Teleorientacao_Diaria"
						}
					}
				]
			},
			{
				"name": "Venda",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Teleorientacao_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Venda]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Venda]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_VENDA",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Venda"
						}
					}
				]
			},
			{
				"name": "Venda_Diaria",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Venda",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Venda_Diaria]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Venda_Diaria]",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_VENDA_DIARIA",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Venda_Diaria"
						}
					}
				]
			},
			{
				"name": "Profissional",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Venda_Diaria",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Profissional]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Profissional]\n",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_PROFISSIONAL",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Profissional"
						}
					}
				]
			},
			{
				"name": "Profissional_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Profissional",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[inst_dr_osmar_Profissional_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[inst_dr_osmar_Profissional_Diario]\n",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "INST_DR_OSMAR_PROFISSIONAL_DIARIO",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "inst_dr_osmar_Profissional_Diario"
						}
					}
				]
			},
			{
				"name": "ATENDIMENTO MERGE",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Atendimento",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SQL_DESTINO",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "WITH CTE \nAS\n\n(\nSELECT \nA.ATENDIMENTO_CODIGO + '|' + A.atendimento_procedimento_codigo + '|' + LTRIM(RTRIM(REPLACE(A.atendimento_procedimento_convenio,' ',''))) + '|' + CAST(ROW_NUMBER()OVER(PARTITION BY A.ATENDIMENTO_CODIGO, A.ATENDIMENTO_PROCEDIMENTO_CODIGO, A.atendimento_procedimento_convenio ORDER BY A.ATENDIMENTO_HORA DESC) AS VARCHAR(100)) AS FK\n,A.atendimento_codigo\n,A.agendamento_codigo\n,A.atendimento_turno\n,A.atendimento_dia\n,A.atendimento_mes\n,A.atendimento_ano\n,A.atendimento_usuario_cadastro\n,A.atendimento_procedimento_empresa\n,A.atendimento_procedimento_empresa_requisitante\n,A.atendimento_procedimento_profissional_nome\n,A.atendimento_procedimento_profissional_requisitante\n,A.atendimento_procedimento_especialidade_profissional_requisitante\n,A.atendimento_procedimento_convenio\n,A.atendimento_procedimento_plano\n,A.atendimento_procedimento_especialidade\n,A.atendimento_procedimento_nome\n,A.atendimento_procedimento_grupo\n,A.atendimento_procedimento_valor\n,A.atendimento_procedimento_coparticipacao_valor\n,A.atendimento_procedimento_filme_valor\n,A.atendimento_material_medicamento_nome\n,A.atendimento_material_medicamento_valor\n,A.atendimento_material_medicamento_coparticipacao_valor\n,A.atendimento_taxa_nome\n,A.atendimento_taxa_valor\n,A.atendimento_taxa_coparticipacao_valor\n,A.paciente_codigo\n,A.paciente_nome\n,A.paciente_sexo\n,A.paciente_faixa_idade\n,A.paciente_estado\n,A.paciente_cidade\n,A.paciente_bairro\n,A.atendimento_hora\n,A.atendimento_diadasemana\n,A.atendimento_cid_primario\n,A.atendimento_cid_secundario\n,A.atendimento_cid_consultorio\n,A.atendimento_tipo\n,A.atendimento_horainicio_recepcao\n,A.atendimento_horafim_recepcao\n,A.atendimento_horainicio_consultorio\n,A.atendimento_horafim_consultorio\n,A.atendimento_procedimento_codigo\n,A.paciente_cep\n,A.atendimento_profissional_especialidade\n,A.atendimento_previsao_valor_repasse_profissional\n,A.atendimento_previsao_valor_repasse_clinica\n,A.atendimento_passo\n,A.atendimento_codigo_guia\n,A.atendimento_quantidade_executada_procedimento\n,A.atendimento_status_procedimento\nFROM STG.inst_dr_osmar_Atendimento A\n\n)\n\nMERGE\t           \n\tdw.inst_dr_osmar_Atendimento AS destino           \nUSING            \n\tCTE AS origem           \n           \n    ON\t(        \n            origem.fk = destino.fk\n\t\t)        \n\n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \n\ndestino.fk = origem.fk\n,destino.atendimento_codigo = origem.atendimento_codigo\n,destino.agendamento_codigo = origem.agendamento_codigo\n,destino.atendimento_turno = origem.atendimento_turno\n,destino.atendimento_dia = origem.atendimento_dia\n,destino.atendimento_mes = origem.atendimento_mes\n,destino.atendimento_ano = origem.atendimento_ano\n,destino.atendimento_usuario_cadastro = origem.atendimento_usuario_cadastro\n,destino.atendimento_procedimento_empresa = origem.atendimento_procedimento_empresa\n,destino.atendimento_procedimento_empresa_requisitante = origem.atendimento_procedimento_empresa_requisitante\n,destino.atendimento_procedimento_profissional_nome = origem.atendimento_procedimento_profissional_nome\n,destino.atendimento_procedimento_profissional_requisitante = origem.atendimento_procedimento_profissional_requisitante\n,destino.atendimento_procedimento_especialidade_profissional_requisitante = origem.atendimento_procedimento_especialidade_profissional_requisitante\n,destino.atendimento_procedimento_convenio = origem.atendimento_procedimento_convenio\n,destino.atendimento_procedimento_plano = origem.atendimento_procedimento_plano\n,destino.atendimento_procedimento_especialidade = origem.atendimento_procedimento_especialidade\n,destino.atendimento_procedimento_nome = origem.atendimento_procedimento_nome\n,destino.atendimento_procedimento_grupo = origem.atendimento_procedimento_grupo\n,destino.atendimento_procedimento_valor = origem.atendimento_procedimento_valor\n,destino.atendimento_procedimento_coparticipacao_valor = origem.atendimento_procedimento_coparticipacao_valor\n,destino.atendimento_procedimento_filme_valor = origem.atendimento_procedimento_filme_valor\n,destino.atendimento_material_medicamento_nome = origem.atendimento_material_medicamento_nome\n,destino.atendimento_material_medicamento_valor = origem.atendimento_material_medicamento_valor\n,destino.atendimento_material_medicamento_coparticipacao_valor = origem.atendimento_material_medicamento_coparticipacao_valor\n,destino.atendimento_taxa_nome = origem.atendimento_taxa_nome\n,destino.atendimento_taxa_valor = origem.atendimento_taxa_valor\n,destino.atendimento_taxa_coparticipacao_valor = origem.atendimento_taxa_coparticipacao_valor\n,destino.paciente_codigo = origem.paciente_codigo\n,destino.paciente_nome = origem.paciente_nome\n,destino.paciente_sexo = origem.paciente_sexo\n,destino.paciente_faixa_idade = origem.paciente_faixa_idade\n,destino.paciente_estado = origem.paciente_estado\n,destino.paciente_cidade = origem.paciente_cidade\n,destino.paciente_bairro = origem.paciente_bairro\n,destino.atendimento_hora = origem.atendimento_hora\n,destino.atendimento_diadasemana = origem.atendimento_diadasemana\n,destino.atendimento_cid_primario = origem.atendimento_cid_primario\n,destino.atendimento_cid_secundario = origem.atendimento_cid_secundario\n,destino.atendimento_cid_consultorio = origem.atendimento_cid_consultorio\n,destino.atendimento_tipo = origem.atendimento_tipo\n,destino.atendimento_horainicio_recepcao = origem.atendimento_horainicio_recepcao\n,destino.atendimento_horafim_recepcao = origem.atendimento_horafim_recepcao\n,destino.atendimento_horainicio_consultorio = origem.atendimento_horainicio_consultorio\n,destino.atendimento_horafim_consultorio = origem.atendimento_horafim_consultorio\n,destino.atendimento_procedimento_codigo = origem.atendimento_procedimento_codigo\n,destino.paciente_cep = origem.paciente_cep\n,destino.atendimento_profissional_especialidade = origem.atendimento_profissional_especialidade\n,destino.atendimento_previsao_valor_repasse_profissional = origem.atendimento_previsao_valor_repasse_profissional\n,destino.atendimento_previsao_valor_repasse_clinica = origem.atendimento_previsao_valor_repasse_clinica\n,destino.atendimento_passo = origem.atendimento_passo\n,destino.atendimento_codigo_guia = origem.atendimento_codigo_guia\n,destino.atendimento_quantidade_executada_procedimento = origem.atendimento_quantidade_executada_procedimento\n,destino.atendimento_status_procedimento = origem.atendimento_status_procedimento\n\n\n\n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.fk\n,origem.atendimento_codigo\n,origem.agendamento_codigo\n,origem.atendimento_turno\n,origem.atendimento_dia\n,origem.atendimento_mes\n,origem.atendimento_ano\n,origem.atendimento_usuario_cadastro\n,origem.atendimento_procedimento_empresa\n,origem.atendimento_procedimento_empresa_requisitante\n,origem.atendimento_procedimento_profissional_nome\n,origem.atendimento_procedimento_profissional_requisitante\n,origem.atendimento_procedimento_especialidade_profissional_requisitante\n,origem.atendimento_procedimento_convenio\n,origem.atendimento_procedimento_plano\n,origem.atendimento_procedimento_especialidade\n,origem.atendimento_procedimento_nome\n,origem.atendimento_procedimento_grupo\n,origem.atendimento_procedimento_valor\n,origem.atendimento_procedimento_coparticipacao_valor\n,origem.atendimento_procedimento_filme_valor\n,origem.atendimento_material_medicamento_nome\n,origem.atendimento_material_medicamento_valor\n,origem.atendimento_material_medicamento_coparticipacao_valor\n,origem.atendimento_taxa_nome\n,origem.atendimento_taxa_valor\n,origem.atendimento_taxa_coparticipacao_valor\n,origem.paciente_codigo\n,origem.paciente_nome\n,origem.paciente_sexo\n,origem.paciente_faixa_idade\n,origem.paciente_estado\n,origem.paciente_cidade\n,origem.paciente_bairro\n,origem.atendimento_hora\n,origem.atendimento_diadasemana\n,origem.atendimento_cid_primario\n,origem.atendimento_cid_secundario\n,origem.atendimento_cid_consultorio\n,origem.atendimento_tipo\n,origem.atendimento_horainicio_recepcao\n,origem.atendimento_horafim_recepcao\n,origem.atendimento_horainicio_consultorio\n,origem.atendimento_horafim_consultorio\n,origem.atendimento_procedimento_codigo\n,origem.paciente_cep\n,origem.atendimento_profissional_especialidade\n,origem.atendimento_previsao_valor_repasse_profissional\n,origem.atendimento_previsao_valor_repasse_clinica\n,origem.atendimento_passo\n,origem.atendimento_codigo_guia\n,origem.atendimento_quantidade_executada_procedimento\n,origem.atendimento_status_procedimento        \n\n); \n"
						}
					]
				}
			},
			{
				"name": "CONVENIO MERGE",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "ATENDIMENTO MERGE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "WITH CONV AS(\n\nSELECT DISTINCT\n    '41' AS ESTABELECIMENTO\n    ,'41|' + LTRIM(RTRIM(REPLACE(REPLACE(UPPER(ATENDIMENTO_PROCEDIMENTO_CONVENIO),' ',''),'-',''))) AS FK_CONVENIO\n    ,LTRIM(RTRIM(REPLACE(REPLACE(UPPER(ATENDIMENTO_PROCEDIMENTO_CONVENIO),' ',''),'-',''))) AS CD_CONVENIO\n    ,ATENDIMENTO_PROCEDIMENTO_CONVENIO AS DS_CONVENIO\n    ,CASE\n        WHEN UPPER(ATENDIMENTO_PROCEDIMENTO_CONVENIO) LIKE '%PARTICULAR%' THEN 'PARTICULAR'\n        WHEN UPPER(ATENDIMENTO_PROCEDIMENTO_CONVENIO) LIKE '%SUS%' THEN 'SUS'\n        ELSE 'CONVÊNIO'\n     END TP_CONVENIO\n    ,'0' AS CD_CGC\n    \nFROM dw.inst_dr_osmar_Atendimento\n\n)\n\nMERGE\t           \n\tDW.inst_dr_osmar_CONVENIO AS destino           \nUSING            \n\tCONV AS origem           \n           \n    ON\t(        \n        origem.FK_CONVENIO = destino.FK_CONVENIO\n\t\t)        \n\n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \nDESTINO.ESTABELECIMENTO = ORIGEM.ESTABELECIMENTO\n,DESTINO.FK_CONVENIO = ORIGEM.FK_CONVENIO\n,DESTINO.CD_CONVENIO = ORIGEM.CD_CONVENIO\n,DESTINO.DS_CONVENIO = ORIGEM.DS_CONVENIO\n,DESTINO.TP_CONVENIO = ORIGEM.TP_CONVENIO\n,DESTINO.CD_CGC = ORIGEM.CD_CGC\n\n\n\n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\nORIGEM.ESTABELECIMENTO\n,ORIGEM.FK_CONVENIO\n,ORIGEM.CD_CONVENIO\n,ORIGEM.DS_CONVENIO\n,ORIGEM.TP_CONVENIO\n,ORIGEM.CD_CGC\n); \n"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"folder": {
			"name": "Data Warehouse/P&P"
		},
		"annotations": []
	}
}