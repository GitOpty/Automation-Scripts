{
	"name": "UROBRASIL",
	"properties": {
		"activities": [
			{
				"name": "Agendamento",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Agendamento]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Agendamento]\n\n\n",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "Urobrasil_Agendamento",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Agendamento"
						}
					}
				]
			},
			{
				"name": "Agendamento_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Agendamento",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Agendamento_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Agendamento_Diario]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "Urobrasil_Agendamento_Diario",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Agendamento_Diario"
						}
					}
				]
			},
			{
				"name": "Atendimento",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Agendamento_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Atendimento]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Atendimento]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Atendimento",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Atendimento"
						}
					}
				]
			},
			{
				"name": "Atendimento_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Atendimento",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Atendimento_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Atendimento_Diario]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Atendimento_Diario",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Atendimento_Diario"
						}
					}
				]
			},
			{
				"name": "Faturamento",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Atendimento_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Faturamento]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Faturamento]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Faturamento",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Faturamento"
						}
					}
				]
			},
			{
				"name": "Faturamento_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Faturamento",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Faturamento_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Faturamento_Diario]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Faturamento_Diario",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Faturamento_Diario"
						}
					}
				]
			},
			{
				"name": "Financeiro",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Faturamento_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Financeiro]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Financeiro]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Financeiro",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Financeiro"
						}
					}
				]
			},
			{
				"name": "Financeiro_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Financeiro",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Financeiro_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Financeiro_Diario]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Financeiro_Diario",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Financeiro_Diario"
						}
					}
				]
			},
			{
				"name": "Repasse",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Financeiro_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Repasse]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Repasse]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Repasse",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Repasse"
						}
					}
				]
			},
			{
				"name": "Repasse_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Repasse",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Repasse_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Repasse_Diario]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Repasse_Diario",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Repasse_Diario"
						}
					}
				]
			},
			{
				"name": "Questionario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Repasse_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Questionario]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Questionario]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Questionario",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_questionario"
						}
					}
				]
			},
			{
				"name": "Questionario_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Questionario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Questionario_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Questionario_Diario]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Questionario_Diario",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_questionario_diario"
						}
					}
				]
			},
			{
				"name": "ContasPagarReceber",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Questionario_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_ContasPagarReceber]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_ContasPagarReceber]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_ContasPagarReceber",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_ContasPagarReceber"
						}
					}
				]
			},
			{
				"name": "ContasPagarReceber_Diarias",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ContasPagarReceber",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_ContasPagarReceber_Diarias]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_ContasPagarReceber_Diarias]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_ContasPagarReceberDiarias",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_ContasPagarReceber_Diarias"
						}
					}
				]
			},
			{
				"name": "Caixa",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ContasPagarReceber_Diarias",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Caixa]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Caixa]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Caixa",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Caixa"
						}
					}
				]
			},
			{
				"name": "Caixa_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Caixa",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Caixa_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Caixa_Diario]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Caixa_DIario",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Caixa_Diario"
						}
					}
				]
			},
			{
				"name": "Paciente",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Caixa_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Paciente]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Paciente]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Paciente",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Paciente"
						}
					}
				]
			},
			{
				"name": "Paciente_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Paciente",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Paciente_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Paciente_Diario]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Paciente_Diario",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Paciente_Diario"
						}
					}
				]
			},
			{
				"name": "Teleorientacao",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Paciente_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Teleorientacao]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Teleorientacao]\n",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Teleorientacao",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Teleorientacao"
						}
					}
				]
			},
			{
				"name": "Teleorientacao_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Teleorientacao",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Teleorientacao_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Teleorientacao_Diario]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Teleorientacao_Diario",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Teleorientacao_Diaria"
						}
					}
				]
			},
			{
				"name": "Venda",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Teleorientacao_Diario",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Venda]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Venda]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Venda",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Venda"
						}
					}
				]
			},
			{
				"name": "Venda_Diaria",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Venda",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Venda_Diaria]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Venda_Diaria]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Venda_Diaria",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Venda_Diaria"
						}
					}
				]
			},
			{
				"name": "Profissional",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Venda_Diaria",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Profissional]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Profissional]\n",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Profissional",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Profissional"
						}
					}
				]
			},
			{
				"name": "Profissional_Diario",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Profissional",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[stg].[urobrasil_Profissional_Diario]') AND type in (N'U'))\nDROP TABLE [stg].[urobrasil_Profissional_Diario]\n",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UROBRASIL_Profissional_Diario",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AZ_SQL_STG",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "stg",
							"TABELA": "urobrasil_Profissional_Diario"
						}
					}
				]
			},
			{
				"name": "ATENDIMENTO MERGE",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Atendimento",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SQL_DESTINO",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "WITH CTE \nAS\n\n(\nSELECT DISTINCT \n\t   [atendimento_codigo]\n      ,[agendamento_codigo]\n      ,[atendimento_turno]\n      ,[atendimento_dia]\n      ,[atendimento_mes]\n      ,[atendimento_ano]\n      ,[atendimento_usuario_cadastro]\n      ,[atendimento_procedimento_empresa]\n      ,[atendimento_procedimento_empresa_requisitante]\n      ,[atendimento_procedimento_profissional_nome]\n      ,[atendimento_procedimento_profissional_requisitante]\n      ,[atendimento_procedimento_especialidade_profissional_requisitante]\n      ,[atendimento_procedimento_convenio]\n      ,[atendimento_procedimento_plano]\n      ,[atendimento_procedimento_especialidade]\n      ,[atendimento_procedimento_nome]\n      ,[atendimento_procedimento_grupo]\n      ,[atendimento_procedimento_valor]\n      ,[atendimento_procedimento_coparticipacao_valor]\n      ,[atendimento_procedimento_filme_valor]\n      ,[atendimento_material_medicamento_nome]\n      ,[atendimento_material_medicamento_valor]\n      ,[atendimento_material_medicamento_coparticipacao_valor]\n      ,[atendimento_taxa_nome]\n      ,[atendimento_taxa_valor]\n      ,[atendimento_taxa_coparticipacao_valor]\n      ,[paciente_codigo]\n      ,[paciente_nome]\n      ,[paciente_sexo]\n      ,[paciente_faixa_idade]\n      ,[paciente_estado]\n      ,[paciente_cidade]\n      ,[paciente_bairro]\n      ,[atendimento_hora]\n      ,[atendimento_diadasemana]\n      ,[atendimento_cid_primario]\n      ,[atendimento_cid_secundario]\n      ,[atendimento_cid_consultorio]\n      ,[atendimento_tipo]\n      ,[atendimento_horainicio_recepcao]\n      ,[atendimento_horafim_recepcao]\n      ,[atendimento_horainicio_consultorio]\n      ,[atendimento_horafim_consultorio]\n      ,[atendimento_procedimento_codigo]\n      ,[paciente_cep]\n      ,[atendimento_profissional_especialidade]\n      ,[atendimento_previsao_valor_repasse_profissional]\n      ,[atendimento_previsao_valor_repasse_clinica]\n      ,[atendimento_passo]\n  FROM [stg].[urobrasil_Atendimento]\n\n)\n\nMERGE\t           \n\tdw.urobrasil_Atendimento AS destino           \nUSING            \n\tCTE AS origem           \n           \n    ON\t(        \n\torigem.atendimento_codigo\t\t\t\t\t\t=\tdestino.atendimento_codigo\t\t\t\t\t\t\tAND\n\torigem.atendimento_procedimento_codigo\t\t\t=\tdestino.atendimento_procedimento_codigo\t\t\t\tAND\n\torigem.atendimento_procedimento_plano\t\t\t=\tdestino.atendimento_procedimento_plano\t\t\t\tAND\n\torigem.atendimento_procedimento_convenio\t\t=\tdestino.atendimento_procedimento_convenio\t\t\tAND\n\torigem.atendimento_material_medicamento_nome\t=\tdestino.atendimento_material_medicamento_nome\t\tAND\t\n\torigem.atendimento_procedimento_valor\t\t\t=\tdestino.atendimento_procedimento_valor\t\t\n\t\t)        \n\n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \n\ndestino.atendimento_codigo=origem.atendimento_codigo,\ndestino.agendamento_codigo=origem.agendamento_codigo,\ndestino.atendimento_turno=origem.atendimento_turno,\ndestino.atendimento_dia=origem.atendimento_dia,\ndestino.atendimento_mes=origem.atendimento_mes,\ndestino.atendimento_ano=origem.atendimento_ano,\ndestino.atendimento_usuario_cadastro=origem.atendimento_usuario_cadastro,\ndestino.atendimento_procedimento_empresa=origem.atendimento_procedimento_empresa,\ndestino.atendimento_procedimento_empresa_requisitante=origem.atendimento_procedimento_empresa_requisitante,\ndestino.atendimento_procedimento_profissional_nome=origem.atendimento_procedimento_profissional_nome,\ndestino.atendimento_procedimento_profissional_requisitante=origem.atendimento_procedimento_profissional_requisitante,\ndestino.atendimento_procedimento_especialidade_profissional_requisitante=origem.atendimento_procedimento_especialidade_profissional_requisitante,\ndestino.atendimento_procedimento_convenio=origem.atendimento_procedimento_convenio,\ndestino.atendimento_procedimento_plano=origem.atendimento_procedimento_plano,\ndestino.atendimento_procedimento_especialidade=origem.atendimento_procedimento_especialidade,\ndestino.atendimento_procedimento_nome=origem.atendimento_procedimento_nome,\ndestino.atendimento_procedimento_grupo=origem.atendimento_procedimento_grupo,\ndestino.atendimento_procedimento_valor=origem.atendimento_procedimento_valor,\ndestino.atendimento_procedimento_coparticipacao_valor=origem.atendimento_procedimento_coparticipacao_valor,\ndestino.atendimento_procedimento_filme_valor=origem.atendimento_procedimento_filme_valor,\ndestino.atendimento_material_medicamento_nome=origem.atendimento_material_medicamento_nome,\ndestino.atendimento_material_medicamento_valor=origem.atendimento_material_medicamento_valor,\ndestino.atendimento_material_medicamento_coparticipacao_valor=origem.atendimento_material_medicamento_coparticipacao_valor,\ndestino.atendimento_taxa_nome=origem.atendimento_taxa_nome,\ndestino.atendimento_taxa_valor=origem.atendimento_taxa_valor,\ndestino.atendimento_taxa_coparticipacao_valor=origem.atendimento_taxa_coparticipacao_valor,\ndestino.paciente_codigo=origem.paciente_codigo,\ndestino.paciente_nome=origem.paciente_nome,\ndestino.paciente_sexo=origem.paciente_sexo,\ndestino.paciente_faixa_idade=origem.paciente_faixa_idade,\ndestino.paciente_estado=origem.paciente_estado,\ndestino.paciente_cidade=origem.paciente_cidade,\ndestino.paciente_bairro=origem.paciente_bairro,\ndestino.atendimento_hora=origem.atendimento_hora,\ndestino.atendimento_diadasemana=origem.atendimento_diadasemana,\ndestino.atendimento_cid_primario=origem.atendimento_cid_primario,\ndestino.atendimento_cid_secundario=origem.atendimento_cid_secundario,\ndestino.atendimento_cid_consultorio=origem.atendimento_cid_consultorio,\ndestino.atendimento_tipo=origem.atendimento_tipo,\ndestino.atendimento_horainicio_recepcao=origem.atendimento_horainicio_recepcao,\ndestino.atendimento_horafim_recepcao=origem.atendimento_horafim_recepcao,\ndestino.atendimento_horainicio_consultorio=origem.atendimento_horainicio_consultorio,\ndestino.atendimento_horafim_consultorio=origem.atendimento_horafim_consultorio,\ndestino.atendimento_procedimento_codigo=origem.atendimento_procedimento_codigo,\ndestino.paciente_cep=origem.paciente_cep,\ndestino.atendimento_profissional_especialidade=origem.atendimento_profissional_especialidade,\ndestino.atendimento_previsao_valor_repasse_profissional=origem.atendimento_previsao_valor_repasse_profissional,\ndestino.atendimento_previsao_valor_repasse_clinica=origem.atendimento_previsao_valor_repasse_clinica,\ndestino.atendimento_passo=origem.atendimento_passo\n\n\n\n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.atendimento_codigo,\norigem.agendamento_codigo,\norigem.atendimento_turno,\norigem.atendimento_dia,\norigem.atendimento_mes,\norigem.atendimento_ano,\norigem.atendimento_usuario_cadastro,\norigem.atendimento_procedimento_empresa,\norigem.atendimento_procedimento_empresa_requisitante,\norigem.atendimento_procedimento_profissional_nome,\norigem.atendimento_procedimento_profissional_requisitante,\norigem.atendimento_procedimento_especialidade_profissional_requisitante,\norigem.atendimento_procedimento_convenio,\norigem.atendimento_procedimento_plano,\norigem.atendimento_procedimento_especialidade,\norigem.atendimento_procedimento_nome,\norigem.atendimento_procedimento_grupo,\norigem.atendimento_procedimento_valor,\norigem.atendimento_procedimento_coparticipacao_valor,\norigem.atendimento_procedimento_filme_valor,\norigem.atendimento_material_medicamento_nome,\norigem.atendimento_material_medicamento_valor,\norigem.atendimento_material_medicamento_coparticipacao_valor,\norigem.atendimento_taxa_nome,\norigem.atendimento_taxa_valor,\norigem.atendimento_taxa_coparticipacao_valor,\norigem.paciente_codigo,\norigem.paciente_nome,\norigem.paciente_sexo,\norigem.paciente_faixa_idade,\norigem.paciente_estado,\norigem.paciente_cidade,\norigem.paciente_bairro,\norigem.atendimento_hora,\norigem.atendimento_diadasemana,\norigem.atendimento_cid_primario,\norigem.atendimento_cid_secundario,\norigem.atendimento_cid_consultorio,\norigem.atendimento_tipo,\norigem.atendimento_horainicio_recepcao,\norigem.atendimento_horafim_recepcao,\norigem.atendimento_horainicio_consultorio,\norigem.atendimento_horafim_consultorio,\norigem.atendimento_procedimento_codigo,\norigem.paciente_cep,\norigem.atendimento_profissional_especialidade,\norigem.atendimento_previsao_valor_repasse_profissional,\norigem.atendimento_previsao_valor_repasse_clinica,\norigem.atendimento_passo\n\n); \n"
						}
					]
				}
			},
			{
				"name": "CONVENIO MERGE",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "ATENDIMENTO MERGE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "WITH CONV AS(\n\nSELECT DISTINCT\n    '40' AS ESTABELECIMENTO\n    ,'40|' + LTRIM(RTRIM(REPLACE(REPLACE(UPPER(ATENDIMENTO_PROCEDIMENTO_CONVENIO),' ',''),'-',''))) AS FK_CONVENIO\n    ,LTRIM(RTRIM(REPLACE(REPLACE(UPPER(ATENDIMENTO_PROCEDIMENTO_CONVENIO),' ',''),'-',''))) AS CD_CONVENIO\n    ,ATENDIMENTO_PROCEDIMENTO_CONVENIO AS DS_CONVENIO\n    ,CASE\n        WHEN UPPER(ATENDIMENTO_PROCEDIMENTO_CONVENIO) LIKE '%PARTICULAR%' THEN 'PARTICULAR'\n        WHEN UPPER(ATENDIMENTO_PROCEDIMENTO_CONVENIO) LIKE '%SUS%' THEN 'SUS'\n        ELSE 'CONVÊNIO'\n     END TP_CONVENIO\n    ,'0' AS CD_CGC\n        \nFROM dw.urobrasil_Atendimento\n\n)\n\nMERGE\t           \n\tDW.UROBRASIL_CONVENIO AS destino           \nUSING            \n\tCONV AS origem           \n           \n    ON\t(        \n        origem.FK_CONVENIO = destino.FK_CONVENIO\n\t\t)        \n\n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \nDESTINO.ESTABELECIMENTO = ORIGEM.ESTABELECIMENTO\n,DESTINO.FK_CONVENIO = ORIGEM.FK_CONVENIO\n,DESTINO.CD_CONVENIO = ORIGEM.CD_CONVENIO\n,DESTINO.DS_CONVENIO = ORIGEM.DS_CONVENIO\n,DESTINO.TP_CONVENIO = ORIGEM.TP_CONVENIO\n,DESTINO.CD_CGC = ORIGEM.CD_CGC\n\n\n\n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\nORIGEM.ESTABELECIMENTO\n,ORIGEM.FK_CONVENIO\n,ORIGEM.CD_CONVENIO\n,ORIGEM.DS_CONVENIO\n,ORIGEM.TP_CONVENIO\n,ORIGEM.CD_CGC\n); "
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"folder": {
			"name": "Data Warehouse/2_Pipeline_Cargas_DW"
		},
		"annotations": []
	}
}