{
	"name": "VISAO_DF",
	"properties": {
		"activities": [
			{
				"name": "Lista arquivos",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.02:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_HMAISDATADRIVEN_BINARY",
						"type": "DatasetReference",
						"parameters": {
							"FileSystem": "visaodf"
						}
					},
					"fieldList": [
						"childItems",
						"itemType",
						"itemName",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "Filtro",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lista arquivos",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lista arquivos').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@endsWith(item().name, 'csv')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filtro",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filtro').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copia dados para a STG",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": {
										"value": "@{concat('Drop table stg.',activity('Lista arquivos').output.itemName)}",
										"type": "Expression"
									},
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_HMAISDATADRIVEN",
									"type": "DatasetReference",
									"parameters": {
										"Filesystem": {
											"value": "@activity('Lista arquivos').output.itemName",
											"type": "Expression"
										},
										"File": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AZ_SQL_STG",
									"type": "DatasetReference",
									"parameters": {
										"SCHEMA": "stg",
										"TABELA": {
											"value": "@activity('Lista arquivos').output.itemName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Move arquivo para PROCESSADOS",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "STG DW",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_HMAISDATADRIVEN",
									"type": "DatasetReference",
									"parameters": {
										"Filesystem": {
											"value": "@activity('Lista arquivos').output.itemName",
											"type": "Expression"
										},
										"File": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_HMAISDATADRIVEN",
									"type": "DatasetReference",
									"parameters": {
										"Filesystem": {
											"value": "@concat(activity('Lista arquivos').output.itemName,'\\Processados')",
											"type": "Expression"
										},
										"File": {
											"value": "@concat(item().name,'-',utcnow())",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Apaga arquivo",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Move arquivo para PROCESSADOS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_HMAISDATADRIVEN",
									"type": "DatasetReference",
									"parameters": {
										"Filesystem": {
											"value": "@activity('Lista arquivos').output.itemName",
											"type": "Expression"
										},
										"File": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "sv_hmaisbrasildatadriven",
										"type": "LinkedServiceReference"
									},
									"path": "ceop/logs"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "STG DW",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Copia dados para a STG",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SQL_DESTINO",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "NonQuery",
										"text": "MERGE               \n    dw.visaodf AS destino           \nUSING            \n    stg.visaodf AS ORIGEM           \n           \n    ON(    \n    destino.NR_ATENDIMENTO\t\t= origem.NR_ATENDIMENTO\t\t\tAND\n    destino.CD_ESTABELECIMENTO\t= origem.CD_ESTABELECIMENTO\t\tAND\n    destino.NT_INTERNO_CONTA\t= origem.NT_INTERNO_CONTA\t\tAND\n    destino.CD_PESSOA_FISICA\t= origem.CD_PESSOA_FISICA\t\tAND\n\tdestino.cd_convenio\t\t\t= origem.cd_convenio\t\t\tAND\n\tdestino.cd_item_unico\t\t= origem.cd_item_unico\t\n\n)        \n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET         \n\ndestino.NR_ATENDIMENTO\t\t\t= origem.NR_ATENDIMENTO,\ndestino.CD_ESTABELECIMENTO\t\t= origem.CD_ESTABELECIMENTO,\ndestino.DS_ESTABELECIMENTO\t\t= origem.DS_ESTABELECIMENTO,\ndestino.NT_INTERNO_CONTA\t\t= origem.NT_INTERNO_CONTA,\ndestino.CD_PESSOA_FISICA\t\t= origem.CD_PESSOA_FISICA,\ndestino.NM_PESSOA_FISICA\t\t= origem.NM_PESSOA_FISICA,\ndestino.DT_NASCIMENTO\t\t\t= origem.DT_NASCIMENTO,\ndestino.CNPJ_CONVENIO\t\t\t= origem.CNPJ_CONVENIO,\ndestino.CD_CONVENIO\t\t\t\t= origem.CD_CONVENIO,\ndestino.DS_CONVENIO\t\t\t\t= origem.DS_CONVENIO,\ndestino.CRM\t\t\t\t\t\t= origem.CRM,\ndestino.CD_MEDICO_EXECUTANTE\t= origem.CD_MEDICO_EXECUTANTE,\ndestino.NM_MEDICOEXECUTANTE\t\t= origem.NM_MEDICOEXECUTANTE,\ndestino.CD_SETOR_EXECUTANTE\t\t= origem.CD_SETOR_EXECUTANTE,\ndestino.DS_SETOR_EXECUTANTE\t\t= origem.DS_SETOR_EXECUTANTE,\ndestino.DT_ENTRADA\t\t\t\t= origem.DT_ENTRADA,\ndestino.COD_TUSS\t\t\t\t= origem.COD_TUSS,\ndestino.CD_ITEM_UNICO\t\t\t= origem.CD_ITEM_UNICO,\ndestino.CD_ITEM\t\t\t\t\t= origem.CD_ITEM,\ndestino.DS_ITEM\t\t\t\t\t= origem.DS_ITEM,\ndestino.CTP_ITEM\t\t\t\t= origem.CTP_ITEM,\ndestino.DTP_ITEM\t\t\t\t= origem.DTP_ITEM,\ndestino.DT_LANC_ITEM\t\t\t= origem.DT_LANC_ITEM,\ndestino.QTD\t\t\t\t\t\t= origem.QTD,\ndestino.VALORUNITARIO\t\t\t= origem.VALORUNITARIO,\ndestino.VALOR\t\t\t\t\t= origem.VALOR\n\n \n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n    VALUES (\n\norigem.NR_ATENDIMENTO,\norigem.CD_ESTABELECIMENTO,\norigem.DS_ESTABELECIMENTO,\norigem.NT_INTERNO_CONTA,\norigem.CD_PESSOA_FISICA,\norigem.NM_PESSOA_FISICA,\norigem.DT_NASCIMENTO,\norigem.CNPJ_CONVENIO,\norigem.CD_CONVENIO,\norigem.DS_CONVENIO,\norigem.CRM,\norigem.CD_MEDICO_EXECUTANTE,\norigem.NM_MEDICOEXECUTANTE,\norigem.CD_SETOR_EXECUTANTE,\norigem.DS_SETOR_EXECUTANTE,\norigem.DT_ENTRADA,\norigem.COD_TUSS,\norigem.CD_ITEM_UNICO,\norigem.CD_ITEM,\norigem.DS_ITEM,\norigem.CTP_ITEM,\norigem.DTP_ITEM,\norigem.DT_LANC_ITEM,\norigem.QTD,\norigem.VALORUNITARIO,\norigem.VALOR\n\n\n);\n"
									}
								]
							}
						}
					]
				}
			}
		],
		"folder": {
			"name": "Data Warehouse/P&P"
		},
		"annotations": []
	}
}