{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "OptyADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Desenvolvimento')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipelines desenvolvidos em conjunto com a empresa Class para a extração das informações de produção. Atualmente desativado.",
				"activities": [
					{
						"name": "SMART_HOSL_CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "WITH db as (\n    select \n        top 5\n        'Smart HOSL' as BASE\n        ,3 as CD_MARCA\n        ,'DAYHORC' as DS_MARCA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) AS NS_REGISTRO_UNICO --duvida\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,smm_num as NR_ATENDIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 7\n            when '9' then 7\n            when '13' then 7\n            when 'SCL' then 7\n            when '901' then 7\n            when 'IOF' then 7\n            when '13' then 8\n            when 'DHI' then 9\n        end as CD_ESTABELECIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 'HBA'\n            when '9' then 'HBA'\n            when '13' then 'HBA'\n            when 'SCL' then 'HBA'\n            when '901' then 'HBA'\n            when 'IOF' then 'HBA'\n            when '13' then 'Itaigara'\n            when 'DHI' then 'Itabuna'\n        end as DS_ESTABELECIMENTO\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case \n            when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,0) as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIF_PROCEDIMENTO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as IE_STATUS_CONTA\n        ,0 as CD_TUSS \n        ,'' DS_CLASSIF_LIO\n        ,smm_sfat\n        ,smm_pacote\n        ,smm_num_pai\n        ,smm_p_osm_serie\n        ,smm_p_osm_num\n        ,smm_p_smm_num\n        ,smm_hsp_num\n        ,smm_rci_serie\n        ,smm_rci_num\n    from \n        osm\n        inner join smm on (\n            smm_osm_serie = osm_serie\n            and smm_osm = osm_num\n        )\n        inner join str str_osm on (\n            str_osm.str_cod = osm_str\n        )\n        inner join str str_emp on (\n            str_osm.str_str_cod = str_emp.str_cod\n        )\n        inner join pac on (\n            pac_reg = osm_pac\n        )\n        inner join cnv on (\n            cnv_cod = osm_cnv\n        )\n        inner join psv psv_exe on (\n            psv_exe.psv_cod = smm_med\n        )\n        inner join psv psv_req on (\n            psv_req.psv_cod = smm_med\n        )\n        inner join smk on (\n            smk_cod = smm_cod\n            and smk_tipo = smm_tpcod\n        )\n        inner join ctf on (\n            ctf_cod = smk_ctf\n            and ctf_tipo = smk_tipo\n        )\n        left outer join tab on (\n            tab_cod = smm_tab_cod\n        )\n    where \n        1 = 1\n        and osm_dthr >= '2019-02-26'\n        and osm_dthr <= '2019-02-26 23:59:000'\n)\n\nselect \n    BASE\n    ,CD_MARCA\n    ,DS_MARCA\n    ,NS_REGISTRO_UNICO\n    ,DT_ATUALIZACAO\n    ,DT_ENTRADA\n    ,NR_INTERNO_CONTA\n    ,NR_ATENDIMENTO\n    ,CD_ESTABELECIMENTO\n    ,DS_ESTABELECIMENTO\n    ,CD_PESSOA_FISICA\n    ,DT_NASCIMENTO\n    ,NR_CPF\n    ,IE_SEXO\n    ,NR_CEP\n    ,DS_CIDADE\n    ,DS_PESSOA_FISICA\n    ,CD_CONVENIO\n    ,DS_CONVENIO\n    ,CD_MEDICO_EXECUTOR\n    ,DS_MEDICO_EXECUTOR\n    ,CD_MEDICO_REQUISITANTE\n    ,DS_MEDICO_REQUISITANTE\n    ,IE_ORIGEM_PROCEDIMENTO\n    ,CD_PROCEDIMENTO\n    ,DS_PROCEDIMENTO\n    ,DS_CLASSIF_PROCEDIMENTO\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select    \n            CD_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as CD_PROCEDIMENTO_PRINCIPAL\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select \n            DS_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as DS_PROCEDIMENTO_PRINCIPAL\n    ,QT_PROCEDIMENTO\n    ,(select \n        sum(VL_PROCEDIMENTO) \n    from \n        db tmp \n    where \n        tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n        and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n        and smm_sfat not in ('C')\n    ) AS VL_CONTA \n    ,VL_PROCEDIMENTO\n    ,IE_STATUS_ACERTO\n    ,IE_STATUS_CONTA\n    ,CD_TUSS\n    ,DS_CLASSIF_LIO\n    -- ,smm_rci_serie\n    -- ,smm_rci_num\n    -- ,smm_p_osm_serie\n    -- ,smm_p_osm_num\nfrom \n    db\nwhere\n    1 = 1\n    and VL_PROCEDIMENTO <> 0\n    and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n    and smm_sfat not in ('C')",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_MARCA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MARCA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NS_REGISTRO_UNICO",
											"type": "String"
										},
										"sink": {
											"name": "NR_REGISTRO_UNICO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_INTERNO_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "NR_INTERNO_CONTA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CEP",
											"type": "String"
										},
										"sink": {
											"name": "NR_CEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_ORIGEM_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_PROCEDIMENTO",
											"type": "Decimal"
										},
										"sink": {
											"name": "QT_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_CONTA",
											"type": "Double"
										},
										"sink": {
											"name": "VL_CONTA",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_CONTA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TUSS",
											"type": "String"
										},
										"sink": {
											"name": "CD_TUSS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "BASE",
											"type": "String"
										},
										"sink": {
											"name": "BASE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SMART_ITABUNA_CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "WITH db as (\n    select \n        TOP 5\n        'Smart DayHorc Itabuna' as BASE\n        ,3 as CD_MARCA\n        ,'DAYHORC' as DS_MARCA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) AS NS_REGISTRO_UNICO --duvida\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,smm_num as NR_ATENDIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 7\n            when '9' then 7\n            when '13' then 7\n            when 'SCL' then 7\n            when '901' then 7\n            when 'IOF' then 7\n            when '13' then 8\n            when 'DHI' then 9\n        end as CD_ESTABELECIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 'HBA'\n            when '9' then 'HBA'\n            when '13' then 'HBA'\n            when 'SCL' then 'HBA'\n            when '901' then 'HBA'\n            when 'IOF' then 'HBA'\n            when '13' then 'Itaigara'\n            when 'DHI' then 'Itabuna'\n        end as DS_ESTABELECIMENTO\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case \n            when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,0) as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIF_PROCEDIMENTO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as IE_STATUS_CONTA\n        ,0 as CD_TUSS \n        ,'' DS_CLASSIF_LIO\n        ,smm_sfat\n        ,smm_pacote\n        ,smm_num_pai\n        ,smm_p_osm_serie\n        ,smm_p_osm_num\n        ,smm_p_smm_num\n        ,smm_hsp_num\n        ,smm_rci_serie\n        ,smm_rci_num\n    from \n        osm\n        inner join smm on (\n            smm_osm_serie = osm_serie\n            and smm_osm = osm_num\n        )\n        inner join str str_osm on (\n            str_osm.str_cod = osm_str\n        )\n        inner join str str_emp on (\n            str_osm.str_str_cod = str_emp.str_cod\n        )\n        inner join pac on (\n            pac_reg = osm_pac\n        )\n        inner join cnv on (\n            cnv_cod = osm_cnv\n        )\n        inner join psv psv_exe on (\n            psv_exe.psv_cod = smm_med\n        )\n        inner join psv psv_req on (\n            psv_req.psv_cod = smm_med\n        )\n        inner join smk on (\n            smk_cod = smm_cod\n            and smk_tipo = smm_tpcod\n        )\n        inner join ctf on (\n            ctf_cod = smk_ctf\n            and ctf_tipo = smk_tipo\n        )\n        left outer join tab on (\n            tab_cod = smm_tab_cod\n        )\n    where \n        1 = 1\n        and osm_dthr >= '2019-02-26'\n        and osm_dthr <= '2019-02-26 23:59:000'\n)\n\nselect \n    BASE\n    ,CD_MARCA\n    ,DS_MARCA\n    ,NS_REGISTRO_UNICO\n    ,DT_ATUALIZACAO\n    ,DT_ENTRADA\n    ,NR_INTERNO_CONTA\n    ,NR_ATENDIMENTO\n    ,CD_ESTABELECIMENTO\n    ,DS_ESTABELECIMENTO\n    ,CD_PESSOA_FISICA\n    ,DT_NASCIMENTO\n    ,NR_CPF\n    ,IE_SEXO\n    ,NR_CEP\n    ,DS_CIDADE\n    ,DS_PESSOA_FISICA\n    ,CD_CONVENIO\n    ,DS_CONVENIO\n    ,CD_MEDICO_EXECUTOR\n    ,DS_MEDICO_EXECUTOR\n    ,CD_MEDICO_REQUISITANTE\n    ,DS_MEDICO_REQUISITANTE\n    ,IE_ORIGEM_PROCEDIMENTO\n    ,CD_PROCEDIMENTO\n    ,DS_PROCEDIMENTO\n    ,DS_CLASSIF_PROCEDIMENTO\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select    \n            CD_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as CD_PROCEDIMENTO_PRINCIPAL\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select \n            DS_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as DS_PROCEDIMENTO_PRINCIPAL\n    ,QT_PROCEDIMENTO\n    ,(select \n        sum(VL_PROCEDIMENTO) \n    from \n        db tmp \n    where \n        tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n        and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n        and smm_sfat not in ('C')\n    ) AS VL_CONTA \n    ,VL_PROCEDIMENTO\n    ,IE_STATUS_ACERTO\n    ,IE_STATUS_CONTA\n    ,CD_TUSS\n    ,DS_CLASSIF_LIO\n    -- ,smm_rci_serie\n    -- ,smm_rci_num\n    -- ,smm_p_osm_serie\n    -- ,smm_p_osm_num\nfrom \n    db\nwhere\n    1 = 1\n    and VL_PROCEDIMENTO <> 0\n    and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n    and smm_sfat not in ('C')",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_MARCA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MARCA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NS_REGISTRO_UNICO",
											"type": "String"
										},
										"sink": {
											"name": "NR_REGISTRO_UNICO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_INTERNO_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "NR_INTERNO_CONTA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CEP",
											"type": "String"
										},
										"sink": {
											"name": "NR_CEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_ORIGEM_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_PROCEDIMENTO",
											"type": "Decimal"
										},
										"sink": {
											"name": "QT_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_CONTA",
											"type": "Double"
										},
										"sink": {
											"name": "VL_CONTA",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_CONTA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TUSS",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_TUSS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "BASE",
											"type": "String"
										},
										"sink": {
											"name": "BASE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SMART_ITAIGARA_CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "WITH db as (\n    select \n        TOP 20\n        'Smart DayHorc Itaigara' as BASE\n        ,3 as CD_MARCA\n        ,'DAYHORC' as DS_MARCA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) AS NS_REGISTRO_UNICO --duvida\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,smm_num as NR_ATENDIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 7\n            when '9' then 7\n            when '13' then 7\n            when 'SCL' then 7\n            when '901' then 7\n            when 'IOF' then 7\n            when '13' then 8\n            when 'DHI' then 9\n        end as CD_ESTABELECIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 'HBA'\n            when '9' then 'HBA'\n            when '13' then 'HBA'\n            when 'SCL' then 'HBA'\n            when '901' then 'HBA'\n            when 'IOF' then 'HBA'\n            when '13' then 'Itaigara'\n            when 'DHI' then 'Itabuna'\n        end as DS_ESTABELECIMENTO\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case \n            when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,0) as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIF_PROCEDIMENTO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as IE_STATUS_CONTA\n        ,0 as CD_TUSS \n        ,'' DS_CLASSIF_LIO\n        ,smm_sfat\n        ,smm_pacote\n        ,smm_num_pai\n        ,smm_p_osm_serie\n        ,smm_p_osm_num\n        ,smm_p_smm_num\n        ,smm_hsp_num\n        ,smm_rci_serie\n        ,smm_rci_num\n    from \n        osm\n        inner join smm on (\n            smm_osm_serie = osm_serie\n            and smm_osm = osm_num\n        )\n        inner join str str_osm on (\n            str_osm.str_cod = osm_str\n        )\n        inner join str str_emp on (\n            str_osm.str_str_cod = str_emp.str_cod\n        )\n        inner join pac on (\n            pac_reg = osm_pac\n        )\n        inner join cnv on (\n            cnv_cod = osm_cnv\n        )\n        inner join psv psv_exe on (\n            psv_exe.psv_cod = smm_med\n        )\n        inner join psv psv_req on (\n            psv_req.psv_cod = smm_med\n        )\n        inner join smk on (\n            smk_cod = smm_cod\n            and smk_tipo = smm_tpcod\n        )\n        inner join ctf on (\n            ctf_cod = smk_ctf\n            and ctf_tipo = smk_tipo\n        )\n        left outer join tab on (\n            tab_cod = smm_tab_cod\n        )\n    where \n        1 = 1\n        and osm_dthr >= '2019-02-26'\n        and osm_dthr <= '2019-02-26 23:59:000'\n)\n\nselect \n    BASE\n    ,CD_MARCA\n    ,DS_MARCA\n    ,NS_REGISTRO_UNICO\n    ,DT_ATUALIZACAO\n    ,DT_ENTRADA\n    ,NR_INTERNO_CONTA\n    ,NR_ATENDIMENTO\n    ,CD_ESTABELECIMENTO\n    ,DS_ESTABELECIMENTO\n    ,CD_PESSOA_FISICA\n    ,DT_NASCIMENTO\n    ,NR_CPF\n    ,IE_SEXO\n    ,NR_CEP\n    ,DS_CIDADE\n    ,DS_PESSOA_FISICA\n    ,CD_CONVENIO\n    ,DS_CONVENIO\n    ,CD_MEDICO_EXECUTOR\n    ,DS_MEDICO_EXECUTOR\n    ,CD_MEDICO_REQUISITANTE\n    ,DS_MEDICO_REQUISITANTE\n    ,IE_ORIGEM_PROCEDIMENTO\n    ,CD_PROCEDIMENTO\n    ,DS_PROCEDIMENTO\n    ,DS_CLASSIF_PROCEDIMENTO\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select    \n            CD_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as CD_PROCEDIMENTO_PRINCIPAL\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select \n            DS_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as DS_PROCEDIMENTO_PRINCIPAL\n    ,QT_PROCEDIMENTO\n    ,(select \n        sum(VL_PROCEDIMENTO) \n    from \n        db tmp \n    where \n        tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n        and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n        and smm_sfat not in ('C')\n    ) AS VL_CONTA \n    ,VL_PROCEDIMENTO\n    ,IE_STATUS_ACERTO\n    ,IE_STATUS_CONTA\n    ,CD_TUSS\n    ,DS_CLASSIF_LIO\n    -- ,smm_rci_serie\n    -- ,smm_rci_num\n    -- ,smm_p_osm_serie\n    -- ,smm_p_osm_num\nfrom \n    db\nwhere\n    1 = 1\n    and VL_PROCEDIMENTO <> 0\n    and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n    and smm_sfat not in ('C')",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_MARCA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MARCA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NS_REGISTRO_UNICO",
											"type": "String"
										},
										"sink": {
											"name": "NR_REGISTRO_UNICO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_INTERNO_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "NR_INTERNO_CONTA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CEP",
											"type": "String"
										},
										"sink": {
											"name": "NR_CEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_ORIGEM_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_PROCEDIMENTO",
											"type": "Decimal"
										},
										"sink": {
											"name": "QT_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_CONTA",
											"type": "Double"
										},
										"sink": {
											"name": "VL_CONTA",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_CONTA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TUSS",
											"type": "String"
										},
										"sink": {
											"name": "CD_TUSS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "BASE",
											"type": "String"
										},
										"sink": {
											"name": "BASE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SMART_INOB_CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "WITH db as (\n    select \n        TOP 5\n        'Smart INOB' as BASE\n        ,3 as CD_MARCA\n        ,'DAYHORC' as DS_MARCA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) AS NS_REGISTRO_UNICO --duvida\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,smm_num as NR_ATENDIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 7\n            when '9' then 7\n            when '13' then 7\n            when 'SCL' then 7\n            when '901' then 7\n            when 'IOF' then 7\n            when '13' then 8\n            when 'DHI' then 9\n        end as CD_ESTABELECIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 'HBA'\n            when '9' then 'HBA'\n            when '13' then 'HBA'\n            when 'SCL' then 'HBA'\n            when '901' then 'HBA'\n            when 'IOF' then 'HBA'\n            when '13' then 'Itaigara'\n            when 'DHI' then 'Itabuna'\n        end as DS_ESTABELECIMENTO\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case \n            when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,0) as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIF_PROCEDIMENTO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as IE_STATUS_CONTA\n        ,0 as CD_TUSS \n        ,'' DS_CLASSIF_LIO\n        ,smm_sfat\n        ,smm_pacote\n        ,smm_num_pai\n        ,smm_p_osm_serie\n        ,smm_p_osm_num\n        ,smm_p_smm_num\n        ,smm_hsp_num\n        ,smm_rci_serie\n        ,smm_rci_num\n    from \n        osm\n        inner join smm on (\n            smm_osm_serie = osm_serie\n            and smm_osm = osm_num\n        )\n        inner join str str_osm on (\n            str_osm.str_cod = osm_str\n        )\n        inner join str str_emp on (\n            str_osm.str_str_cod = str_emp.str_cod\n        )\n        inner join pac on (\n            pac_reg = osm_pac\n        )\n        inner join cnv on (\n            cnv_cod = osm_cnv\n        )\n        inner join psv psv_exe on (\n            psv_exe.psv_cod = smm_med\n        )\n        inner join psv psv_req on (\n            psv_req.psv_cod = smm_med\n        )\n        inner join smk on (\n            smk_cod = smm_cod\n            and smk_tipo = smm_tpcod\n        )\n        inner join ctf on (\n            ctf_cod = smk_ctf\n            and ctf_tipo = smk_tipo\n        )\n        left outer join tab on (\n            tab_cod = smm_tab_cod\n        )\n    where \n        1 = 1\n        and osm_dthr >= '2019-02-26'\n        and osm_dthr <= '2019-02-26 23:59:000'\n)\n\nselect\n    BASE \n    ,CD_MARCA\n    ,DS_MARCA\n    ,NS_REGISTRO_UNICO\n    ,DT_ATUALIZACAO\n    ,DT_ENTRADA\n    ,NR_INTERNO_CONTA\n    ,NR_ATENDIMENTO\n    ,CD_ESTABELECIMENTO\n    ,DS_ESTABELECIMENTO\n    ,CD_PESSOA_FISICA\n    ,DT_NASCIMENTO\n    ,NR_CPF\n    ,IE_SEXO\n    ,NR_CEP\n    ,DS_CIDADE\n    ,DS_PESSOA_FISICA\n    ,CD_CONVENIO\n    ,DS_CONVENIO\n    ,CD_MEDICO_EXECUTOR\n    ,DS_MEDICO_EXECUTOR\n    ,CD_MEDICO_REQUISITANTE\n    ,DS_MEDICO_REQUISITANTE\n    ,IE_ORIGEM_PROCEDIMENTO\n    ,CD_PROCEDIMENTO\n    ,DS_PROCEDIMENTO\n    ,DS_CLASSIF_PROCEDIMENTO\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select    \n            CD_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as CD_PROCEDIMENTO_PRINCIPAL\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select \n            DS_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as DS_PROCEDIMENTO_PRINCIPAL\n    ,QT_PROCEDIMENTO\n    ,(select \n        sum(VL_PROCEDIMENTO) \n    from \n        db tmp \n    where \n        tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n        and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n        and smm_sfat not in ('C')\n    ) AS VL_CONTA \n    ,VL_PROCEDIMENTO\n    ,IE_STATUS_ACERTO\n    ,IE_STATUS_CONTA\n    ,CD_TUSS\n    ,DS_CLASSIF_LIO\n    -- ,smm_rci_serie\n    -- ,smm_rci_num\n    -- ,smm_p_osm_serie\n    -- ,smm_p_osm_num\nfrom \n    db\nwhere\n    1 = 1\n    and VL_PROCEDIMENTO <> 0\n    and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n    and smm_sfat not in ('C')",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_MARCA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MARCA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NS_REGISTRO_UNICO",
											"type": "String"
										},
										"sink": {
											"name": "NR_REGISTRO_UNICO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_INTERNO_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "NR_INTERNO_CONTA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CEP",
											"type": "String"
										},
										"sink": {
											"name": "NR_CEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_ORIGEM_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_PROCEDIMENTO",
											"type": "Decimal"
										},
										"sink": {
											"name": "QT_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_CONTA",
											"type": "Double"
										},
										"sink": {
											"name": "VL_CONTA",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_CONTA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TUSS",
											"type": "String"
										},
										"sink": {
											"name": "CD_TUSS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "BASE",
											"type": "String"
										},
										"sink": {
											"name": "BASE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_INOB_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SMART_IOF_CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "WITH db as (\n    select \n        TOP 5\n        'Smart IOF' as BASE\n        ,3 as CD_MARCA\n        ,'DAYHORC' as DS_MARCA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) AS NS_REGISTRO_UNICO --duvida\n        ,smm_dthr_alter as DT_ATUALIZACAO \n        ,osm_dthr as DT_ENTRADA\n        ,convert(varchar,osm_serie) + convert(varchar,osm_num) as NR_INTERNO_CONTA --duvida\n        ,smm_num as NR_ATENDIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 7\n            when '9' then 7\n            when '13' then 7\n            when 'SCL' then 7\n            when '901' then 7\n            when 'IOF' then 7\n            when '13' then 8\n            when 'DHI' then 9\n        end as CD_ESTABELECIMENTO\n        ,case ltrim(str_emp.str_cod) \n            when '18' then 'HBA'\n            when '9' then 'HBA'\n            when '13' then 'HBA'\n            when 'SCL' then 'HBA'\n            when '901' then 'HBA'\n            when 'IOF' then 'HBA'\n            when '13' then 'Itaigara'\n            when 'DHI' then 'Itabuna'\n        end as DS_ESTABELECIMENTO\n        ,osm_pac as CD_PESSOA_FISICA\n        ,pac_nasc as DT_NASCIMENTO\n        ,pac_numcpf as NR_CPF\n        ,pac_sexo as IE_SEXO\n        ,pac_cep as NR_CEP\n        ,case \n            when isnumeric(pac_cid) = 1 then (select cde_nome from cde where cde_cod = pac_cid)\n        else pac_cid end as DS_CIDADE\n        ,pac_nome as DS_PESSOA_FISICA\n        ,cnv_cod as CD_CONVENIO\n        ,cnv_nome as DS_CONVENIO\n        ,psv_exe.psv_cod as CD_MEDICO_EXECUTOR\n        ,psv_exe.psv_apel as DS_MEDICO_EXECUTOR\n        ,psv_req.psv_cod as CD_MEDICO_REQUISITANTE\n        ,psv_req.psv_apel as DS_MEDICO_REQUISITANTE\n        ,isnull(tab_padrao,0) as IE_ORIGEM_PROCEDIMENTO\n        ,smm_cod as CD_PROCEDIMENTO\n        ,smk_rot as DS_PROCEDIMENTO\n        ,case ctf_categ \n            when 'C' then 'Consulta'\n            when 'E' then 'Exames'\n            when 'R' then 'Cirurgia'\n            when 'T' then 'Taxas'\n            when 'A' then 'Terapia'\n            when 'O' then 'Outras'\n            when 'M' then 'Materiais'\n            when 'S' then 'Materiais Especiais'\n            when 'N' then 'Medicamentos'\n            when 'G' then 'Gases'\n            when 'O' then 'Outros'\n        end as DS_CLASSIF_PROCEDIMENTO\n        ,smm_qt as QT_PROCEDIMENTO\n        ,smm_vlr + isnull(smm_ajuste_vlr,0) as VL_PROCEDIMENTO\n        ,case \n            when smm_fat_serie is not null then 2\n        else 1 end AS IE_STATUS_ACERTO\n        ,case \n            when smm_fat_serie is not null then 'Definitivo'\n        else 'Provisório' end as IE_STATUS_CONTA\n        ,0 as CD_TUSS \n        ,'' DS_CLASSIF_LIO\n        ,smm_sfat\n        ,smm_pacote\n        ,smm_num_pai\n        ,smm_p_osm_serie\n        ,smm_p_osm_num\n        ,smm_p_smm_num\n        ,smm_hsp_num\n        ,smm_rci_serie\n        ,smm_rci_num\n    from \n        osm\n        inner join smm on (\n            smm_osm_serie = osm_serie\n            and smm_osm = osm_num\n        )\n        inner join str str_osm on (\n            str_osm.str_cod = osm_str\n        )\n        inner join str str_emp on (\n            str_osm.str_str_cod = str_emp.str_cod\n        )\n        inner join pac on (\n            pac_reg = osm_pac\n        )\n        inner join cnv on (\n            cnv_cod = osm_cnv\n        )\n        inner join psv psv_exe on (\n            psv_exe.psv_cod = smm_med\n        )\n        inner join psv psv_req on (\n            psv_req.psv_cod = smm_med\n        )\n        inner join smk on (\n            smk_cod = smm_cod\n            and smk_tipo = smm_tpcod\n        )\n        inner join ctf on (\n            ctf_cod = smk_ctf\n            and ctf_tipo = smk_tipo\n        )\n        left outer join tab on (\n            tab_cod = smm_tab_cod\n        )\n    where \n        1 = 1\n        and osm_dthr >= '2019-02-26'\n        and osm_dthr <= '2019-02-26 23:59:000'\n)\n\nselect\n    BASE \n    ,CD_MARCA\n    ,DS_MARCA\n    ,NS_REGISTRO_UNICO\n    ,DT_ATUALIZACAO\n    ,DT_ENTRADA\n    ,NR_INTERNO_CONTA\n    ,NR_ATENDIMENTO\n    ,CD_ESTABELECIMENTO\n    ,DS_ESTABELECIMENTO\n    ,CD_PESSOA_FISICA\n    ,DT_NASCIMENTO\n    ,NR_CPF\n    ,IE_SEXO\n    ,NR_CEP\n    ,DS_CIDADE\n    ,DS_PESSOA_FISICA\n    ,CD_CONVENIO\n    ,DS_CONVENIO\n    ,CD_MEDICO_EXECUTOR\n    ,DS_MEDICO_EXECUTOR\n    ,CD_MEDICO_REQUISITANTE\n    ,DS_MEDICO_REQUISITANTE\n    ,IE_ORIGEM_PROCEDIMENTO\n    ,CD_PROCEDIMENTO\n    ,DS_PROCEDIMENTO\n    ,DS_CLASSIF_PROCEDIMENTO\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select    \n            CD_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as CD_PROCEDIMENTO_PRINCIPAL\n    ,case \n        when smm_num_pai is null then DS_PROCEDIMENTO\n    else (select \n            DS_PROCEDIMENTO \n        from \n            db tmp \n        where \n            tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n            and db.smm_num_pai = tmp.NR_ATENDIMENTO\n        ) end as DS_PROCEDIMENTO_PRINCIPAL\n    ,QT_PROCEDIMENTO\n    ,(select \n        sum(VL_PROCEDIMENTO) \n    from \n        db tmp \n    where \n        tmp.NR_INTERNO_CONTA = db.NR_INTERNO_CONTA \n        and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n        and smm_sfat not in ('C')\n    ) AS VL_CONTA \n    ,VL_PROCEDIMENTO\n    ,IE_STATUS_ACERTO\n    ,IE_STATUS_CONTA\n    ,CD_TUSS\n    ,DS_CLASSIF_LIO\n    -- ,smm_rci_serie\n    -- ,smm_rci_num\n    -- ,smm_p_osm_serie\n    -- ,smm_p_osm_num\nfrom \n    db\nwhere\n    1 = 1\n    and VL_PROCEDIMENTO <> 0\n    and (smm_pacote IS NULL OR ( smm_pacote = 'C' )) \n    and smm_sfat not in ('C')",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_MARCA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MARCA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_ATENDIMENTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NS_REGISTRO_UNICO",
											"type": "String"
										},
										"sink": {
											"name": "NR_REGISTRO_UNICO",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ENTRADA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_INTERNO_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "NR_INTERNO_CONTA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CEP",
											"type": "String"
										},
										"sink": {
											"name": "NR_CEP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_CIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "DS_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "CD_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CONVENIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CONVENIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_EXECUTOR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										},
										"sink": {
											"name": "DS_MEDICO_REQUISITANTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_ORIGEM_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "IE_ORIGEM_PROCED",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "CD_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_PROCEDIMENTO",
											"type": "Decimal"
										},
										"sink": {
											"name": "QT_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_CONTA",
											"type": "Double"
										},
										"sink": {
											"name": "VL_CONTA",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										},
										"sink": {
											"name": "VL_PROCEDIMENTO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										},
										"sink": {
											"name": "IE_STATUS_ACERTO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "IE_STATUS_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_CONTA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_TUSS",
											"type": "String"
										},
										"sink": {
											"name": "CD_TUSS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "BASE",
											"type": "String"
										},
										"sink": {
											"name": "BASE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										},
										"sink": {
											"name": "DS_CLASSIF_LIO",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_INOB_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Sadalla_Tasy_CopyData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select\n\n'Tasy Sadalla' as BASE,\n--x.nr_seq_proc_pacote,\n7 as cd_marca,\n'Hospital de Olhos Sadalla Amin Ghanem' as marca,\n17 as cd_estabelecimento,\nc.nr_atendimento,\n'7'||'17'||c.nr_atendimento as nr_registro_unico,\nx.dt_atualizacao,\nat.dt_entrada,\nc.nr_interno_conta,\nnull as ds_estabelecimento,\npf.cd_pessoa_fisica,\n\npf.dt_nascimento,\npf.nr_cpf,\npf.ie_sexo,\nobter_compl_pf(pf.cd_pessoa_fisica,1,'CEP') as nr_cep,\nobter_compl_pf(pf.cd_pessoa_fisica,1,'CI') as ds_cidade,\n--pf.cd_pessoa_fisica as cd_pessoa_fisica,\nobter_nome_pf(at.cd_pessoa_fisica) as ds_pessoa_fisica,\nc.cd_convenio_parametro as cd_convenio,\nobter_nome_convenio(c.cd_convenio_parametro) as ds_convenio,\nx.cd_medico_executor,\nobter_nome_pf(x.cd_medico_executor) as ds_medico_executor,\nx.cd_medico_req as cd_medico_requisitante,\nobter_nome_pf(x.cd_medico_req) as ds_medico_requisitante,\nx.ie_origem_proced,\nx.cd_procedimento,\nx.ds_procedimento as ds_procedimento,\nx.classif as ds_classificacao,\n\n(select r.ds_grupo_receita from grupo_receita r where r.nr_sequencia = x.nr_seq_grupo_rec) as ds_classif_procedimento,\n\ncase\nwhen (select r.nr_sequencia from grupo_receita r where r.nr_sequencia = x.nr_seq_grupo_rec) = 12 then x.cd_procedimento\nelse\n\n(select z.cd_procedimento as valor \n from procedimento_paciente z \n where z.nr_atendimento = c.nr_atendimento \n and z.nr_interno_conta = c.nr_interno_conta \n --and z.vl_medico = (select max(w.vl_medico) \n and z.nr_sequencia = (select min(w.nr_sequencia)\n                          from procedimento_paciente w \n                          where w.nr_atendimento = z.nr_atendimento \n                          and w.nr_interno_conta = z.nr_interno_conta\n                          and w.cd_motivo_exc_conta is null\n                          ) \n group by z.cd_procedimento) end cd_proced_principal,\n\ncase\nwhen (select r.nr_sequencia from grupo_receita r where r.nr_sequencia = x.nr_seq_grupo_rec) = 12 then obter_desc_procedimento(x.cd_procedimento, x.ie_origem_proced)\nelse\n\nobter_desc_procedimento(\n\n(select z.cd_procedimento as valor \n   from procedimento_paciente z \n   where z.nr_atendimento = c.nr_atendimento \n   and z.nr_interno_conta = c.nr_interno_conta \n   --and z.vl_medico = (select max(w.vl_medico) \n    and z.nr_sequencia = (select min(w.nr_sequencia)\n                            from procedimento_paciente w \n                            where w.nr_atendimento = z.nr_atendimento \n                            and w.nr_interno_conta = z.nr_interno_conta\n                            and w.cd_motivo_exc_conta is null\n                            ) \n                            group by z.cd_procedimento),\n\n(select min(z.ie_origem_proced) as ie_origem_proced \n   from procedimento_paciente z \n   where z.nr_atendimento = c.nr_atendimento \n   and z.nr_interno_conta = c.nr_interno_conta \n   --and z.vl_medico = (select max(w.vl_medico) \n    and z.nr_sequencia = (select min(w.nr_sequencia)\n                         from procedimento_paciente w \n                         where w.nr_atendimento = z.nr_atendimento \n                         and w.nr_interno_conta = z.nr_interno_conta\n                         and w.cd_motivo_exc_conta is null\n                         ) \n group by z.ie_origem_proced)\n\n)end ds_proced_principal,\n\nx.qt_procedimento,\nc.vl_conta,\nx.vl_procedimento,\nc.ie_status_acerto,\ndecode(c.ie_status_acerto, 1,'Provisorio' , 2 ,'Definitivo') as status_conta,\nx.tuss as cd_tuss,\n(select x.ds_estrutura from  mat_estrutura x, mat_estrutura_cadastro y where x.nr_sequencia = y.nr_seq_estrutura and y.cd_material = x.cd_procedimento) as ds_classif_lio\nfrom atendimento_paciente at,\nconta_paciente c,\npessoa_fisica pf,\n\n(select p.nr_interno_conta, \np.cd_procedimento, \nobter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced) as ds_procedimento, \nobter_valor_dominio(19,pr.ie_classificacao) as classif,\np.cd_medico_executor,\np.cd_medico_req,\np.ie_origem_proced,\np.qt_procedimento,\np.vl_procedimento,\np.vl_medico,\np.nr_sequencia,\np.cd_edicao_amb,\np.cd_convenio,\np.nr_atendimento,\np.cd_motivo_exc_conta,\np.nr_seq_proc_crit_repasse,\nobter_codigo_tuss(p.nr_seq_proc_interno) as tuss,\np.dt_atualizacao,\npr.nr_seq_grupo_rec\nfrom procedimento_paciente p,\n     procedimento pr\nwhere p.cd_procedimento = pr.cd_procedimento\nand p.ie_origem_proced = pr.ie_origem_proced\n\nunion all\nselect mp.nr_interno_conta, \nmp.cd_material as cd_procedimento, \nm.ds_material as ds_procedimento,\nobter_dados_material(m.cd_material,'GRU') as classif,\nobter_medico_resp_atend(mp.nr_atendimento,'C') as cd_medico_executor,\nobter_medico_resp_atend(mp.nr_atendimento,'C') as cd_medico_req,\n0 as ie_origem_proced,\nmp.qt_material,\nmp.vl_material,\n0 vl_medico,\nmp.nr_sequencia,\n'0' as cd_edicao_amb,\nmp.cd_convenio,\nmp.nr_atendimento,\nmp.cd_motivo_exc_conta,\n0 nr_seq_proc_crit_repasse,\n0 tuss,\nmp.dt_atualizacao,\n0 nr_seq_grupo_rec\nfrom material_atend_paciente mp,\n     material m\nwhere mp.cd_material = m.cd_material) x\n\nwhere at.nr_atendimento = c.nr_atendimento\nand c.nr_interno_conta = x.nr_interno_conta\nand at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand c.ie_cancelamento is null\nand x.cd_motivo_exc_conta is null\nand c.cd_estabelecimento = 1\nand at.dt_entrada BETWEEN sysdate -2 and sysdate\nand c.vl_conta > 0\nand ROWNUM <=5\ngroup by \nc.nr_atendimento,\nat.dt_entrada,\nc.nr_interno_conta,\nc.cd_estabelecimento,\nat.cd_pessoa_fisica,\nc.cd_convenio_parametro,\nc.vl_conta,\nx.nr_sequencia,\nx.vl_medico,\nx.vl_procedimento,\nx.ie_origem_proced,\nx.cd_procedimento,\nx.ds_procedimento,\nx.qt_procedimento,\nx.cd_edicao_amb,\nx.cd_medico_executor,\nc.ie_status_acerto,\nx.nr_atendimento,\nx.cd_convenio,\nat.ie_tipo_atendimento,\nx.nr_interno_conta,\npf.dt_nascimento,\npf.nr_cpf,\nx.cd_medico_req,\npf.ie_sexo,\npf.cd_pessoa_fisica,\nx.classif,\nx.tuss,\nx.nr_seq_grupo_rec,\nx.dt_atualizacao,\nat.nr_atendimento\n\norder by 5,3 desc",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000,
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTEMPTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Producao Medica/Desenvolvimento"
				},
				"annotations": [],
				"lastPublishTime": "2020-02-10T20:56:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Empresas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Alimenta tabela:\n\nEmpresa_Unidade para o cadastro da tabela unica.",
				"activities": [
					{
						"name": "Estabelecimento HOSL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select 43 + ROW_NUMBER() OVER (ORDER BY emp_cgc) AS CD_ESTABELECIMENTO,\nemp_cgc AS CNPJ,\n'Hospital de Olhos Santa Luzia' as MARCA,\ngcc.GCC_DESCR AS DS_ESTABELECIMENTO\nfrom\ngcc, \nstr, \nemp\nwhere GCC_STR_COD = STR_COD\nand STR_EMP_COD = emp_cod\nAND emp_cgc not in ('-', '12305371000160')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Estabelecimento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Estabelecimento Cloud",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT ROWNUM AS CD_ESTABELECIMENTO, EB.CD_CGC AS CNPJ,\nEM.DS_NOME_CURTO as MARCA,\nEB.NM_FANTASIA_ESTAB AS DS_ESTABELECIMENTO\nFROM\nEMPRESA EM,\nESTABELECIMENTO EB\nWHERE EM.CD_EMPRESA = EB.CD_EMPRESA\nAND EB.IE_SITUACAO = 'A'\norder by 3",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Estabelecimento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Estabelecimento Sadalla",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT ROWNUM AS CD_ESTABELECIMENTO, EB.CD_CGC AS CNPJ,\nEM.DS_NOME_CURTO as MARCA,\nEB.NM_FANTASIA_ESTAB AS DS_ESTABELECIMENTO\nFROM\nEMPRESA EM,\nESTABELECIMENTO EB\nWHERE EM.CD_EMPRESA = EB.CD_EMPRESA\nAND EB.IE_SITUACAO = 'A'\norder by 3",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Estabelecimento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Cadastros Gerais"
				},
				"annotations": [],
				"lastPublishTime": "2020-02-10T20:56:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Extracao Dado')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"description": "Verifica se é primeiro dia do mês",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(trim(variables('day_now')),'1')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ITG - Smart",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "with ctf as(\n\n    SELECT\n        x.ctf_cod    \n        ,x.ctf_tipo\n        ,case\n            when UPPER(x.ctf_categ) = 'C' then 'Consultas'\n            when UPPER(x.ctf_categ) = 'R' then 'Cirurgias'\n            when UPPER(x.ctf_categ) = 'E' then 'Exames'\n            when UPPER(x.ctf_categ) = 'T' then 'Taxas'\n            when UPPER(x.ctf_categ) = 'D' then 'Diárias'\n            when UPPER(x.ctf_categ) = 'A' then 'Terapia'\n            when UPPER(x.ctf_categ) = 'M' then 'Materiais'\n            when UPPER(x.ctf_categ) = 'S' then 'Materiais Especiais'\n            when UPPER(x.ctf_categ) = 'N' then 'Medicamentos'\n            when UPPER(x.ctf_categ) = 'G' then 'Gases'\n            when UPPER(x.ctf_categ) = 'O' then 'Outros'\n          end DS_CLASSIF_PROCEDIMENTO  \n    from dbo.ctf x\n) \n\n\n,prod as(\nSELECT\n    itm.smm_num_pai\n    ,itm.smm_num\n    ,itm.smm_dthr_exec                                                                      as DT_LANCAMENTO\n    ,a.osm_num                                                                              as NR_ATENDIMENTO\n    ,a.osm_dthr                                                                             as DT_ENTRADA\n    ,a.osm_cnv                                                                              as CD_CONVENIO\n    ,pac.pac_reg                                                                            as CD_PESSOA_FISICA            \n    ,pac.pac_nome                                                                           AS NM_PACIENTE\n    -- ,cast(a.osm_serie as varchar(15)) + '.' + cast(a.osm_num as varchar(5))                 as NR_INTERNO_CONTA   \n    ,a.osm_serie                                                                            as NR_INTERNO_CONTA   \n    ,a.osm_atend                                                                            as CD_TIPO_ATEND\n    ,A.osm_proc                                                                             AS CD_PROCEDENCIA\n    -- ,a.osm_mcnv                                                                             as cd_carterinha_pac\n    -- ,a.osm_cid_cod                                                                          as cd_cid\n    -- ,a.osm_pln_cod                                                                          as cd_plano_convenio\n    ,a.osm_str                                                                              as CD_SETOR_ATENDIMENTO\n    ,itm.smm_str                                                                            as CD_SETOR_EXECUTANTE\n    ,a.osm_mreq                                                                             as CD_MEDICO_SOL\n    ,itm.smm_med                                                                            as CD_MEDICO_EXECUTANTE\n    -- ,itm.smm_cod                                                                            as cd_item_smart\n    -- ,itm.smm_pre_ccv                                                                        as cd_item_conv\n    ,CAST(CAST(a.osm_serie as varchar(10)) \n        + cast(a.osm_num as varchar(50)) \n        + CAST(itm.smm_num AS VARCHAR(50))\n        + CAST(A.OSM_PAC AS VARCHAR(50))\n         AS DECIMAL)                                                                        as NR_SEQUENCIA\n    ,pi.smk_cod                                                                             as NR_PROC_INTERNO       \n    ,pi.smk_amb                                                                             as CD_PROCEDIMENTO\n    ,pi.smk_rot                                                                             as DS_PROC_INTERNO \n    ,pi.smk_nome                                                                            as DS_PROCEDIMENTO\n    ,pi.smk_ctf\n    ,pi.smk_tipo\n    ,itm.smm_motivo_cancela                                                                 as MOTIVO_CANCEL_ITEM\n    ,itm.smm_canc_mot_cod                                                                   as CD_MOTIVO_CANCEL_ITEM\n    ,itm.smm_rpi_serie                                                                      as NR_SERIE_REPASSE\n    ,itm.smm_rpi_num                                                                        as NR_REPASSE\n    ,itm.smm_pacote                                                                         as IE_PACOTE\n    -- ,itm.smm_hon_seq\n    ,itm.smm_fat_serie\n    ,itm.smm_fat\n    ,itm.smm_tipo_fatura\n    ,itm.smm_dthr_alter                                                                     as dt_atualizacao                                                                      \n    ,itm.smm_qt                                                                             as QTD\n    ,itm.smm_vlr                                                                            AS VL_ITEM\n    ,isnull(itm.smm_ajuste_vlr,0)                                                           as VL_ITEM_AJUSTE\n    ,ROUND(ISNULL(round(\n                    (hon.hon_vl1 * itm.smm_qt) \n                  + (itm.smm_vlr + isnull(itm.smm_ajuste_vlr,0)) \n                  * hon.hon_pc1 / 100,3),0\n                  ),2)                                                                      AS VL_HM\n    ,ROUND(ISNULL(mte.mte_perc_desconto,0),2)                                               as PERC_DESCONTO\n\n\nFROM dbo.osm a                  (NOLOCK)\ninner join dbo.pac pac          (NOLOCK) on pac.pac_reg = a.osm_pac\ninner join dbo.smm itm          (NOLOCK) on itm.smm_osm_serie = a.osm_serie and itm.smm_osm = a.osm_num\ninner join dbo.smk pi           (NOLOCK) on pi.smk_cod = itm.smm_cod and pi.smK_tipo = itm.smm_tpcod\n-- left join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\nLEFT join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\n\nOUTER APPLY (\n    SELECT\n        CASE \n            WHEN (MTE.mte_valor <> 0)\n                THEN MTE.mte_desconto / MTE.mte_valor\n            ELSE 0\n        END AS mte_perc_desconto\n    FROM MTE MTE (NOLOCK)\n    LEFT JOIN NFS NFS (NOLOCK)  ON MTE.MTE_NFS_NUMERO = NFS.nfs_numero AND MTE.MTE_NFS_SERIE = NFS.nfs_serie AND MTE.MTE_NFS_TIPO = NFS.NFS_TIPO\n    WHERE MTE.MTE_SERIE = ITM.SMM_MTE_SERIE AND MTE.MTE_SEQ = ITM.SMM_MTE_SEQ\n)MTE\n\n\nWHERE \n     itm.smm_vlr <> 0\n    and (itm.smm_pacote IS NULL OR ( itm.smm_pacote = 'C' )) \n    and itm.smm_exec <> 'C'\n    and itm.smm_sfat <> 'C'\n    and itm.smm_str like '%'\n    and pi.smk_ctf LIKE '%'\n    AND (itm.smm_sfat IN ('a', 'f', '?', 'p', '?'))\n    and substring(cast(CAST(a.osm_dthr as date) as varchar(10)),1,7) = SUBSTRING(cast(CAST(getdate() AS DATE) as varchar(10)),1,7)\n    -- AND CAST(a.osm_dthr AS DATE) BETWEEN '2021-01-01' AND CAST(GETDATE() AS DATE)\n    -- AND A.osm_serie = '121' AND A.osm_num = '21460'\n)\n\nselect \n\n    90                                                  AS ID_SYSTEM\n    ,g.gcc_str_cod                                      AS CD_ESTABELECIMENTO\n    ,G.gcc_descr                                        AS DS_ESTABELECIMENTO\n    ,a.DT_ENTRADA\n    ,A.DT_LANCAMENTO\n    ,A.NR_ATENDIMENTO           \n    ,CAST(A.nr_interno_conta AS VARCHAR(10))\n        + CAST(A.NR_ATENDIMENTO AS VARCHAR(50))         AS NR_INTERNO_CONTA\n    ,emp.emp_cgc                                        as CGC_CONVENIO\n    ,A.cd_convenio                                      AS CD_CONVENIO\n    ,conv.cnv_nome                                      as DS_CONVENIO\n    ,a.CD_PESSOA_FISICA\n    ,A.NM_PACIENTE                                      AS NM_PACIENTE\n    ,A.CD_MEDICO_SOL\n    ,PSOL.psv_nome                                      AS MEDICO_SOLICITANTE\n    ,A.CD_MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_RESPONSAVEL\n    ,PEXC.psv_nome                                      AS MEDICO_ATENDIMENTO\n    ,B.str_cod                                          as CD_SETOR_ATENDIMENTO\n    ,b.str_nome                                         as DS_SETOR_ATENDIMENTO\n    ,A.NR_SEQUENCIA\n    -- ,A.smm_num_pai\n    -- ,smk.smk_rot                                        as DS_PROC_PRINC\n    ,A.NR_PROC_INTERNO\n    ,A.DS_PROC_INTERNO\n    ,A.CD_PROCEDIMENTO\n    ,A.DS_PROCEDIMENTO\n    ,c.DS_CLASSIF_PROCEDIMENTO\n    ,A.CD_PROCEDENCIA\n    ,A.QTD                                              AS QTD_ITEM\n    ,A.VL_ITEM                                          AS VL_ITEM_ORIGINAL                 \n    ,A.VL_ITEM + A.VL_ITEM_AJUSTE                       AS VL_ITEM\n    ,a.VL_HM\n    ,a.PERC_DESCONTO\n    ,a.DT_ATUALIZACAO\nfrom prod a\ninner join dbo.str b                (nolock)        on b.str_cod = a.CD_SETOR_ATENDIMENTO  \nleft join dbo.gcc g                (NOLOCK)        on g.gcc_str_cod = b.str_str_cod\ninner join dbo.cnv conv             (NOLOCK)        on conv.cnv_cod = a.cd_convenio\ninner join dbo.emp                  (nolock)        on emp_cod = conv.cnv_emp_cod  \ninner join ctf     c                                on ctf_cod = a.smk_ctf  and ctf_tipo = a.smk_tipo\nINNER JOIN psv     PEXC             (NOLOCK)        ON PEXC.psv_cod = A.CD_MEDICO_EXECUTANTE\nINNER JOIN psv     PSOL             (NOLOCK)        ON PSOL.psv_cod = A.CD_MEDICO_SOL\n\n\nWHERE C.DS_CLASSIF_PROCEDIMENTO IS NOT NULL\n",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "TRUNCATE TABLE dbo.aux_prod_diaria \n",
											"writeBehavior": "insert",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													},
													"sink": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													}
												},
												{
													"source": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													},
													"sink": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													}
												},
												{
													"source": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													},
													"sink": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													}
												},
												{
													"source": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SMART_ITAIGARA_PrdDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZ_PROD_DIARIA",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "ITB - Smart",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "ITG - Smart",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "with ctf as(\n\n    SELECT\n        x.ctf_cod    \n        ,x.ctf_tipo\n        ,case\n            when UPPER(x.ctf_categ) = 'C' then 'Consultas'\n            when UPPER(x.ctf_categ) = 'R' then 'Cirurgias'\n            when UPPER(x.ctf_categ) = 'E' then 'Exames'\n            when UPPER(x.ctf_categ) = 'T' then 'Taxas'\n            when UPPER(x.ctf_categ) = 'D' then 'Diárias'\n            when UPPER(x.ctf_categ) = 'A' then 'Terapia'\n            when UPPER(x.ctf_categ) = 'M' then 'Materiais'\n            when UPPER(x.ctf_categ) = 'S' then 'Materiais Especiais'\n            when UPPER(x.ctf_categ) = 'N' then 'Medicamentos'\n            when UPPER(x.ctf_categ) = 'G' then 'Gases'\n            when UPPER(x.ctf_categ) = 'O' then 'Outros'\n          end DS_CLASSIF_PROCEDIMENTO  \n    from dbo.ctf x\n) \n\n\n,prod as(\nSELECT\n    itm.smm_num_pai\n    ,itm.smm_num\n    ,itm.smm_dthr_exec                                                                      as DT_LANCAMENTO\n    ,a.osm_num                                                                              as NR_ATENDIMENTO\n    ,a.osm_dthr                                                                             as DT_ENTRADA\n    ,a.osm_cnv                                                                              as CD_CONVENIO\n    ,pac.pac_reg                                                                            as CD_PESSOA_FISICA            \n    ,pac.pac_nome                                                                           AS NM_PACIENTE\n    -- ,cast(a.osm_serie as varchar(15)) + '.' + cast(a.osm_num as varchar(5))                 as NR_INTERNO_CONTA   \n    ,a.osm_serie                                                                            as NR_INTERNO_CONTA   \n    ,a.osm_atend                                                                            as CD_TIPO_ATEND\n    ,A.osm_proc                                                                             AS CD_PROCEDENCIA\n    -- ,a.osm_mcnv                                                                             as cd_carterinha_pac\n    -- ,a.osm_cid_cod                                                                          as cd_cid\n    -- ,a.osm_pln_cod                                                                          as cd_plano_convenio\n    ,a.osm_str                                                                              as CD_SETOR_ATENDIMENTO\n    ,itm.smm_str                                                                            as CD_SETOR_EXECUTANTE\n    ,a.osm_mreq                                                                             as CD_MEDICO_SOL\n    ,itm.smm_med                                                                            as CD_MEDICO_EXECUTANTE\n    -- ,itm.smm_cod                                                                            as cd_item_smart\n    -- ,itm.smm_pre_ccv                                                                        as cd_item_conv\n    ,CAST(CAST(a.osm_serie as varchar(10)) \n        + cast(a.osm_num as varchar(50)) \n        + CAST(itm.smm_num AS VARCHAR(50))\n        + CAST(A.OSM_PAC AS VARCHAR(50))\n         AS DECIMAL)                                                                        as NR_SEQUENCIA\n    ,pi.smk_cod                                                                             as NR_PROC_INTERNO       \n    ,pi.smk_amb                                                                             as CD_PROCEDIMENTO\n    ,pi.smk_rot                                                                             as DS_PROC_INTERNO \n    ,pi.smk_nome                                                                            as DS_PROCEDIMENTO\n    ,pi.smk_ctf\n    ,pi.smk_tipo\n    ,itm.smm_motivo_cancela                                                                 as MOTIVO_CANCEL_ITEM\n    ,itm.smm_canc_mot_cod                                                                   as CD_MOTIVO_CANCEL_ITEM\n    ,itm.smm_rpi_serie                                                                      as NR_SERIE_REPASSE\n    ,itm.smm_rpi_num                                                                        as NR_REPASSE\n    ,itm.smm_pacote                                                                         as IE_PACOTE\n    -- ,itm.smm_hon_seq\n    ,itm.smm_fat_serie\n    ,itm.smm_fat\n    ,itm.smm_tipo_fatura\n    ,itm.smm_dthr_alter                                                                     as dt_atualizacao                                                                      \n    ,itm.smm_qt                                                                             as QTD\n    ,itm.smm_vlr                                                                            AS VL_ITEM\n    ,isnull(itm.smm_ajuste_vlr,0)                                                           as VL_ITEM_AJUSTE\n    ,ROUND(ISNULL(round(\n                    (hon.hon_vl1 * itm.smm_qt) \n                  + (itm.smm_vlr + isnull(itm.smm_ajuste_vlr,0)) \n                  * hon.hon_pc1 / 100,3),0\n                  ),2)                                                                      AS VL_HM\n    ,ROUND(ISNULL(mte.mte_perc_desconto,0),2)                                               as PERC_DESCONTO\n\n\nFROM dbo.osm a                  (NOLOCK)\ninner join dbo.pac pac          (NOLOCK) on pac.pac_reg = a.osm_pac\ninner join dbo.smm itm          (NOLOCK) on itm.smm_osm_serie = a.osm_serie and itm.smm_osm = a.osm_num\ninner join dbo.smk pi           (NOLOCK) on pi.smk_cod = itm.smm_cod and pi.smK_tipo = itm.smm_tpcod\n-- left join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\nLEFT join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\n\nOUTER APPLY (\n    SELECT\n        CASE \n            WHEN (MTE.mte_valor <> 0)\n                THEN MTE.mte_desconto / MTE.mte_valor\n            ELSE 0\n        END AS mte_perc_desconto\n    FROM MTE MTE (NOLOCK)\n    LEFT JOIN NFS NFS (NOLOCK)  ON MTE.MTE_NFS_NUMERO = NFS.nfs_numero AND MTE.MTE_NFS_SERIE = NFS.nfs_serie AND MTE.MTE_NFS_TIPO = NFS.NFS_TIPO\n    WHERE MTE.MTE_SERIE = ITM.SMM_MTE_SERIE AND MTE.MTE_SEQ = ITM.SMM_MTE_SEQ\n)MTE\n\n\nWHERE \n     itm.smm_vlr <> 0\n    and (itm.smm_pacote IS NULL OR ( itm.smm_pacote = 'C' )) \n    and itm.smm_exec <> 'C'\n    and itm.smm_sfat <> 'C'\n    and itm.smm_str like '%'\n    and pi.smk_ctf LIKE '%'\n    AND (itm.smm_sfat IN ('a', 'f', '?', 'p', '?'))\n    and substring(cast(CAST(a.osm_dthr as date) as varchar(10)),1,7) = SUBSTRING(cast(CAST(getdate() AS DATE) as varchar(10)),1,7)\n    -- AND CAST(a.osm_dthr AS DATE) BETWEEN '2021-01-01' AND CAST(GETDATE() AS DATE)\n    -- AND A.osm_serie = '121' AND A.osm_num = '21460'\n)\n\nselect \n\n    90                                                  AS ID_SYSTEM\n    ,g.gcc_str_cod                                      AS CD_ESTABELECIMENTO\n    ,G.gcc_descr                                        AS DS_ESTABELECIMENTO\n    ,a.DT_ENTRADA\n    ,A.DT_LANCAMENTO\n    ,A.NR_ATENDIMENTO           \n    ,CAST(A.nr_interno_conta AS VARCHAR(10))\n        + CAST(A.NR_ATENDIMENTO AS VARCHAR(50))         AS NR_INTERNO_CONTA\n    ,emp.emp_cgc                                        as CGC_CONVENIO\n    ,A.cd_convenio                                      AS CD_CONVENIO\n    ,conv.cnv_nome                                      as DS_CONVENIO\n    ,a.CD_PESSOA_FISICA\n    ,A.NM_PACIENTE                                      AS NM_PACIENTE\n    ,A.CD_MEDICO_SOL\n    ,PSOL.psv_nome                                      AS MEDICO_SOLICITANTE\n    ,A.CD_MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_RESPONSAVEL\n    ,PEXC.psv_nome                                      AS MEDICO_ATENDIMENTO\n    ,B.str_cod                                          as CD_SETOR_ATENDIMENTO\n    ,b.str_nome                                         as DS_SETOR_ATENDIMENTO\n    ,A.NR_SEQUENCIA\n    -- ,A.smm_num_pai\n    -- ,smk.smk_rot                                        as DS_PROC_PRINC\n    ,A.NR_PROC_INTERNO\n    ,A.DS_PROC_INTERNO\n    ,A.CD_PROCEDIMENTO\n    ,A.DS_PROCEDIMENTO\n    ,c.DS_CLASSIF_PROCEDIMENTO\n    ,A.CD_PROCEDENCIA\n    ,A.QTD                                              AS QTD_ITEM\n    ,A.VL_ITEM                                          AS VL_ITEM_ORIGINAL                 \n    ,A.VL_ITEM + A.VL_ITEM_AJUSTE                       AS VL_ITEM\n    ,a.VL_HM\n    ,a.PERC_DESCONTO\n    ,a.DT_ATUALIZACAO\nfrom prod a\ninner join dbo.str b                (nolock)        on b.str_cod = a.CD_SETOR_ATENDIMENTO  \nleft join dbo.gcc g                (NOLOCK)        on g.gcc_str_cod = b.str_str_cod\ninner join dbo.cnv conv             (NOLOCK)        on conv.cnv_cod = a.cd_convenio\ninner join dbo.emp                  (nolock)        on emp_cod = conv.cnv_emp_cod  \ninner join ctf     c                                on ctf_cod = a.smk_ctf  and ctf_tipo = a.smk_tipo\nINNER JOIN psv     PEXC             (NOLOCK)        ON PEXC.psv_cod = A.CD_MEDICO_EXECUTANTE\nINNER JOIN psv     PSOL             (NOLOCK)        ON PSOL.psv_cod = A.CD_MEDICO_SOL\n\n\nWHERE C.DS_CLASSIF_PROCEDIMENTO IS NOT NULL\n",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													},
													"sink": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													}
												},
												{
													"source": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													},
													"sink": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													}
												},
												{
													"source": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													},
													"sink": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													}
												},
												{
													"source": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SMART_ITABUNA_PrdDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZ_PROD_DIARIA",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "IOF - Smart",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "ITB - Smart",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "with ctf as(\n\n    SELECT\n        x.ctf_cod    \n        ,x.ctf_tipo\n        ,case\n            when UPPER(x.ctf_categ) = 'C' then 'Consultas'\n            when UPPER(x.ctf_categ) = 'R' then 'Cirurgias'\n            when UPPER(x.ctf_categ) = 'E' then 'Exames'\n            when UPPER(x.ctf_categ) = 'T' then 'Taxas'\n            when UPPER(x.ctf_categ) = 'D' then 'Diárias'\n            when UPPER(x.ctf_categ) = 'A' then 'Terapia'\n            when UPPER(x.ctf_categ) = 'M' then 'Materiais'\n            when UPPER(x.ctf_categ) = 'S' then 'Materiais Especiais'\n            when UPPER(x.ctf_categ) = 'N' then 'Medicamentos'\n            when UPPER(x.ctf_categ) = 'G' then 'Gases'\n            when UPPER(x.ctf_categ) = 'O' then 'Outros'\n          end DS_CLASSIF_PROCEDIMENTO  \n    from dbo.ctf x\n) \n\n\n,prod as(\nSELECT\n    itm.smm_num_pai\n    ,itm.smm_num\n    ,itm.smm_dthr_exec                                                                      as DT_LANCAMENTO\n    ,a.osm_num                                                                              as NR_ATENDIMENTO\n    ,a.osm_dthr                                                                             as DT_ENTRADA\n    ,a.osm_cnv                                                                              as CD_CONVENIO\n    ,pac.pac_reg                                                                            as CD_PESSOA_FISICA            \n    ,pac.pac_nome                                                                           AS NM_PACIENTE\n    -- ,cast(a.osm_serie as varchar(15)) + '.' + cast(a.osm_num as varchar(5))                 as NR_INTERNO_CONTA   \n    ,a.osm_serie                                                                            as NR_INTERNO_CONTA   \n    ,a.osm_atend                                                                            as CD_TIPO_ATEND\n    ,A.osm_proc                                                                             AS CD_PROCEDENCIA\n    -- ,a.osm_mcnv                                                                             as cd_carterinha_pac\n    -- ,a.osm_cid_cod                                                                          as cd_cid\n    -- ,a.osm_pln_cod                                                                          as cd_plano_convenio\n    ,a.osm_str                                                                              as CD_SETOR_ATENDIMENTO\n    ,itm.smm_str                                                                            as CD_SETOR_EXECUTANTE\n    ,a.osm_mreq                                                                             as CD_MEDICO_SOL\n    ,itm.smm_med                                                                            as CD_MEDICO_EXECUTANTE\n    -- ,itm.smm_cod                                                                            as cd_item_smart\n    -- ,itm.smm_pre_ccv                                                                        as cd_item_conv\n    ,CAST(CAST(a.osm_serie as varchar(10)) \n        + cast(a.osm_num as varchar(50)) \n        + CAST(itm.smm_num AS VARCHAR(50))\n        + CAST(A.OSM_PAC AS VARCHAR(50))\n         AS DECIMAL)                                                                        as NR_SEQUENCIA\n    ,pi.smk_cod                                                                             as NR_PROC_INTERNO       \n    ,pi.smk_amb                                                                             as CD_PROCEDIMENTO\n    ,pi.smk_rot                                                                             as DS_PROC_INTERNO \n    ,pi.smk_nome                                                                            as DS_PROCEDIMENTO\n    ,pi.smk_ctf\n    ,pi.smk_tipo\n    ,itm.smm_motivo_cancela                                                                 as MOTIVO_CANCEL_ITEM\n    ,itm.smm_canc_mot_cod                                                                   as CD_MOTIVO_CANCEL_ITEM\n    ,itm.smm_rpi_serie                                                                      as NR_SERIE_REPASSE\n    ,itm.smm_rpi_num                                                                        as NR_REPASSE\n    ,itm.smm_pacote                                                                         as IE_PACOTE\n    -- ,itm.smm_hon_seq\n    ,itm.smm_fat_serie\n    ,itm.smm_fat\n    ,itm.smm_tipo_fatura\n    ,itm.smm_dthr_alter                                                                     as dt_atualizacao                                                                      \n    ,itm.smm_qt                                                                             as QTD\n    ,itm.smm_vlr                                                                            AS VL_ITEM\n    ,isnull(itm.smm_ajuste_vlr,0)                                                           as VL_ITEM_AJUSTE\n    ,ROUND(ISNULL(round(\n                    (hon.hon_vl1 * itm.smm_qt) \n                  + (itm.smm_vlr + isnull(itm.smm_ajuste_vlr,0)) \n                  * hon.hon_pc1 / 100,3),0\n                  ),2)                                                                      AS VL_HM\n    ,ROUND(ISNULL(mte.mte_perc_desconto,0),2)                                               as PERC_DESCONTO\n\n\nFROM dbo.osm a                  (NOLOCK)\ninner join dbo.pac pac          (NOLOCK) on pac.pac_reg = a.osm_pac\ninner join dbo.smm itm          (NOLOCK) on itm.smm_osm_serie = a.osm_serie and itm.smm_osm = a.osm_num\ninner join dbo.smk pi           (NOLOCK) on pi.smk_cod = itm.smm_cod and pi.smK_tipo = itm.smm_tpcod\n-- left join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\nLEFT join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\n\nOUTER APPLY (\n    SELECT\n        CASE \n            WHEN (MTE.mte_valor <> 0)\n                THEN MTE.mte_desconto / MTE.mte_valor\n            ELSE 0\n        END AS mte_perc_desconto\n    FROM MTE MTE (NOLOCK)\n    LEFT JOIN NFS NFS (NOLOCK)  ON MTE.MTE_NFS_NUMERO = NFS.nfs_numero AND MTE.MTE_NFS_SERIE = NFS.nfs_serie AND MTE.MTE_NFS_TIPO = NFS.NFS_TIPO\n    WHERE MTE.MTE_SERIE = ITM.SMM_MTE_SERIE AND MTE.MTE_SEQ = ITM.SMM_MTE_SEQ\n)MTE\n\n\nWHERE \n     itm.smm_vlr <> 0\n    and (itm.smm_pacote IS NULL OR ( itm.smm_pacote = 'C' )) \n    and itm.smm_exec <> 'C'\n    and itm.smm_sfat <> 'C'\n    and itm.smm_str like '%'\n    and pi.smk_ctf LIKE '%'\n    AND (itm.smm_sfat IN ('a', 'f', '?', 'p', '?'))\n    and substring(cast(CAST(a.osm_dthr as date) as varchar(10)),1,7) = SUBSTRING(cast(CAST(getdate() AS DATE) as varchar(10)),1,7)\n    -- AND CAST(a.osm_dthr AS DATE) BETWEEN '2021-01-01' AND CAST(GETDATE() AS DATE)\n    -- AND A.osm_serie = '121' AND A.osm_num = '21460'\n)\n\nselect \n\n    90                                                  AS ID_SYSTEM\n    ,g.gcc_str_cod                                      AS CD_ESTABELECIMENTO\n    ,G.gcc_descr                                        AS DS_ESTABELECIMENTO\n    ,a.DT_ENTRADA\n    ,A.DT_LANCAMENTO\n    ,A.NR_ATENDIMENTO           \n    ,CAST(A.nr_interno_conta AS VARCHAR(10))\n        + CAST(A.NR_ATENDIMENTO AS VARCHAR(50))         AS NR_INTERNO_CONTA\n    ,emp.emp_cgc                                        as CGC_CONVENIO\n    ,A.cd_convenio                                      AS CD_CONVENIO\n    ,conv.cnv_nome                                      as DS_CONVENIO\n    ,a.CD_PESSOA_FISICA\n    ,A.NM_PACIENTE                                      AS NM_PACIENTE\n    ,A.CD_MEDICO_SOL\n    ,PSOL.psv_nome                                      AS MEDICO_SOLICITANTE\n    ,A.CD_MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_RESPONSAVEL\n    ,PEXC.psv_nome                                      AS MEDICO_ATENDIMENTO\n    ,B.str_cod                                          as CD_SETOR_ATENDIMENTO\n    ,b.str_nome                                         as DS_SETOR_ATENDIMENTO\n    ,A.NR_SEQUENCIA\n    -- ,A.smm_num_pai\n    -- ,smk.smk_rot                                        as DS_PROC_PRINC\n    ,A.NR_PROC_INTERNO\n    ,A.DS_PROC_INTERNO\n    ,A.CD_PROCEDIMENTO\n    ,A.DS_PROCEDIMENTO\n    ,c.DS_CLASSIF_PROCEDIMENTO\n    ,A.CD_PROCEDENCIA\n    ,A.QTD                                              AS QTD_ITEM\n    ,A.VL_ITEM                                          AS VL_ITEM_ORIGINAL                 \n    ,A.VL_ITEM + A.VL_ITEM_AJUSTE                       AS VL_ITEM\n    ,a.VL_HM\n    ,a.PERC_DESCONTO\n    ,a.DT_ATUALIZACAO\nfrom prod a\ninner join dbo.str b                (nolock)        on b.str_cod = a.CD_SETOR_ATENDIMENTO  \nleft join dbo.gcc g                (NOLOCK)        on g.gcc_str_cod = b.str_str_cod\ninner join dbo.cnv conv             (NOLOCK)        on conv.cnv_cod = a.cd_convenio\ninner join dbo.emp                  (nolock)        on emp_cod = conv.cnv_emp_cod  \ninner join ctf     c                                on ctf_cod = a.smk_ctf  and ctf_tipo = a.smk_tipo\nINNER JOIN psv     PEXC             (NOLOCK)        ON PEXC.psv_cod = A.CD_MEDICO_EXECUTANTE\nINNER JOIN psv     PSOL             (NOLOCK)        ON PSOL.psv_cod = A.CD_MEDICO_SOL\n\n\nWHERE C.DS_CLASSIF_PROCEDIMENTO IS NOT NULL\n",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													},
													"sink": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													}
												},
												{
													"source": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													},
													"sink": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													}
												},
												{
													"source": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													},
													"sink": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													}
												},
												{
													"source": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SMART_IOF_PrdDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZ_PROD_DIARIA",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Oftalmoclin - Smart",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "IOF - Smart",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "with ctf as(\n\n    SELECT\n        x.ctf_cod    \n        ,x.ctf_tipo\n        ,case\n            when UPPER(x.ctf_categ) = 'C' then 'Consultas'\n            when UPPER(x.ctf_categ) = 'R' then 'Cirurgias'\n            when UPPER(x.ctf_categ) = 'E' then 'Exames'\n            when UPPER(x.ctf_categ) = 'T' then 'Taxas'\n            when UPPER(x.ctf_categ) = 'D' then 'Diárias'\n            when UPPER(x.ctf_categ) = 'A' then 'Terapia'\n            when UPPER(x.ctf_categ) = 'M' then 'Materiais'\n            when UPPER(x.ctf_categ) = 'S' then 'Materiais Especiais'\n            when UPPER(x.ctf_categ) = 'N' then 'Medicamentos'\n            when UPPER(x.ctf_categ) = 'G' then 'Gases'\n            when UPPER(x.ctf_categ) = 'O' then 'Outros'\n          end DS_CLASSIF_PROCEDIMENTO  \n    from dbo.ctf x\n) \n\n\n,prod as(\nSELECT\n    itm.smm_num_pai\n    ,itm.smm_num\n    ,itm.smm_dthr_exec                                                                      as DT_LANCAMENTO\n    ,a.osm_num                                                                              as NR_ATENDIMENTO\n    ,a.osm_dthr                                                                             as DT_ENTRADA\n    ,a.osm_cnv                                                                              as CD_CONVENIO\n    ,pac.pac_reg                                                                            as CD_PESSOA_FISICA            \n    ,pac.pac_nome                                                                           AS NM_PACIENTE\n    -- ,cast(a.osm_serie as varchar(15)) + '.' + cast(a.osm_num as varchar(5))                 as NR_INTERNO_CONTA   \n    ,a.osm_serie                                                                            as NR_INTERNO_CONTA   \n    ,a.osm_atend                                                                            as CD_TIPO_ATEND\n    ,A.osm_proc                                                                             AS CD_PROCEDENCIA\n    -- ,a.osm_mcnv                                                                             as cd_carterinha_pac\n    -- ,a.osm_cid_cod                                                                          as cd_cid\n    -- ,a.osm_pln_cod                                                                          as cd_plano_convenio\n    ,a.osm_str                                                                              as CD_SETOR_ATENDIMENTO\n    ,itm.smm_str                                                                            as CD_SETOR_EXECUTANTE\n    ,a.osm_mreq                                                                             as CD_MEDICO_SOL\n    ,itm.smm_med                                                                            as CD_MEDICO_EXECUTANTE\n    -- ,itm.smm_cod                                                                            as cd_item_smart\n    -- ,itm.smm_pre_ccv                                                                        as cd_item_conv\n    ,CAST(CAST(a.osm_serie as varchar(10)) \n        + cast(a.osm_num as varchar(50)) \n        + CAST(itm.smm_num AS VARCHAR(50))\n        + CAST(A.OSM_PAC AS VARCHAR(50))\n         AS DECIMAL)                                                                        as NR_SEQUENCIA\n    ,pi.smk_cod                                                                             as NR_PROC_INTERNO       \n    ,pi.smk_amb                                                                             as CD_PROCEDIMENTO\n    ,pi.smk_rot                                                                             as DS_PROC_INTERNO \n    ,pi.smk_nome                                                                            as DS_PROCEDIMENTO\n    ,pi.smk_ctf\n    ,pi.smk_tipo\n    ,itm.smm_motivo_cancela                                                                 as MOTIVO_CANCEL_ITEM\n    ,itm.smm_canc_mot_cod                                                                   as CD_MOTIVO_CANCEL_ITEM\n    ,itm.smm_rpi_serie                                                                      as NR_SERIE_REPASSE\n    ,itm.smm_rpi_num                                                                        as NR_REPASSE\n    ,itm.smm_pacote                                                                         as IE_PACOTE\n    -- ,itm.smm_hon_seq\n    ,itm.smm_fat_serie\n    ,itm.smm_fat\n    ,itm.smm_tipo_fatura\n    ,itm.smm_dthr_alter                                                                     as dt_atualizacao                                                                      \n    ,itm.smm_qt                                                                             as QTD\n    ,itm.smm_vlr                                                                            AS VL_ITEM\n    ,isnull(itm.smm_ajuste_vlr,0)                                                           as VL_ITEM_AJUSTE\n    ,ROUND(ISNULL(round(\n                    (hon.hon_vl1 * itm.smm_qt) \n                  + (itm.smm_vlr + isnull(itm.smm_ajuste_vlr,0)) \n                  * hon.hon_pc1 / 100,3),0\n                  ),2)                                                                      AS VL_HM\n    ,ROUND(ISNULL(mte.mte_perc_desconto,0),2)                                               as PERC_DESCONTO\n\n\nFROM dbo.osm a                  (NOLOCK)\ninner join dbo.pac pac          (NOLOCK) on pac.pac_reg = a.osm_pac\ninner join dbo.smm itm          (NOLOCK) on itm.smm_osm_serie = a.osm_serie and itm.smm_osm = a.osm_num\ninner join dbo.smk pi           (NOLOCK) on pi.smk_cod = itm.smm_cod and pi.smK_tipo = itm.smm_tpcod\n-- left join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\nLEFT join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\n\nOUTER APPLY (\n    SELECT\n        CASE \n            WHEN (MTE.mte_valor <> 0)\n                THEN MTE.mte_desconto / MTE.mte_valor\n            ELSE 0\n        END AS mte_perc_desconto\n    FROM MTE MTE (NOLOCK)\n    LEFT JOIN NFS NFS (NOLOCK)  ON MTE.MTE_NFS_NUMERO = NFS.nfs_numero AND MTE.MTE_NFS_SERIE = NFS.nfs_serie AND MTE.MTE_NFS_TIPO = NFS.NFS_TIPO\n    WHERE MTE.MTE_SERIE = ITM.SMM_MTE_SERIE AND MTE.MTE_SEQ = ITM.SMM_MTE_SEQ\n)MTE\n\n\nWHERE \n     itm.smm_vlr <> 0\n    and (itm.smm_pacote IS NULL OR ( itm.smm_pacote = 'C' )) \n    and itm.smm_exec <> 'C'\n    and itm.smm_sfat <> 'C'\n    and itm.smm_str like '%'\n    and pi.smk_ctf LIKE '%'\n    AND (itm.smm_sfat IN ('a', 'f', '?', 'p', '?'))\n    and substring(cast(CAST(a.osm_dthr as date) as varchar(10)),1,7) = SUBSTRING(cast(CAST(getdate() AS DATE) as varchar(10)),1,7)\n    -- AND CAST(a.osm_dthr AS DATE) BETWEEN '2021-01-01' AND CAST(GETDATE() AS DATE)\n    -- AND A.osm_serie = '121' AND A.osm_num = '21460'\n)\n\nselect \n\n    90                                                  AS ID_SYSTEM\n    ,g.gcc_str_cod                                      AS CD_ESTABELECIMENTO\n    ,G.gcc_descr                                        AS DS_ESTABELECIMENTO\n    ,a.DT_ENTRADA\n    ,A.DT_LANCAMENTO\n    ,A.NR_ATENDIMENTO           \n    ,CAST(A.nr_interno_conta AS VARCHAR(10))\n        + CAST(A.NR_ATENDIMENTO AS VARCHAR(50))         AS NR_INTERNO_CONTA\n    ,emp.emp_cgc                                        as CGC_CONVENIO\n    ,A.cd_convenio                                      AS CD_CONVENIO\n    ,conv.cnv_nome                                      as DS_CONVENIO\n    ,a.CD_PESSOA_FISICA\n    ,A.NM_PACIENTE                                      AS NM_PACIENTE\n    ,A.CD_MEDICO_SOL\n    ,PSOL.psv_nome                                      AS MEDICO_SOLICITANTE\n    ,A.CD_MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_RESPONSAVEL\n    ,PEXC.psv_nome                                      AS MEDICO_ATENDIMENTO\n    ,B.str_cod                                          as CD_SETOR_ATENDIMENTO\n    ,b.str_nome                                         as DS_SETOR_ATENDIMENTO\n    ,A.NR_SEQUENCIA\n    -- ,A.smm_num_pai\n    -- ,smk.smk_rot                                        as DS_PROC_PRINC\n    ,A.NR_PROC_INTERNO\n    ,A.DS_PROC_INTERNO\n    ,A.CD_PROCEDIMENTO\n    ,A.DS_PROCEDIMENTO\n    ,c.DS_CLASSIF_PROCEDIMENTO\n    ,A.CD_PROCEDENCIA\n    ,A.QTD                                              AS QTD_ITEM\n    ,A.VL_ITEM                                          AS VL_ITEM_ORIGINAL                 \n    ,A.VL_ITEM + A.VL_ITEM_AJUSTE                       AS VL_ITEM\n    ,a.VL_HM\n    ,a.PERC_DESCONTO\n    ,a.DT_ATUALIZACAO\nfrom prod a\ninner join dbo.str b                (nolock)        on b.str_cod = a.CD_SETOR_ATENDIMENTO  \nleft join dbo.gcc g                (NOLOCK)        on g.gcc_str_cod = b.str_str_cod\ninner join dbo.cnv conv             (NOLOCK)        on conv.cnv_cod = a.cd_convenio\ninner join dbo.emp                  (nolock)        on emp_cod = conv.cnv_emp_cod  \ninner join ctf     c                                on ctf_cod = a.smk_ctf  and ctf_tipo = a.smk_tipo\nINNER JOIN psv     PEXC             (NOLOCK)        ON PEXC.psv_cod = A.CD_MEDICO_EXECUTANTE\nINNER JOIN psv     PSOL             (NOLOCK)        ON PSOL.psv_cod = A.CD_MEDICO_SOL\n\n\nWHERE C.DS_CLASSIF_PROCEDIMENTO IS NOT NULL\n",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													},
													"sink": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													}
												},
												{
													"source": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													},
													"sink": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													}
												},
												{
													"source": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													},
													"sink": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													}
												},
												{
													"source": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZ_PROD_DIARIA",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "ITG - Smart Last Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "DECLARE @PERIODO AS VARCHAR(7)\n\nSELECT\n    @PERIODO = SUBSTRING(cast(CAST(getdate()-1 AS DATE) as varchar(10)),1,7)\n\nwith ctf as(\n\n    SELECT\n        x.ctf_cod    \n        ,x.ctf_tipo\n        ,case\n            when UPPER(x.ctf_categ) = 'C' then 'Consultas'\n            when UPPER(x.ctf_categ) = 'R' then 'Cirurgias'\n            when UPPER(x.ctf_categ) = 'E' then 'Exames'\n            when UPPER(x.ctf_categ) = 'T' then 'Taxas'\n            when UPPER(x.ctf_categ) = 'D' then 'Diárias'\n            when UPPER(x.ctf_categ) = 'A' then 'Terapia'\n            when UPPER(x.ctf_categ) = 'M' then 'Materiais'\n            when UPPER(x.ctf_categ) = 'S' then 'Materiais Especiais'\n            when UPPER(x.ctf_categ) = 'N' then 'Medicamentos'\n            when UPPER(x.ctf_categ) = 'G' then 'Gases'\n            when UPPER(x.ctf_categ) = 'O' then 'Outros'\n          end DS_CLASSIF_PROCEDIMENTO  \n    from dbo.ctf x\n) \n\n\n,prod as(\nSELECT\n    itm.smm_num_pai\n    ,itm.smm_num\n    ,itm.smm_dthr_exec                                                                      as DT_LANCAMENTO\n    ,a.osm_num                                                                              as NR_ATENDIMENTO\n    ,a.osm_dthr                                                                             as DT_ENTRADA\n    ,a.osm_cnv                                                                              as CD_CONVENIO\n    ,pac.pac_reg                                                                            as CD_PESSOA_FISICA            \n    ,pac.pac_nome                                                                           AS NM_PACIENTE\n    -- ,cast(a.osm_serie as varchar(15)) + '.' + cast(a.osm_num as varchar(5))                 as NR_INTERNO_CONTA   \n    ,a.osm_serie                                                                            as NR_INTERNO_CONTA   \n    ,a.osm_atend                                                                            as CD_TIPO_ATEND\n    ,A.osm_proc                                                                             AS CD_PROCEDENCIA\n    -- ,a.osm_mcnv                                                                             as cd_carterinha_pac\n    -- ,a.osm_cid_cod                                                                          as cd_cid\n    -- ,a.osm_pln_cod                                                                          as cd_plano_convenio\n    ,a.osm_str                                                                              as CD_SETOR_ATENDIMENTO\n    ,itm.smm_str                                                                            as CD_SETOR_EXECUTANTE\n    ,a.osm_mreq                                                                             as CD_MEDICO_SOL\n    ,itm.smm_med                                                                            as CD_MEDICO_EXECUTANTE\n    -- ,itm.smm_cod                                                                            as cd_item_smart\n    -- ,itm.smm_pre_ccv                                                                        as cd_item_conv\n    ,CAST(CAST(a.osm_serie as varchar(10)) \n        + cast(a.osm_num as varchar(50)) \n        + CAST(itm.smm_num AS VARCHAR(50))\n        + CAST(A.OSM_PAC AS VARCHAR(50))\n         AS DECIMAL)                                                                        as NR_SEQUENCIA\n    ,pi.smk_cod                                                                             as NR_PROC_INTERNO       \n    ,pi.smk_amb                                                                             as CD_PROCEDIMENTO\n    ,pi.smk_rot                                                                             as DS_PROC_INTERNO \n    ,pi.smk_nome                                                                            as DS_PROCEDIMENTO\n    ,pi.smk_ctf\n    ,pi.smk_tipo\n    ,itm.smm_motivo_cancela                                                                 as MOTIVO_CANCEL_ITEM\n    ,itm.smm_canc_mot_cod                                                                   as CD_MOTIVO_CANCEL_ITEM\n    ,itm.smm_rpi_serie                                                                      as NR_SERIE_REPASSE\n    ,itm.smm_rpi_num                                                                        as NR_REPASSE\n    ,itm.smm_pacote                                                                         as IE_PACOTE\n    -- ,itm.smm_hon_seq\n    ,itm.smm_fat_serie\n    ,itm.smm_fat\n    ,itm.smm_tipo_fatura\n    ,itm.smm_dthr_alter                                                                     as dt_atualizacao                                                                      \n    ,itm.smm_qt                                                                             as QTD\n    ,itm.smm_vlr                                                                            AS VL_ITEM\n    ,isnull(itm.smm_ajuste_vlr,0)                                                           as VL_ITEM_AJUSTE\n    ,ROUND(ISNULL(round(\n                    (hon.hon_vl1 * itm.smm_qt) \n                  + (itm.smm_vlr + isnull(itm.smm_ajuste_vlr,0)) \n                  * hon.hon_pc1 / 100,3),0\n                  ),2)                                                                      AS VL_HM\n    ,ROUND(ISNULL(mte.mte_perc_desconto,0),2)                                               as PERC_DESCONTO\n\n\nFROM dbo.osm a                  (NOLOCK)\ninner join dbo.pac pac          (NOLOCK) on pac.pac_reg = a.osm_pac\ninner join dbo.smm itm          (NOLOCK) on itm.smm_osm_serie = a.osm_serie and itm.smm_osm = a.osm_num\ninner join dbo.smk pi           (NOLOCK) on pi.smk_cod = itm.smm_cod and pi.smK_tipo = itm.smm_tpcod\n-- left join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\nLEFT join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\n\nOUTER APPLY (\n    SELECT\n        CASE \n            WHEN (MTE.mte_valor <> 0)\n                THEN MTE.mte_desconto / MTE.mte_valor\n            ELSE 0\n        END AS mte_perc_desconto\n    FROM MTE MTE (NOLOCK)\n    LEFT JOIN NFS NFS (NOLOCK)  ON MTE.MTE_NFS_NUMERO = NFS.nfs_numero AND MTE.MTE_NFS_SERIE = NFS.nfs_serie AND MTE.MTE_NFS_TIPO = NFS.NFS_TIPO\n    WHERE MTE.MTE_SERIE = ITM.SMM_MTE_SERIE AND MTE.MTE_SEQ = ITM.SMM_MTE_SEQ\n)MTE\n\n\nWHERE \n     itm.smm_vlr <> 0\n    and (itm.smm_pacote IS NULL OR ( itm.smm_pacote = 'C' )) \n    and itm.smm_exec <> 'C'\n    and itm.smm_sfat <> 'C'\n    and itm.smm_str like '%'\n    and pi.smk_ctf LIKE '%'\n    AND (itm.smm_sfat IN ('a', 'f', '?', 'p', '?'))\n    and substring(cast(CAST(a.osm_dthr as date) as varchar(10)),1,7) = @PERIODO\n    -- AND CAST(a.osm_dthr AS DATE) BETWEEN '2021-01-01' AND CAST(GETDATE() AS DATE)\n    -- AND A.osm_serie = '121' AND A.osm_num = '21460'\n)\n\nselect \n\n    90                                                  AS ID_SYSTEM\n    ,g.gcc_str_cod                                      AS CD_ESTABELECIMENTO\n    ,G.gcc_descr                                        AS DS_ESTABELECIMENTO\n    ,a.DT_ENTRADA\n    ,A.DT_LANCAMENTO\n    ,A.NR_ATENDIMENTO           \n    ,CAST(A.nr_interno_conta AS VARCHAR(10))\n        + CAST(A.NR_ATENDIMENTO AS VARCHAR(50))         AS NR_INTERNO_CONTA\n    ,emp.emp_cgc                                        as CGC_CONVENIO\n    ,A.cd_convenio                                      AS CD_CONVENIO\n    ,conv.cnv_nome                                      as DS_CONVENIO\n    ,a.CD_PESSOA_FISICA\n    ,A.NM_PACIENTE                                      AS NM_PACIENTE\n    ,A.CD_MEDICO_SOL\n    ,PSOL.psv_nome                                      AS MEDICO_SOLICITANTE\n    ,A.CD_MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_RESPONSAVEL\n    ,PEXC.psv_nome                                      AS MEDICO_ATENDIMENTO\n    ,B.str_cod                                          as CD_SETOR_ATENDIMENTO\n    ,b.str_nome                                         as DS_SETOR_ATENDIMENTO\n    ,A.NR_SEQUENCIA\n    -- ,A.smm_num_pai\n    -- ,smk.smk_rot                                        as DS_PROC_PRINC\n    ,A.NR_PROC_INTERNO\n    ,A.DS_PROC_INTERNO\n    ,A.CD_PROCEDIMENTO\n    ,A.DS_PROCEDIMENTO\n    ,c.DS_CLASSIF_PROCEDIMENTO\n    ,A.CD_PROCEDENCIA\n    ,A.QTD                                              AS QTD_ITEM\n    ,A.VL_ITEM                                          AS VL_ITEM_ORIGINAL                 \n    ,A.VL_ITEM + A.VL_ITEM_AJUSTE                       AS VL_ITEM\n    ,a.VL_HM\n    ,a.PERC_DESCONTO\n    ,a.DT_ATUALIZACAO\nfrom prod a\ninner join dbo.str b                (nolock)        on b.str_cod = a.CD_SETOR_ATENDIMENTO  \nleft join dbo.gcc g                (NOLOCK)        on g.gcc_str_cod = b.str_str_cod\ninner join dbo.cnv conv             (NOLOCK)        on conv.cnv_cod = a.cd_convenio\ninner join dbo.emp                  (nolock)        on emp_cod = conv.cnv_emp_cod  \ninner join ctf     c                                on ctf_cod = a.smk_ctf  and ctf_tipo = a.smk_tipo\nINNER JOIN psv     PEXC             (NOLOCK)        ON PEXC.psv_cod = A.CD_MEDICO_EXECUTANTE\nINNER JOIN psv     PSOL             (NOLOCK)        ON PSOL.psv_cod = A.CD_MEDICO_SOL\n\n\nWHERE C.DS_CLASSIF_PROCEDIMENTO IS NOT NULL\n",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "TRUNCATE TABLE dbo.aux_prod_diaria \n",
											"writeBehavior": "insert",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													},
													"sink": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													}
												},
												{
													"source": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													},
													"sink": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													}
												},
												{
													"source": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													},
													"sink": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													}
												},
												{
													"source": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SMART_ITAIGARA_PrdDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZ_PROD_DIARIA",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "ITB - Smart Last Month",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "ITG - Smart Last Month",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "DECLARE @PERIODO AS VARCHAR(7)\n\nSELECT\n    @PERIODO = SUBSTRING(cast(CAST(getdate()-1 AS DATE) as varchar(10)),1,7)\n\nwith ctf as(\n\n    SELECT\n        x.ctf_cod    \n        ,x.ctf_tipo\n        ,case\n            when UPPER(x.ctf_categ) = 'C' then 'Consultas'\n            when UPPER(x.ctf_categ) = 'R' then 'Cirurgias'\n            when UPPER(x.ctf_categ) = 'E' then 'Exames'\n            when UPPER(x.ctf_categ) = 'T' then 'Taxas'\n            when UPPER(x.ctf_categ) = 'D' then 'Diárias'\n            when UPPER(x.ctf_categ) = 'A' then 'Terapia'\n            when UPPER(x.ctf_categ) = 'M' then 'Materiais'\n            when UPPER(x.ctf_categ) = 'S' then 'Materiais Especiais'\n            when UPPER(x.ctf_categ) = 'N' then 'Medicamentos'\n            when UPPER(x.ctf_categ) = 'G' then 'Gases'\n            when UPPER(x.ctf_categ) = 'O' then 'Outros'\n          end DS_CLASSIF_PROCEDIMENTO  \n    from dbo.ctf x\n) \n\n\n,prod as(\nSELECT\n    itm.smm_num_pai\n    ,itm.smm_num\n    ,itm.smm_dthr_exec                                                                      as DT_LANCAMENTO\n    ,a.osm_num                                                                              as NR_ATENDIMENTO\n    ,a.osm_dthr                                                                             as DT_ENTRADA\n    ,a.osm_cnv                                                                              as CD_CONVENIO\n    ,pac.pac_reg                                                                            as CD_PESSOA_FISICA            \n    ,pac.pac_nome                                                                           AS NM_PACIENTE\n    -- ,cast(a.osm_serie as varchar(15)) + '.' + cast(a.osm_num as varchar(5))                 as NR_INTERNO_CONTA   \n    ,a.osm_serie                                                                            as NR_INTERNO_CONTA   \n    ,a.osm_atend                                                                            as CD_TIPO_ATEND\n    ,A.osm_proc                                                                             AS CD_PROCEDENCIA\n    -- ,a.osm_mcnv                                                                             as cd_carterinha_pac\n    -- ,a.osm_cid_cod                                                                          as cd_cid\n    -- ,a.osm_pln_cod                                                                          as cd_plano_convenio\n    ,a.osm_str                                                                              as CD_SETOR_ATENDIMENTO\n    ,itm.smm_str                                                                            as CD_SETOR_EXECUTANTE\n    ,a.osm_mreq                                                                             as CD_MEDICO_SOL\n    ,itm.smm_med                                                                            as CD_MEDICO_EXECUTANTE\n    -- ,itm.smm_cod                                                                            as cd_item_smart\n    -- ,itm.smm_pre_ccv                                                                        as cd_item_conv\n    ,CAST(CAST(a.osm_serie as varchar(10)) \n        + cast(a.osm_num as varchar(50)) \n        + CAST(itm.smm_num AS VARCHAR(50))\n        + CAST(A.OSM_PAC AS VARCHAR(50))\n         AS DECIMAL)                                                                        as NR_SEQUENCIA\n    ,pi.smk_cod                                                                             as NR_PROC_INTERNO       \n    ,pi.smk_amb                                                                             as CD_PROCEDIMENTO\n    ,pi.smk_rot                                                                             as DS_PROC_INTERNO \n    ,pi.smk_nome                                                                            as DS_PROCEDIMENTO\n    ,pi.smk_ctf\n    ,pi.smk_tipo\n    ,itm.smm_motivo_cancela                                                                 as MOTIVO_CANCEL_ITEM\n    ,itm.smm_canc_mot_cod                                                                   as CD_MOTIVO_CANCEL_ITEM\n    ,itm.smm_rpi_serie                                                                      as NR_SERIE_REPASSE\n    ,itm.smm_rpi_num                                                                        as NR_REPASSE\n    ,itm.smm_pacote                                                                         as IE_PACOTE\n    -- ,itm.smm_hon_seq\n    ,itm.smm_fat_serie\n    ,itm.smm_fat\n    ,itm.smm_tipo_fatura\n    ,itm.smm_dthr_alter                                                                     as dt_atualizacao                                                                      \n    ,itm.smm_qt                                                                             as QTD\n    ,itm.smm_vlr                                                                            AS VL_ITEM\n    ,isnull(itm.smm_ajuste_vlr,0)                                                           as VL_ITEM_AJUSTE\n    ,ROUND(ISNULL(round(\n                    (hon.hon_vl1 * itm.smm_qt) \n                  + (itm.smm_vlr + isnull(itm.smm_ajuste_vlr,0)) \n                  * hon.hon_pc1 / 100,3),0\n                  ),2)                                                                      AS VL_HM\n    ,ROUND(ISNULL(mte.mte_perc_desconto,0),2)                                               as PERC_DESCONTO\n\n\nFROM dbo.osm a                  (NOLOCK)\ninner join dbo.pac pac          (NOLOCK) on pac.pac_reg = a.osm_pac\ninner join dbo.smm itm          (NOLOCK) on itm.smm_osm_serie = a.osm_serie and itm.smm_osm = a.osm_num\ninner join dbo.smk pi           (NOLOCK) on pi.smk_cod = itm.smm_cod and pi.smK_tipo = itm.smm_tpcod\n-- left join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\nLEFT join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\n\nOUTER APPLY (\n    SELECT\n        CASE \n            WHEN (MTE.mte_valor <> 0)\n                THEN MTE.mte_desconto / MTE.mte_valor\n            ELSE 0\n        END AS mte_perc_desconto\n    FROM MTE MTE (NOLOCK)\n    LEFT JOIN NFS NFS (NOLOCK)  ON MTE.MTE_NFS_NUMERO = NFS.nfs_numero AND MTE.MTE_NFS_SERIE = NFS.nfs_serie AND MTE.MTE_NFS_TIPO = NFS.NFS_TIPO\n    WHERE MTE.MTE_SERIE = ITM.SMM_MTE_SERIE AND MTE.MTE_SEQ = ITM.SMM_MTE_SEQ\n)MTE\n\n\nWHERE \n     itm.smm_vlr <> 0\n    and (itm.smm_pacote IS NULL OR ( itm.smm_pacote = 'C' )) \n    and itm.smm_exec <> 'C'\n    and itm.smm_sfat <> 'C'\n    and itm.smm_str like '%'\n    and pi.smk_ctf LIKE '%'\n    AND (itm.smm_sfat IN ('a', 'f', '?', 'p', '?'))\n    and substring(cast(CAST(a.osm_dthr as date) as varchar(10)),1,7) = @PERIODO\n    -- AND CAST(a.osm_dthr AS DATE) BETWEEN '2021-01-01' AND CAST(GETDATE() AS DATE)\n    -- AND A.osm_serie = '121' AND A.osm_num = '21460'\n)\n\nselect \n\n    90                                                  AS ID_SYSTEM\n    ,g.gcc_str_cod                                      AS CD_ESTABELECIMENTO\n    ,G.gcc_descr                                        AS DS_ESTABELECIMENTO\n    ,a.DT_ENTRADA\n    ,A.DT_LANCAMENTO\n    ,A.NR_ATENDIMENTO           \n    ,CAST(A.nr_interno_conta AS VARCHAR(10))\n        + CAST(A.NR_ATENDIMENTO AS VARCHAR(50))         AS NR_INTERNO_CONTA\n    ,emp.emp_cgc                                        as CGC_CONVENIO\n    ,A.cd_convenio                                      AS CD_CONVENIO\n    ,conv.cnv_nome                                      as DS_CONVENIO\n    ,a.CD_PESSOA_FISICA\n    ,A.NM_PACIENTE                                      AS NM_PACIENTE\n    ,A.CD_MEDICO_SOL\n    ,PSOL.psv_nome                                      AS MEDICO_SOLICITANTE\n    ,A.CD_MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_RESPONSAVEL\n    ,PEXC.psv_nome                                      AS MEDICO_ATENDIMENTO\n    ,B.str_cod                                          as CD_SETOR_ATENDIMENTO\n    ,b.str_nome                                         as DS_SETOR_ATENDIMENTO\n    ,A.NR_SEQUENCIA\n    -- ,A.smm_num_pai\n    -- ,smk.smk_rot                                        as DS_PROC_PRINC\n    ,A.NR_PROC_INTERNO\n    ,A.DS_PROC_INTERNO\n    ,A.CD_PROCEDIMENTO\n    ,A.DS_PROCEDIMENTO\n    ,c.DS_CLASSIF_PROCEDIMENTO\n    ,A.CD_PROCEDENCIA\n    ,A.QTD                                              AS QTD_ITEM\n    ,A.VL_ITEM                                          AS VL_ITEM_ORIGINAL                 \n    ,A.VL_ITEM + A.VL_ITEM_AJUSTE                       AS VL_ITEM\n    ,a.VL_HM\n    ,a.PERC_DESCONTO\n    ,a.DT_ATUALIZACAO\nfrom prod a\ninner join dbo.str b                (nolock)        on b.str_cod = a.CD_SETOR_ATENDIMENTO  \nleft join dbo.gcc g                (NOLOCK)        on g.gcc_str_cod = b.str_str_cod\ninner join dbo.cnv conv             (NOLOCK)        on conv.cnv_cod = a.cd_convenio\ninner join dbo.emp                  (nolock)        on emp_cod = conv.cnv_emp_cod  \ninner join ctf     c                                on ctf_cod = a.smk_ctf  and ctf_tipo = a.smk_tipo\nINNER JOIN psv     PEXC             (NOLOCK)        ON PEXC.psv_cod = A.CD_MEDICO_EXECUTANTE\nINNER JOIN psv     PSOL             (NOLOCK)        ON PSOL.psv_cod = A.CD_MEDICO_SOL\n\n\nWHERE C.DS_CLASSIF_PROCEDIMENTO IS NOT NULL\n",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													},
													"sink": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													}
												},
												{
													"source": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													},
													"sink": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													}
												},
												{
													"source": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													},
													"sink": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													}
												},
												{
													"source": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SMART_ITABUNA_PrdDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZ_PROD_DIARIA",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "IOF - Smart Last Month",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "ITB - Smart Last Month",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "DECLARE @PERIODO AS VARCHAR(7)\n\nSELECT\n    @PERIODO = SUBSTRING(cast(CAST(getdate()-1 AS DATE) as varchar(10)),1,7)\n\nwith ctf as(\n\n    SELECT\n        x.ctf_cod    \n        ,x.ctf_tipo\n        ,case\n            when UPPER(x.ctf_categ) = 'C' then 'Consultas'\n            when UPPER(x.ctf_categ) = 'R' then 'Cirurgias'\n            when UPPER(x.ctf_categ) = 'E' then 'Exames'\n            when UPPER(x.ctf_categ) = 'T' then 'Taxas'\n            when UPPER(x.ctf_categ) = 'D' then 'Diárias'\n            when UPPER(x.ctf_categ) = 'A' then 'Terapia'\n            when UPPER(x.ctf_categ) = 'M' then 'Materiais'\n            when UPPER(x.ctf_categ) = 'S' then 'Materiais Especiais'\n            when UPPER(x.ctf_categ) = 'N' then 'Medicamentos'\n            when UPPER(x.ctf_categ) = 'G' then 'Gases'\n            when UPPER(x.ctf_categ) = 'O' then 'Outros'\n          end DS_CLASSIF_PROCEDIMENTO  \n    from dbo.ctf x\n) \n\n\n,prod as(\nSELECT\n    itm.smm_num_pai\n    ,itm.smm_num\n    ,itm.smm_dthr_exec                                                                      as DT_LANCAMENTO\n    ,a.osm_num                                                                              as NR_ATENDIMENTO\n    ,a.osm_dthr                                                                             as DT_ENTRADA\n    ,a.osm_cnv                                                                              as CD_CONVENIO\n    ,pac.pac_reg                                                                            as CD_PESSOA_FISICA            \n    ,pac.pac_nome                                                                           AS NM_PACIENTE\n    -- ,cast(a.osm_serie as varchar(15)) + '.' + cast(a.osm_num as varchar(5))                 as NR_INTERNO_CONTA   \n    ,a.osm_serie                                                                            as NR_INTERNO_CONTA   \n    ,a.osm_atend                                                                            as CD_TIPO_ATEND\n    ,A.osm_proc                                                                             AS CD_PROCEDENCIA\n    -- ,a.osm_mcnv                                                                             as cd_carterinha_pac\n    -- ,a.osm_cid_cod                                                                          as cd_cid\n    -- ,a.osm_pln_cod                                                                          as cd_plano_convenio\n    ,a.osm_str                                                                              as CD_SETOR_ATENDIMENTO\n    ,itm.smm_str                                                                            as CD_SETOR_EXECUTANTE\n    ,a.osm_mreq                                                                             as CD_MEDICO_SOL\n    ,itm.smm_med                                                                            as CD_MEDICO_EXECUTANTE\n    -- ,itm.smm_cod                                                                            as cd_item_smart\n    -- ,itm.smm_pre_ccv                                                                        as cd_item_conv\n    ,CAST(CAST(a.osm_serie as varchar(10)) \n        + cast(a.osm_num as varchar(50)) \n        + CAST(itm.smm_num AS VARCHAR(50))\n        + CAST(A.OSM_PAC AS VARCHAR(50))\n         AS DECIMAL)                                                                        as NR_SEQUENCIA\n    ,pi.smk_cod                                                                             as NR_PROC_INTERNO       \n    ,pi.smk_amb                                                                             as CD_PROCEDIMENTO\n    ,pi.smk_rot                                                                             as DS_PROC_INTERNO \n    ,pi.smk_nome                                                                            as DS_PROCEDIMENTO\n    ,pi.smk_ctf\n    ,pi.smk_tipo\n    ,itm.smm_motivo_cancela                                                                 as MOTIVO_CANCEL_ITEM\n    ,itm.smm_canc_mot_cod                                                                   as CD_MOTIVO_CANCEL_ITEM\n    ,itm.smm_rpi_serie                                                                      as NR_SERIE_REPASSE\n    ,itm.smm_rpi_num                                                                        as NR_REPASSE\n    ,itm.smm_pacote                                                                         as IE_PACOTE\n    -- ,itm.smm_hon_seq\n    ,itm.smm_fat_serie\n    ,itm.smm_fat\n    ,itm.smm_tipo_fatura\n    ,itm.smm_dthr_alter                                                                     as dt_atualizacao                                                                      \n    ,itm.smm_qt                                                                             as QTD\n    ,itm.smm_vlr                                                                            AS VL_ITEM\n    ,isnull(itm.smm_ajuste_vlr,0)                                                           as VL_ITEM_AJUSTE\n    ,ROUND(ISNULL(round(\n                    (hon.hon_vl1 * itm.smm_qt) \n                  + (itm.smm_vlr + isnull(itm.smm_ajuste_vlr,0)) \n                  * hon.hon_pc1 / 100,3),0\n                  ),2)                                                                      AS VL_HM\n    ,ROUND(ISNULL(mte.mte_perc_desconto,0),2)                                               as PERC_DESCONTO\n\n\nFROM dbo.osm a                  (NOLOCK)\ninner join dbo.pac pac          (NOLOCK) on pac.pac_reg = a.osm_pac\ninner join dbo.smm itm          (NOLOCK) on itm.smm_osm_serie = a.osm_serie and itm.smm_osm = a.osm_num\ninner join dbo.smk pi           (NOLOCK) on pi.smk_cod = itm.smm_cod and pi.smK_tipo = itm.smm_tpcod\n-- left join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\nLEFT join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\n\nOUTER APPLY (\n    SELECT\n        CASE \n            WHEN (MTE.mte_valor <> 0)\n                THEN MTE.mte_desconto / MTE.mte_valor\n            ELSE 0\n        END AS mte_perc_desconto\n    FROM MTE MTE (NOLOCK)\n    LEFT JOIN NFS NFS (NOLOCK)  ON MTE.MTE_NFS_NUMERO = NFS.nfs_numero AND MTE.MTE_NFS_SERIE = NFS.nfs_serie AND MTE.MTE_NFS_TIPO = NFS.NFS_TIPO\n    WHERE MTE.MTE_SERIE = ITM.SMM_MTE_SERIE AND MTE.MTE_SEQ = ITM.SMM_MTE_SEQ\n)MTE\n\n\nWHERE \n     itm.smm_vlr <> 0\n    and (itm.smm_pacote IS NULL OR ( itm.smm_pacote = 'C' )) \n    and itm.smm_exec <> 'C'\n    and itm.smm_sfat <> 'C'\n    and itm.smm_str like '%'\n    and pi.smk_ctf LIKE '%'\n    AND (itm.smm_sfat IN ('a', 'f', '?', 'p', '?'))\n    and substring(cast(CAST(a.osm_dthr as date) as varchar(10)),1,7) = @PERIODO\n    -- AND CAST(a.osm_dthr AS DATE) BETWEEN '2021-01-01' AND CAST(GETDATE() AS DATE)\n    -- AND A.osm_serie = '121' AND A.osm_num = '21460'\n)\n\nselect \n\n    90                                                  AS ID_SYSTEM\n    ,g.gcc_str_cod                                      AS CD_ESTABELECIMENTO\n    ,G.gcc_descr                                        AS DS_ESTABELECIMENTO\n    ,a.DT_ENTRADA\n    ,A.DT_LANCAMENTO\n    ,A.NR_ATENDIMENTO           \n    ,CAST(A.nr_interno_conta AS VARCHAR(10))\n        + CAST(A.NR_ATENDIMENTO AS VARCHAR(50))         AS NR_INTERNO_CONTA\n    ,emp.emp_cgc                                        as CGC_CONVENIO\n    ,A.cd_convenio                                      AS CD_CONVENIO\n    ,conv.cnv_nome                                      as DS_CONVENIO\n    ,a.CD_PESSOA_FISICA\n    ,A.NM_PACIENTE                                      AS NM_PACIENTE\n    ,A.CD_MEDICO_SOL\n    ,PSOL.psv_nome                                      AS MEDICO_SOLICITANTE\n    ,A.CD_MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_RESPONSAVEL\n    ,PEXC.psv_nome                                      AS MEDICO_ATENDIMENTO\n    ,B.str_cod                                          as CD_SETOR_ATENDIMENTO\n    ,b.str_nome                                         as DS_SETOR_ATENDIMENTO\n    ,A.NR_SEQUENCIA\n    -- ,A.smm_num_pai\n    -- ,smk.smk_rot                                        as DS_PROC_PRINC\n    ,A.NR_PROC_INTERNO\n    ,A.DS_PROC_INTERNO\n    ,A.CD_PROCEDIMENTO\n    ,A.DS_PROCEDIMENTO\n    ,c.DS_CLASSIF_PROCEDIMENTO\n    ,A.CD_PROCEDENCIA\n    ,A.QTD                                              AS QTD_ITEM\n    ,A.VL_ITEM                                          AS VL_ITEM_ORIGINAL                 \n    ,A.VL_ITEM + A.VL_ITEM_AJUSTE                       AS VL_ITEM\n    ,a.VL_HM\n    ,a.PERC_DESCONTO\n    ,a.DT_ATUALIZACAO\nfrom prod a\ninner join dbo.str b                (nolock)        on b.str_cod = a.CD_SETOR_ATENDIMENTO  \nleft join dbo.gcc g                (NOLOCK)        on g.gcc_str_cod = b.str_str_cod\ninner join dbo.cnv conv             (NOLOCK)        on conv.cnv_cod = a.cd_convenio\ninner join dbo.emp                  (nolock)        on emp_cod = conv.cnv_emp_cod  \ninner join ctf     c                                on ctf_cod = a.smk_ctf  and ctf_tipo = a.smk_tipo\nINNER JOIN psv     PEXC             (NOLOCK)        ON PEXC.psv_cod = A.CD_MEDICO_EXECUTANTE\nINNER JOIN psv     PSOL             (NOLOCK)        ON PSOL.psv_cod = A.CD_MEDICO_SOL\n\n\nWHERE C.DS_CLASSIF_PROCEDIMENTO IS NOT NULL\n",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													},
													"sink": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													}
												},
												{
													"source": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													},
													"sink": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													}
												},
												{
													"source": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													},
													"sink": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													}
												},
												{
													"source": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SMART_IOF_PrdDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZ_PROD_DIARIA",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Oftalmoclin - Smart Last Month",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "IOF - Smart Last Month",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "DECLARE @PERIODO AS VARCHAR(7)\n\nSELECT\n    @PERIODO = SUBSTRING(cast(CAST(getdate()-1 AS DATE) as varchar(10)),1,7)\n\nwith ctf as(\n\n    SELECT\n        x.ctf_cod    \n        ,x.ctf_tipo\n        ,case\n            when UPPER(x.ctf_categ) = 'C' then 'Consultas'\n            when UPPER(x.ctf_categ) = 'R' then 'Cirurgias'\n            when UPPER(x.ctf_categ) = 'E' then 'Exames'\n            when UPPER(x.ctf_categ) = 'T' then 'Taxas'\n            when UPPER(x.ctf_categ) = 'D' then 'Diárias'\n            when UPPER(x.ctf_categ) = 'A' then 'Terapia'\n            when UPPER(x.ctf_categ) = 'M' then 'Materiais'\n            when UPPER(x.ctf_categ) = 'S' then 'Materiais Especiais'\n            when UPPER(x.ctf_categ) = 'N' then 'Medicamentos'\n            when UPPER(x.ctf_categ) = 'G' then 'Gases'\n            when UPPER(x.ctf_categ) = 'O' then 'Outros'\n          end DS_CLASSIF_PROCEDIMENTO  \n    from dbo.ctf x\n) \n\n\n,prod as(\nSELECT\n    itm.smm_num_pai\n    ,itm.smm_num\n    ,itm.smm_dthr_exec                                                                      as DT_LANCAMENTO\n    ,a.osm_num                                                                              as NR_ATENDIMENTO\n    ,a.osm_dthr                                                                             as DT_ENTRADA\n    ,a.osm_cnv                                                                              as CD_CONVENIO\n    ,pac.pac_reg                                                                            as CD_PESSOA_FISICA            \n    ,pac.pac_nome                                                                           AS NM_PACIENTE\n    -- ,cast(a.osm_serie as varchar(15)) + '.' + cast(a.osm_num as varchar(5))                 as NR_INTERNO_CONTA   \n    ,a.osm_serie                                                                            as NR_INTERNO_CONTA   \n    ,a.osm_atend                                                                            as CD_TIPO_ATEND\n    ,A.osm_proc                                                                             AS CD_PROCEDENCIA\n    -- ,a.osm_mcnv                                                                             as cd_carterinha_pac\n    -- ,a.osm_cid_cod                                                                          as cd_cid\n    -- ,a.osm_pln_cod                                                                          as cd_plano_convenio\n    ,a.osm_str                                                                              as CD_SETOR_ATENDIMENTO\n    ,itm.smm_str                                                                            as CD_SETOR_EXECUTANTE\n    ,a.osm_mreq                                                                             as CD_MEDICO_SOL\n    ,itm.smm_med                                                                            as CD_MEDICO_EXECUTANTE\n    -- ,itm.smm_cod                                                                            as cd_item_smart\n    -- ,itm.smm_pre_ccv                                                                        as cd_item_conv\n    ,CAST(CAST(a.osm_serie as varchar(10)) \n        + cast(a.osm_num as varchar(50)) \n        + CAST(itm.smm_num AS VARCHAR(50))\n        + CAST(A.OSM_PAC AS VARCHAR(50))\n         AS DECIMAL)                                                                        as NR_SEQUENCIA\n    ,pi.smk_cod                                                                             as NR_PROC_INTERNO       \n    ,pi.smk_amb                                                                             as CD_PROCEDIMENTO\n    ,pi.smk_rot                                                                             as DS_PROC_INTERNO \n    ,pi.smk_nome                                                                            as DS_PROCEDIMENTO\n    ,pi.smk_ctf\n    ,pi.smk_tipo\n    ,itm.smm_motivo_cancela                                                                 as MOTIVO_CANCEL_ITEM\n    ,itm.smm_canc_mot_cod                                                                   as CD_MOTIVO_CANCEL_ITEM\n    ,itm.smm_rpi_serie                                                                      as NR_SERIE_REPASSE\n    ,itm.smm_rpi_num                                                                        as NR_REPASSE\n    ,itm.smm_pacote                                                                         as IE_PACOTE\n    -- ,itm.smm_hon_seq\n    ,itm.smm_fat_serie\n    ,itm.smm_fat\n    ,itm.smm_tipo_fatura\n    ,itm.smm_dthr_alter                                                                     as dt_atualizacao                                                                      \n    ,itm.smm_qt                                                                             as QTD\n    ,itm.smm_vlr                                                                            AS VL_ITEM\n    ,isnull(itm.smm_ajuste_vlr,0)                                                           as VL_ITEM_AJUSTE\n    ,ROUND(ISNULL(round(\n                    (hon.hon_vl1 * itm.smm_qt) \n                  + (itm.smm_vlr + isnull(itm.smm_ajuste_vlr,0)) \n                  * hon.hon_pc1 / 100,3),0\n                  ),2)                                                                      AS VL_HM\n    ,ROUND(ISNULL(mte.mte_perc_desconto,0),2)                                               as PERC_DESCONTO\n\n\nFROM dbo.osm a                  (NOLOCK)\ninner join dbo.pac pac          (NOLOCK) on pac.pac_reg = a.osm_pac\ninner join dbo.smm itm          (NOLOCK) on itm.smm_osm_serie = a.osm_serie and itm.smm_osm = a.osm_num\ninner join dbo.smk pi           (NOLOCK) on pi.smk_cod = itm.smm_cod and pi.smK_tipo = itm.smm_tpcod\n-- left join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\nLEFT join dbo.hon  hon          (NOLOCK) on hon.hon_seq = itm.smm_hon_seq\n\nOUTER APPLY (\n    SELECT\n        CASE \n            WHEN (MTE.mte_valor <> 0)\n                THEN MTE.mte_desconto / MTE.mte_valor\n            ELSE 0\n        END AS mte_perc_desconto\n    FROM MTE MTE (NOLOCK)\n    LEFT JOIN NFS NFS (NOLOCK)  ON MTE.MTE_NFS_NUMERO = NFS.nfs_numero AND MTE.MTE_NFS_SERIE = NFS.nfs_serie AND MTE.MTE_NFS_TIPO = NFS.NFS_TIPO\n    WHERE MTE.MTE_SERIE = ITM.SMM_MTE_SERIE AND MTE.MTE_SEQ = ITM.SMM_MTE_SEQ\n)MTE\n\n\nWHERE \n     itm.smm_vlr <> 0\n    and (itm.smm_pacote IS NULL OR ( itm.smm_pacote = 'C' )) \n    and itm.smm_exec <> 'C'\n    and itm.smm_sfat <> 'C'\n    and itm.smm_str like '%'\n    and pi.smk_ctf LIKE '%'\n    AND (itm.smm_sfat IN ('a', 'f', '?', 'p', '?'))\n    and substring(cast(CAST(a.osm_dthr as date) as varchar(10)),1,7) = @PERIODO\n    -- AND CAST(a.osm_dthr AS DATE) BETWEEN '2021-01-01' AND CAST(GETDATE() AS DATE)\n    -- AND A.osm_serie = '121' AND A.osm_num = '21460'\n)\n\nselect \n\n    90                                                  AS ID_SYSTEM\n    ,g.gcc_str_cod                                      AS CD_ESTABELECIMENTO\n    ,G.gcc_descr                                        AS DS_ESTABELECIMENTO\n    ,a.DT_ENTRADA\n    ,A.DT_LANCAMENTO\n    ,A.NR_ATENDIMENTO           \n    ,CAST(A.nr_interno_conta AS VARCHAR(10))\n        + CAST(A.NR_ATENDIMENTO AS VARCHAR(50))         AS NR_INTERNO_CONTA\n    ,emp.emp_cgc                                        as CGC_CONVENIO\n    ,A.cd_convenio                                      AS CD_CONVENIO\n    ,conv.cnv_nome                                      as DS_CONVENIO\n    ,a.CD_PESSOA_FISICA\n    ,A.NM_PACIENTE                                      AS NM_PACIENTE\n    ,A.CD_MEDICO_SOL\n    ,PSOL.psv_nome                                      AS MEDICO_SOLICITANTE\n    ,A.CD_MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_EXECUTANTE\n    ,PEXC.psv_nome                                      AS MEDICO_RESPONSAVEL\n    ,PEXC.psv_nome                                      AS MEDICO_ATENDIMENTO\n    ,B.str_cod                                          as CD_SETOR_ATENDIMENTO\n    ,b.str_nome                                         as DS_SETOR_ATENDIMENTO\n    ,A.NR_SEQUENCIA\n    -- ,A.smm_num_pai\n    -- ,smk.smk_rot                                        as DS_PROC_PRINC\n    ,A.NR_PROC_INTERNO\n    ,A.DS_PROC_INTERNO\n    ,A.CD_PROCEDIMENTO\n    ,A.DS_PROCEDIMENTO\n    ,c.DS_CLASSIF_PROCEDIMENTO\n    ,A.CD_PROCEDENCIA\n    ,A.QTD                                              AS QTD_ITEM\n    ,A.VL_ITEM                                          AS VL_ITEM_ORIGINAL                 \n    ,A.VL_ITEM + A.VL_ITEM_AJUSTE                       AS VL_ITEM\n    ,a.VL_HM\n    ,a.PERC_DESCONTO\n    ,a.DT_ATUALIZACAO\nfrom prod a\ninner join dbo.str b                (nolock)        on b.str_cod = a.CD_SETOR_ATENDIMENTO  \nleft join dbo.gcc g                (NOLOCK)        on g.gcc_str_cod = b.str_str_cod\ninner join dbo.cnv conv             (NOLOCK)        on conv.cnv_cod = a.cd_convenio\ninner join dbo.emp                  (nolock)        on emp_cod = conv.cnv_emp_cod  \ninner join ctf     c                                on ctf_cod = a.smk_ctf  and ctf_tipo = a.smk_tipo\nINNER JOIN psv     PEXC             (NOLOCK)        ON PEXC.psv_cod = A.CD_MEDICO_EXECUTANTE\nINNER JOIN psv     PSOL             (NOLOCK)        ON PSOL.psv_cod = A.CD_MEDICO_SOL\n\n\nWHERE C.DS_CLASSIF_PROCEDIMENTO IS NOT NULL\n",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "ID_SYSTEM",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_ESTABELECIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ENTRADA",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_LANCAMENTO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "NR_ATENDIMENTO",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "NR_INTERNO_CONTA",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CGC_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_CONVENIO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CONVENIO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_PESSOA_FISICA",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NM_PACIENTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_SOL",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_SOLICITANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CD_MEDICO_EXECUTANTE",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_EXECUTANTE",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_RESPONSAVEL",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "MEDICO_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_SETOR_ATENDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													},
													"sink": {
														"name": "NR_SEQUENCIA",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 18
													}
												},
												{
													"source": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "NR_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROC_INTERNO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "DS_PROCEDIMENTO",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DS_CLASSIF_PROCEDIMENTO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													},
													"sink": {
														"name": "CD_PROCEDENCIA",
														"type": "String",
														"physicalType": "char"
													}
												},
												{
													"source": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													},
													"sink": {
														"name": "QTD_ITEM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 0,
														"precision": 4
													}
												},
												{
													"source": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM_ORIGINAL",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_ITEM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													},
													"sink": {
														"name": "VL_HM",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													},
													"sink": {
														"name": "PERC_DESCONTO",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 15,
														"precision": 27
													}
												},
												{
													"source": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DT_ATUALIZACAO",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZ_PROD_DIARIA",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Day Now",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT cast(day(GETDATE()) as varchar(2)) as day",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW_ORIGEM",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Day Now",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "day_now",
							"value": {
								"value": "@activity('Day Now').output.firstRow.day",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"day_now": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Producao Diaria"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Extracao Dados Salesforce CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Atendimento Paciente",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT  \nAP.CD_ESTABELECIMENTO\n,AP.NR_ATENDIMENTO\n,AP.CD_PESSOA_FISICA\n,TO_CHAR(AP.DT_ENTRADA,'YYYY-MM-DD') AS DT_ENTRADA\n,AP.DS_OBSERVACAO\nFROM ATENDIMENTO_PACIENTE AP\nWHERE\n    ROWNUM < 5001 ",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_Salesforce_Dinamico",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Laudo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT \t\nLP.NR_ATENDIMENTO\n,LP.CD_PESSOA_FISICA\n,TO_CHAR(LP.DT_LAUDO,'YYYY-MM-DD') DT_LAUDO\n,LP.DS_TITULO_LAUDO\n,LP.NR_PRESCRICAO\n,PP.IE_STATUS_EXECUCAO\n,LP.NR_LAUDO\n,LP.NR_SEQUENCIA\n,C.CD_PESSOA_FISICA AS CD_MEDICO\n,med_resp.cd_pessoa_fisica AS CD_MEDICO_RESP\n,LP.DS_LAUDO\n,PP.NR_SEQ_PROC_INTERNO\n--,PP.CD_PROCEDIMENTO\n--,PROC_INTERNO\tDS_PROC_EXAME\n,TO_CHAR(PP.DT_BAIXA,'YYYY-MM-DD') AS DT_BAIXA\nFROM LAUDO_PACIENTE LP\nLEFT JOIN PRESCR_MEDICA C ON LP.NR_PRESCRICAO = C.NR_PRESCRICAO \nLEFT JOIN PRESCR_PROCEDIMENTO PP ON PP.NR_PRESCRICAO = LP.NR_PRESCRICAO\nLEFT JOIN MEDICO MED_RESP ON med_resp.cd_pessoa_fisica = LP.CD_MEDICO_RESP\nLEFT JOIN MEDICO MED ON MED.CD_PESSOA_FISICA = C.CD_MEDICO\nWHERE TO_CHAR(LP.DT_LAUDO,'YYYY-MM-DD') BETWEEN '2021-09-01' AND TO_CHAR(SYSDATE,'YYYY-MM-DD')",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_Salesforce_Laudo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Pedido Exame Externo",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Atendimento Paciente",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT \nA.NR_SEQUENCIA\n,B.CD_PESSOA_FISICA\n,B.NR_ATENDIMENTO\n,B.CD_PROFISSIONAL\n--,B.CD_DOENCA\n,A.NR_PROC_INTERNO\n,A.QT_EXAME\n--,A.NR_SEQ_APRESENT\n,A.IE_LADO\n,A.DS_JUSTIFICATIVA\n,TO_CHAR(B.DT_SOLICITACAO,'YYYY-MM-DD') DT_SOLICITACAO\nFROM pedido_exame_externo_item A\nINNER JOIN PEDIDO_EXAME_EXTERNO B ON A.NR_SEQ_PEDIDO = B.NR_SEQUENCIA \n--WHERE A.NR_SEQ_PEDIDO = 169\nWHERE ROWNUM < 5001 \n--TO_CHAR(B.DT_SOLICITACAO,'YYYY-MM-DD') BETWEEN '2021-09-01' AND TO_CHAR(SYSDATE,'YYYY-MM-DD')",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_Salesforce_PedidoExameExterno",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Material",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Pedido Exame Externo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT \n    MAT.CD_MATERIAL\n    ,MAT.DS_MATERIAL\n    ,MAT.DS_REDUZIDA\n    ,'TRUE' AS IE_SITUACAO\nFROM MATERIAL MAT\nWHERE MAT.IE_SITUACAO = 'A'",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_Salesforce_Material",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Alergia",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Material",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT \n    PA.NR_SEQUENCIA\n   ,PA.CD_PESSOA_FISICA\n   ,PA.NR_ATENDIMENTO\n    ,PA.DS_MEDIC_NAO_CAD\n--    ,PA.IE_INTENSIDADE\n    ,PA.CD_MATERIAL\n    ,PA.IE_CONFIRMACAO\n    ,CASE\n        WHEN PA.IE_NEGA_ALERGIAS = 'N' THEN 'FALSE'\n        WHEN PA.IE_NEGA_ALERGIAS = 'S' THEN 'TRUE'\n     END IE_NEGA_ALERGIAS       \n    ,TO_CHAR(PA.DT_REGISTRO,'YYYY-MM-DD') DT_REGISTRO\nFROM paciente_alergia PA\n--WHERE PA.DS_MEDIC_NAO_CAD IS NOT NULL",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_Salesforce_Alergia",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CadastroPessoa",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Alergia",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "WITH COMPL_PESSOA AS (\nSELECT \nCPF.*\nFROM COMPL_PESSOA_FISICA CPF\nWHERE CPF.CD_CEP IS NOT NULL\n\n)\n,TRATADO_COMPL AS(\n\nSELECT\n    TMP.*\nFROM(\n    SELECT\n    ROW_NUMBER() OVER(PARTITION BY A.CD_PESSOA_FISICA ORDER BY A.NR_SEQUENCIA DESC) ID_LINHA\n    ,A.*\n    FROM COMPL_PESSOA A\n)TMP\nWHERE TMP.ID_LINHA = 1\n)\n\nSELECT\nTC.NM_CONTATO \n,TC.DS_COMPLEMENTO \n,TC.NR_ENDERECO \n,PF.DS_CATEGORIA_CNH \n,TC.CD_MUNICIPIO_IBGE \n,PF.NR_SEQ_COR_PELE \n,TC.NR_TELEFONE \n--,TC.NR_SEQ_PAIS\n,CASE\n    WHEN UPPER(P.NM_PAIS) = 'BRASIL' THEN 'BRAZIL'\n        ELSE UPPER(P.NM_PAIS)\n END NM_PAIS   \n,PF.NR_REG_GERAL_ESTRANG \n,PF.NR_CPF \n,PF.IE_ESTADO_CIVIL \n,OBTER_NOME_SOBRENOME_PESSOA(PF.CD_PESSOA_FISICA,'SC') LASTNAME \n,TC.SG_ESTADO \n,PF.CD_ESTABELECIMENTO \n,TC.DS_ENDERECO \n,PF.NR_PRONTUARIO \n,PF.IE_SEXO \n,TC.DS_EMAIL \n,TO_CHAR(PF.DT_REVISAO,'YYYY-MM-DD')    AS DT_REVISAO \n,TC.NR_TELEFONE_CELULAR \n,PF.CD_PESSOA_FISICA \n,CASE\n    WHEN TC.IE_OBRIGA_EMAIL = 'N' THEN 'FALSE'\n    WHEN TC.IE_OBRIGA_EMAIL = 'S' THEN 'TRUE'\nEND IE_OBRIGA_EMAIL\n,TC.DS_BAIRRO \n,CASE\n   WHEN TC.DS_EMAIL = NULL THEN 'TRUE'   \nEND IE_NAO_POSSUI_EMAIL\n,SUBSTR(PF.NM_PESSOA_FISICA,1,(INSTR(PF.NM_PESSOA_FISICA, ' ' , 1 , 1 ) -1 )) FIRSTNAME\n,TC.DS_FONE_ADIC \n,PF.NM_USUARIO_REVISAO \n,TC.CD_PROFISSAO \n,REPLACE(OBTER_CEP_MASCARA(TC.CD_CEP),'.','')   as CD_CEP \n,PF.NR_MATRICULA_NASC\n,TO_CHAR(PF.DT_NASCIMENTO,'YYYY-MM-DD') AS DT_NASCIMENTO\n,PF.CD_NACIONALIDADE \nFROM PESSOA_FISICA PF\nLEFT JOIN TRATADO_COMPL TC ON TC.CD_PESSOA_FISICA = PF.CD_PESSOA_FISICA\nLEFT JOIN PAIS P ON P.NR_SEQUENCIA = TC.nr_seq_pais\nWHERE ROWNUM < 5001",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_SF_PESSOA_FISICA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CadastroMedico",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CadastroPessoa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT\nUF_CRM \n,NR_CRM \n,NM_GUERRA \n,cd_pessoa_fisica\n\n,CASE\n    WHEN IE_SITUACAO = 'A' THEN 'TRUE'\n    --WHEN IE_SITUACAO = 'I' THEN 'FALSE'\n END IE_SITUACAO   \nFROM MEDICO\nWHERE IE_SITUACAO = 'A'",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_SF_CAD_MEDICO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MedicoEspecialidade",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CadastroMedico",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT\ncd_pessoa_fisica\n,CD_ESPECIALIDADE\n,NR_SEQ_PRIORIDADE\n,NR_RQE\nFROM MEDICO_ESPECIALIDADE ME",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_SF_MEDICO_ESPECIALIDADE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Filename": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Extracao Paciente Care')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Base Tasy HTML Care",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "WITH FILTRO_CIR AS(\n/*FILTRO DE PROCEDIMENTO QUE CLASSIFICA O PROGRAMA CARE*/\nSELECT DISTINCT\n    P.CD_PROCEDIMENTO\n    ,P.DS_PROCEDIMENTO\n    ,'Cirurgia' as grupo_proc\nFROM PROCEDIMENTO P\nWHERE UPPER(P.DS_PROCEDIMENTO) LIKE '%ANTIANGIO%'   OR UPPER(P.DS_PROCEDIMENTO) LIKE '%INTRAVITREA%'\n\n)\n, FITLRO_CONS_EX AS (\n    SELECT DISTINCT\n        P.CD_PROCEDIMENTO\n        ,CASE\n            WHEN P.CD_PROCEDIMENTO IN (10014,10101012) THEN 'Consultas'\n                ELSE 'Exames'\n             END grupo_proc\n         ,p.ds_procedimento    \n        --,decode(upper(GP.ds_grupo_proc),'CONSULTAS',GP.DS_GRUPO_PROC,'Exames') grupo_proc\n    FROM PROCEDIMENTO P\n    --INNER JOIN grupo_proc GP ON gp.cd_grupo_proc = p.cd_grupo_proc\n    WHERE P.CD_PROCEDIMENTO IN (10014\n                                ,10101012\n                                ,41501144\n                                ,41301315\n                                ,41301013\n                                ,50010093\n                                ,41301250\n                                ,41301420\n                                ,50010131\n                                ,50010123\n    )\n    AND UPPER(p.ie_situacao) = 'A'\n\n)\n\n,PROC AS (\n    SELECT\n        a.cd_procedimento\n        ,a.grupo_proc\n    FROM FILTRO_CIR A\n    \n    UNION ALL\n    \n    SELECT\n        a.cd_procedimento\n        ,a.grupo_proc\n    FROM FITLRO_CONS_EX A\n    \n)\n\n, PAC_CARE AS(\nSELECT DISTINCT\n    AP.CD_PESSOA_FISICA\nFROM PROCEDIMENTO_PACIENTE PP\nINNER JOIN ATENDIMENTO_PACIENTE AP ON AP.NR_ATENDIMENTO = PP.NR_ATENDIMENTO\nINNER JOIN FILTRO_CIR F ON F.CD_PROCEDIMENTO = PP.CD_PROCEDIMENTO\n\n)\n\nSELECT \n    1 as ID_SYS\n    ,EMP.CD_EMPRESA\n    ,EMP.DS_NOME_CURTO      AS SHORT_EMPRESA\n    ,ESTAB.CD_ESTABELECIMENTO\n    ,ESTAB.NM_FANTASIA_ESTAB\n    ,AP.IE_TIPO_ATENDIMENTO\n    ,PP.NR_ATENDIMENTO\n    ,AP.CD_PESSOA_FISICA\n    ,PF.NM_PESSOA_FISICA\n    ,DIAG.CD_DOENCA\n    ,DIAG.DS_DOENCA_CID\n    ,y.grupo_proc\n    ,PP.CD_CONVENIO\n    ,PP.CD_MEDICO_EXECUTOR\n    ,MED.NM_GUERRA  as NM_MEDICO\n    ,MED.IE_CORPO_CLINICO\n    ,TRUNC(AP.DT_ENTRADA)     AS DT_ENTRADA\n    ,TRUNC(PP.DT_PROCEDIMENTO) AS DT_PROCEDIMENTO \n    ,PP.CD_PROCEDIMENTO\n    ,P.DS_PROCEDIMENTO\n    ,PP.QT_PROCEDIMENTO\n    ,PP.VL_PROCEDIMENTO\nFROM PROCEDIMENTO_PACIENTE PP\nINNER JOIN ATENDIMENTO_PACIENTE AP ON AP.NR_ATENDIMENTO = PP.NR_ATENDIMENTO\nINNER JOIN PAC_CARE X ON X.CD_PESSOA_FISICA = AP.CD_PESSOA_FISICA\nINNER JOIN PESSOA_FISICA PF ON PF.CD_PESSOA_FISICA = AP.CD_PESSOA_FISICA\nINNER JOIN PROC Y   ON Y.CD_PROCEDIMENTO = PP.CD_PROCEDIMENTO\nINNER JOIN ESTABELECIMENTO ESTAB ON ESTAB.CD_ESTABELECIMENTO = AP.CD_ESTABELECIMENTO\nINNER JOIN MEDICO MED ON MED.CD_PESSOA_FISICA = PP.CD_MEDICO_EXECUTOR\nINNER JOIN EMPRESA EMP ON EMP.CD_EMPRESA = ESTAB.CD_EMPRESA\n\nOUTER APPLY(\n    SELECT\n        P.DS_PROCEDIMENTO\n    FROM PROCEDIMENTO P\n    WHERE P.CD_PROCEDIMENTO = PP.CD_PROCEDIMENTO AND ROWNUM = 1\n)P\n\nOUTER APPLY(\n    SELECT\n        TMP.*\n    FROM(    \n        SELECT \n            DD.NR_ATENDIMENTO\n            ,DD.CD_DOENCA\n            ,CD.DS_DOENCA_CID\n            ,ROW_NUMBER() OVER (PARTITION BY DD.NR_ATENDIMENTO ORDER BY DD.DT_ATUALIZACAO desc) ID_LINHA\n        FROM diagnostico_doenca DD\n        LEFT JOIN CID_DOENCA CD ON CD.CD_DOENCA_CID = DD.CD_DOENCA\n        WHERE DD.IE_CLASSIFICACAO_DOENCA = 'P'\n    )TMP\n    WHERE TMP.ID_LINHA = 1\n        AND TMP.NR_ATENDIMENTO = AP.NR_ATENDIMENTO\n\n)DIAG\n\nWHERE AP.IE_TIPO_ATENDIMENTO <> 3\n        AND AP.CD_PESSOA_FISICA <> 346\n\n\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table stg.ptk_care",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_CARE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Jornada do Paciente"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Filas por hora')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Check HOB file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOB_CSV_NC_FilasPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOB file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOB file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOB file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send HOB failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOB não encontrado!",
											"ErrorMessage": "O arquivo HOB\\FilasHora não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOB filas hora",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "Fila",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Anuncio Inicial",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Anuncio_Inicial",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Timeout",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Timeout",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Cheia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Cheia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Vazia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Vazia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Sem Ags. Disp.",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Sem_Ags_Disp",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Caixa Postal",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Caixa_Postal",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Antes",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Antes",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Intervalo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Depois",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Depois",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Total Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Total_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Nao Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Nao_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback",
														"type": "String"
													},
													"sink": {
														"name": "Callback",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Toque",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Pausa ACW",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Pausa_ACW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Produtivo AHT",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Produtivo_AHT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Nivel Servico",
														"type": "String"
													},
													"sink": {
														"name": "Nivel_Servico",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Atendimento",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Atendimento",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Medio",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Medio",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera = Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOB_CSV_NC_FilasPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_FilasPorHoras",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check HOSAG file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOSAG_CSV_NC_FilasPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOSAG file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOSAG file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOSAG file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send HOSAG failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOSAG não encontrado!",
											"ErrorMessage": "O arquivo HOSAG\\FilasHora não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOSAG filas horas",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "Fila",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Anuncio Inicial",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Anuncio_Inicial",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Timeout",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Timeout",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Cheia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Cheia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Vazia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Vazia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Sem Ags. Disp.",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Sem_Ags_Disp",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Caixa Postal",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Caixa_Postal",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Antes",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Antes",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Intervalo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Depois",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Depois",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Total Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Total_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Nao Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Nao_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback",
														"type": "String"
													},
													"sink": {
														"name": "Callback",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Toque",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Pausa ACW",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Pausa_ACW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Produtivo AHT",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Produtivo_AHT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Nivel Servico",
														"type": "String"
													},
													"sink": {
														"name": "Nivel_Servico",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Atendimento",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Atendimento",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Medio",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Medio",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera = Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOSAG_CSV_NC_FilasPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_FilasPorHoras",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check DH file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DH_CSV_NC_FilasPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DH file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check DH file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check DH file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send DH failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\DH não encontrado!",
											"ErrorMessage": "O arquivo DH\\FilasHora não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy DH filas hora",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "Fila",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Anuncio Inicial",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Anuncio_Inicial",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Timeout",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Timeout",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Cheia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Cheia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Vazia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Vazia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Sem Ags. Disp.",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Sem_Ags_Disp",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Caixa Postal",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Caixa_Postal",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Antes",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Antes",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Intervalo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Depois",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Depois",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Total Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Total_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Nao Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Nao_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback",
														"type": "String"
													},
													"sink": {
														"name": "Callback",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Toque",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Pausa ACW",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Pausa_ACW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Produtivo AHT",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Produtivo_AHT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Nivel Servico",
														"type": "String"
													},
													"sink": {
														"name": "Nivel_Servico",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Atendimento",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Atendimento",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Medio",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Medio",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera = Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DH_CSV_NC_FilasPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_FilasPorHoras",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check HOSL file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOSL_CSV_NC_BilheteLigacoes",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOSL file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOSL file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOSL file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send HOSL failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOSL não encontrado!",
											"ErrorMessage": "O arquivo HOSL\\FilasHora não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOSL filas hora",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "Fila",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Anuncio Inicial",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Anuncio_Inicial",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Timeout",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Timeout",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Cheia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Cheia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Vazia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Vazia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Sem Ags. Disp.",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Sem_Ags_Disp",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Caixa Postal",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Caixa_Postal",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Antes",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Antes",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Intervalo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Depois",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Depois",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Total Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Total_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Nao Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Nao_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback",
														"type": "String"
													},
													"sink": {
														"name": "Callback",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Toque",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Pausa ACW",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Pausa_ACW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Produtivo AHT",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Produtivo_AHT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Nivel Servico",
														"type": "String"
													},
													"sink": {
														"name": "Nivel_Servico",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Atendimento",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Atendimento",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Medio",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Medio",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera = Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOSL_CSV_NC_FilasPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_FilasPorHoras",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check INOB file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "INOB_CSV_NC_FilasPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "INOB file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check INOB file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check INOB file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send INOB failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\INOB não encontrado!",
											"ErrorMessage": "O arquivo INOB\\FilasHoras não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy INOB filas horas",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "Fila",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Anuncio Inicial",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Anuncio_Inicial",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Timeout",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Timeout",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Cheia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Cheia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Vazia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Vazia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Sem Ags. Disp.",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Sem_Ags_Disp",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Caixa Postal",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Caixa_Postal",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Antes",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Antes",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Intervalo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Depois",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Depois",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Total Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Total_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Nao Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Nao_Tratados"
													}
												},
												{
													"source": {
														"name": "Callback",
														"type": "String"
													},
													"sink": {
														"name": "Callback",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Toque",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Pausa ACW",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Pausa_ACW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Produtivo AHT",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Produtivo_AHT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Nivel Servico",
														"type": "String"
													},
													"sink": {
														"name": "Nivel_Servico",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Atendimento",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Atendimento",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Medio",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Medio",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera = Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "INOB_CSV_NC_FilasPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_FilasPorHoras",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check CSI file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CSI_CSV_NC_FilasPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CSI file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check CSI file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check CSI file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure CSI",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\INOB não encontrado!",
											"ErrorMessage": "O arquivo INOB\\Agentes por Dia não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy CSI FilasPorHora",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "Fila",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Anuncio Inicial",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Anuncio_Inicial",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Timeout",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Timeout",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Cheia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Cheia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Vazia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Vazia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Sem Ags. Disp.",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Sem_Ags_Disp",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Caixa Postal",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Caixa_Postal",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Antes",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Antes",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Intervalo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Depois",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Depois",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Total Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Total_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Nao Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Nao_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback",
														"type": "String"
													},
													"sink": {
														"name": "Callback",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Toque",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Pausa ACW",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Pausa_ACW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Produtivo AHT",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Produtivo_AHT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Nivel Servico",
														"type": "String"
													},
													"sink": {
														"name": "Nivel_Servico",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Atendimento",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Atendimento",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Medio",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Medio",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera = Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "CSI_CSV_NC_FilasPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_FilasPorHoras",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Nexcore"
				},
				"annotations": [],
				"lastPublishTime": "2019-11-13T13:27:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Geral Atendimentos HOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Alimenta as informações das tabelas:\n\nAtendimento_ Unidade \nAgendamento_Unidade\nUsuarios_Unidade\nConsultas_Unidade\nAgendas Unidade\n\nPara extração de relatórios do call center.",
				"activities": [
					{
						"name": "Atendimento HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select pf.cd_pessoa_fisica, pf.nm_pessoa_fisica, \nto_char(at.dt_entrada,'yyyy-mm-dd') as dt_entrada,\nto_char(at.dt_entrada,'hh24:mi:ss') as hr_entrada, \n\nobter_nome_pf(at.cd_medico_resp) as nm_medico, c.cd_convenio, obter_nome_convenio(c.cd_convenio) AS ds_convenio, \nat.nr_atendimento,\ne.cd_cgc as CNPJ,\nnm_fantasia_estab DS_UNIDADE,\nem.nm_razao_social MARCA,\n\nat.cd_procedencia,\np.ds_procedencia,\n'NAO ENCONTRADO' as ID,\n\nto_char(at.dt_entrada,'dd') dia,\nto_char(at.dt_entrada,'mm') mes,\nto_char(at.dt_entrada,'yyyy') ano,\nto_char(at.dt_cancelamento, 'yyyy-mm-dd') dt_cancelamento,\nto_char(at.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\n'Tasy HTML' as BASE\n\nfrom \natendimento_paciente at, \npessoa_fisica pf,\natend_categoria_convenio c,\nprocedencia p,\nestabelecimento e,\nempresa em\nwhere at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand at.cd_procedencia = p.cd_procedencia (+)\nand at.nr_atendimento = c.nr_atendimento\nand at.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\n\nAND at.dt_entrada between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Atendimento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Consulta HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Consulta HOB - Azure\n\nselect o.nr_sequencia as nr_sequencia, \nto_char(o.dt_atualizacao,'yyyy-mm-dd') as dt_atualizacao,\nto_char(o.dt_atualizacao,'hh24:mi:ss') as hr_atualizacao, \no.nr_atendimento, \no.cd_medico as cd_medico ,\nobter_nome_pf(o.cd_medico) as nm_medico, \nc.qt_periodo||' '||c.ie_periodo as ds_retorno,  \nsubstr(z.conduta,1,1000) as ds_conduta,\nobter_pessoa_atendimento(o.nr_atendimento, 'C') as cd_pessoa_fisica,\n\n(select unique d.cd_doenca ||' - '|| a.ds_doenca_cid\nfrom diagnostico_doenca d, \n     cid_doenca a\nwhere a.cd_doenca_cid = d.cd_doenca\nand d.nr_atendimento = o.nr_atendimento\nand d.nr_seq_interno = (select max(x.nr_seq_interno) from diagnostico_doenca x where x.nr_atendimento = d.nr_atendimento)) as ds_diagnostico,\n\nobter_nome_estab(obter_estab_atendimento(o.nr_atendimento)) as DS_UNIDADE,\n\ne.cd_cgc as cnpj,\n\n'HOB' as MARCA,\n'Tasy HTML' as BASE\n\nfrom oft_consulta o,\n     (SELECT a.nr_seq_consulta, b.ds_resultado as conduta\n      FROM   med_avaliacao_paciente a \n      inner join med_avaliacao_result b ON b.nr_seq_avaliacao = a.nr_sequencia \n      WHERE  a.nr_seq_tipo_avaliacao = 34 \n      and  b.nr_seq_item = 457 --456, 458 ) \n      GROUP  BY a.nr_seq_consulta, b.ds_resultado) z,\n      oft_conduta c,\n      estabelecimento e\nwhere o.nr_sequencia = z.nr_seq_consulta\nand o.nr_sequencia = c.nr_seq_consulta\nand o.nr_atendimento is not null\nand obter_estab_atendimento(o.nr_atendimento) = e.cd_estabelecimento\n\nand o.dt_atualizacao between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Consulta",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamento HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- AGENDAMENTO HOB - Azure\n\nselect  a.cd_pessoa_fisica, \na.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char((a.hr_inicio) , 'yyyy-mm-dd') as data_agenda,\nto_char((a.hr_inicio) , 'hh24:mi:ss') as hora_agenda,\n'Consulta' as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nsubstr(obter_desc_procedimento(a.cd_procedimento, a.ie_origem_proced),1,1000) as ds_procedimento_princ,\nsubstr((select Listagg(Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced), ' ;') within GROUP (ORDER BY Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced))  from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia),1,1000) as ds_procedimento_adic,\n1 + (select count(1)from AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia) as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_orig) as nm_usuario,\nobter_nome_pf(a.cd_medico_exec) as nm_medico,\ne.nm_fantasia_estab DS_UNIDADE,\nem.nm_razao_social MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\nto_char(a.dt_agendamento, 'yyyy-mm-dd') dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao,\naa.ds_agrupamento ds_agrupamento,\na.cd_motivo_cancelamento,\nsubstr(obter_ds_motivo_status(a.nr_sequencia, a.cd_agenda),1,200) as ds_motivo_cancelamento,\na.cd_agenda,\nto_char(a.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\n'Tasy HTML' as BASE\n\nfrom agenda_paciente a,\n     agenda ag,\n     pessoa_fisica pf,\n     procedencia p,\n     agenda_paciente_classif ac,\n     agrupamento_agenda aa,\n     empresa em,\n     estabelecimento e\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica (+)\nand a.cd_procedencia = p.cd_procedencia (+)\nand a.nr_seq_classif_agenda = ac.nr_sequencia (+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand ag.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\nand a.cd_pessoa_fisica is not null\nand ag.cd_pessoa_fisica is not null\nand ag.cd_tipo_agenda = 2\n\nand a.dt_agendamento between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Usuarios HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select u.nm_usuario, \nu.ds_usuario, \nu.ie_situacao, \nto_char(u.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\nobter_nome_estabelecimento(u.cd_estabelecimento) as DS_UNIDADE,\ne.cd_cgc as CNPJ,\nobter_nome_empresa(obter_empresa_estab(u.cd_estabelecimento)) as Marca,\n'Tasy HTML' as BASE\nfrom usuario u,\n     empresa em,\n     estabelecimento e\nwhere u.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Usuario",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendas HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT A.CD_AGENDA, A.DS_AGENDA, A.CD_TIPO_AGENDA, A.CD_PESSOA_FISICA, E.CD_CGC as CNPJ, (SELECT X.DS_AREA_ATUACAO FROM AREA_ATUACAO_MEDICA X\nWHERE X.NR_SEQUENCIA = A.NR_SEQ_AREA_ATUACAO) AS DS_AREA_ATUACAO, A.IE_SITUACAO,\nto_char(A.DT_ATUALIZACAO, 'yyyy-mm-dd') DT_ATUALIZACAO,\n'Tasy HTML' as BASE\nFROM AGENDA A,\n     ESTABELECIMENTO E\nWHERE A.CD_ESTABELECIMENTO = E.CD_ESTABELECIMENTO",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agenda",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento"
				},
				"annotations": [],
				"lastPublishTime": "2020-03-04T15:25:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Geral Atendimentos Oftalmoclin')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Alimenta as informações das tabelas:\n\nAtendimento_ Unidade \nAgendamento_Unidade\nUsuarios_Unidade\nConsultas_Unidade\nAgendas Unidade\n\nPara extração de relatórios do call center.",
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Atendimento Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT pac_reg AS CD_PESSOA_FISICA\n    , rtrim(ltrim(pac_nome)) AS NM_PESSOA_FISICA\n    , convert(CHAR(10), osm_dthr, 121) AS DT_ENTRADA\n    , LEFT(CONVERT(VARCHAR(12), osm_dthr, 114),8) AS HR_ENTRADA\n    , smm_med AS NM_MEDICO\n    , osm_cnv AS CD_CONVENIO\n    , cnv_nome AS DS_CONVENIO\n    , convert(VARCHAR, (convert(VARCHAR, osm_serie) + convert(VARCHAR, osm_num))) AS NR_ATENDIMENTO\n    , emp_cgc AS CNPJ\n    , emp_nome_fantasia AS DS_UNIDADE\n    , emp_nome_fantasia AS MARCA\n    , 0 AS CD_PROCEDENCIA\n    , 'NAO ENCONTRADO' AS DS_PROCEDENCIA\n    , 'NAO ENCONTRADO' AS ID\n    , CONVERT(INT, DAY(osm_dthr)) AS DIA\n    , CONVERT(INT, MONTH(osm_dthr)) AS MES\n    , CONVERT(INT, YEAR(osm_dthr)) AS ANO,\n'Smart Oftalmoclin' as BASE\nFROM osm\nINNER JOIN smm\n    ON smm_osm_serie = osm_serie\n        AND smm_osm = osm_num\nINNER JOIN pac\n    ON pac_reg = osm_pac\nINNER JOIN cnv\n    ON osm_cnv = cnv_cod\nINNER JOIN str\n    ON str_cod = osm_str\nINNER JOIN psv\n    ON psv_cod = osm_mreq\nLEFT OUTER JOIN str str_e\n    ON str.str_str_cod = str_e.str_cod\nLEFT OUTER JOIN emp\n    ON str_e.str_emp_cod = emp_cod\nWHERE 1 = 1\n    AND (\n        smm_pacote IS NULL\n        OR (smm_pacote = 'C')\n        )\n    AND smm_sfat NOT IN ('C')\n\nAND osm_dthr BETWEEN GETDATE() - 730 AND GETDATE()",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Atendimento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamentos Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT AGM_PAC AS CD_PESSOA_FISICA\n    , agm.agm_cnv_cod AS CD_CONVENIO\n    , emp_cgc AS CNPJ\n    , CONVERT(DATE, AGM_HINI) AS DATA_AGENDA\n    , LEFT(CONVERT(VARCHAR(12), agm_hini, 114), 8) AS HORA_AGENDA\n    , CASE AGM_ATEND\n        WHEN 'CRG'\n            THEN 'Cirurgia'\n        WHEN 'ASS'\n            THEN 'Consulta'\n        when '' then 'Consulta'\n        ELSE 'Outros'\n        END AS TIPO_AGENDA\n    , pac.PAC_NOME AS NM_PACIENTE\n    , smk.smk_nome AS DS_PROCEDIMENTO_PRINC\n    , ' ' DS_PROCEDIMENTO_ADIC\n    , 1 AS IE_QUANTIDADE\n    , USR_NOME AS NM_USUARIO\n    , psv_nome AS NM_MEDICO\n    , EMP_NOME_FANTASIA AS DS_UNIDADE\n    , EMP_NOME_FANTASIA AS MARCA\n    , CASE \n        WHEN AGM_STAT = 'A'\n            THEN 'Aberta'\n        WHEN AGM_STAT = 'E'\n            THEN 'Executada'\n        WHEN AGM_STAT = 'C'\n            THEN 'Cancelada'\n        WHEN AGM_STAT = 'B'\n            THEN 'Bloqueada'\n        END STATUS_AGENDA\n    , CONVERT(VARCHAR, convert(VARCHAR, AGM_OSM_SERIE) + convert(VARCHAR, AGM_OSM_NUM)) AS NR_ATENDIMENTO\n    , AGM_num AS NR_SEQUENCIA\n    , '' ID\n    , '' AS CD_PROCEDENCIA\n    , agm_proc AS DS_PROCEDENCIA\n    , agm.AGM_DTMRC AS DT_AGENDAMENTO\n    , CONVERT(INT, DAY(AGM_HINI)) AS DIA\n    , CONVERT(INT, MONTH(AGM_HINI)) AS MES\n    , CONVERT(INT, YEAR(AGM_HINI)) AS ANO\n    , ' ' DS_CLASSIFICACAO\n    , ' ' DS_AGRUPAMENTO\n    , agm.AGM_CANC_MOT_COD AS CD_MOTIVO_CANCELAMENTO\n    , agm.AGM_CANC_MOT_TIPO AS DS_MOTIVO_CANCELAMENTO\n    , agm_med AS CD_AGENDA,\n'Smart Oftalmoclin' as BASE\nFROM agm\nINNER JOIN usr\n    ON (agm.agm_usr_login = usr.usr_login)\nINNER JOIN psv\n    ON (psv.psv_cod = agm.agm_med)\nINNER JOIN smk\n    ON (\n            agm_smk = smk_cod\n            AND agm_tpsmk = smk_tipo\n            )\nINNER JOIN pac\n    ON (pac_reg = agm_pac)\nINNER JOIN loc\n    ON (AGM_LOC = LOC_COD)\nINNER JOIN str\n    ON (LOC_STR = STR.STR_COD)\nINNER JOIN str str_e\n    ON (STR.STR_STR_COD = STR_E.STR_COD)\nINNER JOIN cnv\n    ON (CNV_COD = AGM_CNV_COD)\nLEFT OUTER JOIN ctf ct1\n    ON (\n            ct1.ctf_cod = smk_ctf\n            AND ct1.ctf_tipo = smk_tipo\n            )\nLEFT OUTER JOIN emp\n    ON emp_cod = str_e.str_emp_cod\n\nWHERE AGM_DTMRC BETWEEN GETDATE() - 730 AND GETDATE()",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Usuarios Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select\nusr_login as NM_USUARIO,\nusr_nome as DS_USUARIO,\nusr_status as IE_SITUACAO,\nusr_dt_alter_senha as DT_ATUALIZACAO,\n'OFTALMOCLIN Hospital de Olhos da Bahia' AS DS_UNIDADE,\n'14307763000194' as CNPJ,\n'OFTALMOCLIN' as MARCA,\n'Smart Oftalmoclin' as BASE\nfrom usr",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Usuario",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Consulta Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT\nRCL_SMM AS NR_SEQUENCIA,\nCONVERT(DATE,RCL_DTHR_ATUAL) AS DT_ATUALIZACAO,\nCONVERT(VARCHAR,RCL_DTHR_ATUAL,108) as HR_ATUALIZACAO,\n\nCONVERT(VARCHAR,CONVERT(VARCHAR,RCL_OSM_SERIE) + CONVERT(VARCHAR,RCL_OSM)) AS NR_ATENDIMENTO, \n\nRCL_MED AS CD_MEDICO,\nPSV_APEL AS NM_MEDICO,\n'' AS DS_RETORNO,\nCONVERT(VARCHAR,RCL_LAUDO_RTF) AS DS_CONDUTA,\nRCL_PAC AS CD_PESSOA_FISICA,\nCONVERT(VARCHAR,RCL_TXT) AS DS_DIAGNOSTICO,\n'OFTALMOCLIN Hospital de Olhos da Bahia' AS DS_UNIDADE,\n'14307763000194' as CNPJ,\n'IOF' AS MARCA,\n'Smart Oftalmoclin' as BASE\nFROM RCL\nINNER JOIN PSV ON PSV_COD = RCL_MED\n\nWHERE RCL_DTHR_ATUAL BETWEEN GETDATE() - 730 AND GETDATE()",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Consulta",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendas Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT distinct agd_med AS CD_AGENDA \n    , 0 AS DS_AGENDA\n    , 0 CD_TIPO_AGENDA\n    , psv_cod AS CD_PESSOA_FISICA\n    , emp_cgc AS CNPJ\n    , '' AS DS_AREA_ATUACAO\n    , 'A' AS IE_SITUACAO,\n'Smart Oftalmoclin' as BASE\n    -- , CASE \n    --     WHEN (agd_dt_reconstr IS not NULL and AGD_DT_GERA is not null)\n    --         THEN agd_dt_reconstr\n    --     WHEN (agd_dt_reconstr IS NULL and AGD_DT_GERA is not null)\n    --         THEN agd_dt_gera\n    --     ELSE AGD_DT_GERA\n    --     END AS DT_ATUALIZACAO\nFROM agd\nINNER JOIN PSV\n    ON agd_med = psv_cod\nINNER JOIN loc\n    ON loc_cod = agd_loc\nINNER JOIN str\n    ON str_cod = loc_str\nLEFT OUTER JOIN str str_e\n    ON str_e.str_cod = str.str_str_cod\nLEFT OUTER JOIN emp\n    ON emp_cod = str_e.str_emp_cod",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agenda",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento"
				},
				"annotations": [],
				"lastPublishTime": "2020-02-10T13:01:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Geral Atendimentos Sadalla')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Alimenta as informações das tabelas:\n\nAtendimento_ Unidade \nAgendamento_Unidade\nUsuarios_Unidade\nConsultas_Unidade\nAgendas Unidade\n\nPara extração de relatórios do call center.",
				"activities": [
					{
						"name": "Atendimento Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select pf.cd_pessoa_fisica, pf.nm_pessoa_fisica, \n\nto_char(at.dt_entrada,'yyyy-mm-dd') as dt_entrada,\nto_char(at.dt_entrada,'hh24:mi:ss') as hr_entrada, \n\nobter_nome_pf(at.cd_medico_resp) as nm_medico, c.cd_convenio, obter_nome_convenio(c.cd_convenio) AS ds_convenio, \nat.nr_atendimento,\ne.cd_cgc as CNPJ,\nnm_fantasia_estab DS_UNIDADE,\nem.nm_razao_social MARCA,\n\nat.cd_procedencia,\np.ds_procedencia,\n'NAO ENCONTRADO' as ID,\n\nto_char(at.dt_entrada,'dd') dia,\nto_char(at.dt_entrada,'mm') mes,\nto_char(at.dt_entrada,'yyyy') ano,\nto_char(at.dt_cancelamento, 'yyyy-mm-dd') dt_cancelamento,\nto_char(at.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\n'Tasy Delphi' as BASE\n\nfrom \natendimento_paciente at, \npessoa_fisica pf,\natend_categoria_convenio c,\nprocedencia p,\nestabelecimento e,\nempresa em\nwhere at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand at.cd_procedencia = p.cd_procedencia (+)\nand at.nr_atendimento = c.nr_atendimento\nand at.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\n\nAND at.dt_entrada between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Atendimento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Consulta Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Consulta Sadalla - Azure\n\nselect o.nr_sequencia as nr_sequencia, to_char(o.dt_atualizacao,'yyyy-mm-dd') as dt_atualizacao,\nto_char(o.dt_atualizacao,'hh24:mi:ss') as hr_atualizacao, \no.nr_atendimento, o.cd_profissional as cd_medico ,obter_nome_pf(o.cd_profissional) as nm_medico, r.ds_retorno, substr(o.ds_conduta,1,1000) as ds_conduta,\nobter_pessoa_atendimento(o.nr_atendimento, 'C') as cd_pessoa_fisica,\n\n(select unique d.cd_doenca ||' - '|| a.ds_doenca_cid\nfrom diagnostico_doenca d, \n     cid_doenca a\nwhere a.cd_doenca_cid = d.cd_doenca\nand d.nr_atendimento = o.nr_atendimento\nand d.nr_seq_interno = (select max(x.nr_seq_interno) from diagnostico_doenca x where x.nr_atendimento = d.nr_atendimento)) as ds_diagnostico,\n\nobter_nome_estab(obter_estab_atendimento(o.nr_atendimento)) as DS_UNIDADE,\n\ne.cd_cgc as cnpj,\n\n'SADALLA' as marca,\n'Tasy Delphi' as BASE\n\nfrom oft_consulta_medica o,\n     oft_retorno r,\n     estabelecimento e\nwhere o.nr_seq_retorno = r.nr_sequencia\nand o.nr_atendimento is not null\nand obter_estab_atendimento(o.nr_atendimento) = e.cd_estabelecimento\n\nand o.dt_atualizacao between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Consulta",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamento Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Agendamento Sadalla - Azure\n\nselect a.cd_pessoa_fisica, \na.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char(a.dt_agenda, 'yyyy-mm-dd') as data_agenda,\nto_char(a.dt_agenda, 'hh24:mi:ss') as hora_agenda,\n'Consulta' as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nobter_desc_procedimento(10502, 1) as ds_procedimento_princ,\n'' ds_procedimento_adic,\n1 as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_origem) as nm_usuario,\nobter_nome_pf(ag.cd_pessoa_fisica) as nm_medico,\nnm_fantasia_estab DS_UNIDADE,\nem.nm_razao_social MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\nto_char(a.dt_agendamento, 'yyyy-mm-dd') dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao ,\naa.ds_agrupamento ds_agrupamento,\na.cd_motivo_cancelamento,\nsubstr(obter_ds_motivo_status(a.nr_sequencia, a.cd_agenda),1,200) as ds_motivo_cancelamento,\na.cd_agenda,\n\nto_char(a.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\n'Tasy Delphi' as BASE\n\nfrom agenda_consulta a,\n     agenda ag,\n     pessoa_fisica pf,\n     procedencia p,\n     agenda_classif ac,\n     agrupamento_agenda aa,\n     estabelecimento e,\n     empresa em\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica (+)\nand a.cd_procedencia = p.cd_procedencia(+)\nand a.ie_classif_agenda  = ac.cd_classificacao(+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand ag.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\nand a.cd_pessoa_fisica is not null\nand a.dt_agendamento between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Clear Base",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Usuarios Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select u.nm_usuario, \nu.ds_usuario, \nu.ie_situacao, \nto_char(u.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\nobter_nome_estabelecimento(u.cd_estabelecimento) as DS_UNIDADE,\ne.cd_cgc as CNPJ,\nobter_nome_empresa(obter_empresa_estab(u.cd_estabelecimento)) as Marca,\n'Tasy Delphi' as BASE\nfrom usuario u,\n     empresa em,\n     estabelecimento e\nwhere u.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Usuario",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendas Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT A.CD_AGENDA, A.DS_AGENDA, A.CD_TIPO_AGENDA, A.CD_PESSOA_FISICA, E.CD_CGC as CNPJ, (SELECT X.DS_AREA_ATUACAO FROM AREA_ATUACAO_MEDICA X\nWHERE X.NR_SEQUENCIA = A.NR_SEQ_AREA_ATUACAO) AS DS_AREA_ATUACAO, A.IE_SITUACAO,\nto_char(A.DT_ATUALIZACAO, 'yyyy-mm-dd') DT_ATUALIZACAO,\n'Tasy Delphi' as BASE\nFROM AGENDA A,\n     ESTABELECIMENTO E\nWHERE A.CD_ESTABELECIMENTO = E.CD_ESTABELECIMENTO",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agenda",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Clear Base",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CLEARBASEATENDIMENTOUNIDADES]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-09T17:32:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gerar Base CNPJ')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Busca dados",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy to CSV CNPJ",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "    SELECT DISTINCT \n        a.CGC_CONV\n    FROM STG.BI_CNPJ_CONVENIO a\n    WHERE NOT EXISTS (SELECT X.CGC_CONVENIO FROM dw.DimConvenioCGC X WHERE X.CGC_CONVENIO = a.CGC_CONV)\n    AND LEN(A.CGC_CONV) = 14",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "FileServerWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DW_ORIGEM",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CSV_CNPJ_SYS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Busca dados",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "    SELECT DISTINCT \n        a.CGC_CONV\n    FROM STG.BI_CNPJ_CONVENIO a\n    WHERE NOT EXISTS (SELECT X.CGC_CONVENIO FROM dw.DimConvenioCGC X WHERE X.CGC_CONVENIO = a.CGC_CONV)\n    AND LEN(A.CGC_CONV) = 14",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW_ORIGEM",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CNPJ"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gerar Base Consulta CNPJ DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CNPJ CONV SMART - DH ITG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE STG.BI_CNPJ_CONVENIO",
								"writeBehavior": "insert",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV SMART - DH ITB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - DH ITG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV SMART - DH IOF",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - DH ITB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_IOF_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV SMART - Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - DH IOF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV HTML",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - HOSL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT \n    A.CD_CGC    AS CGC_CONV\nFROM CONVENIO A",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV DELPHI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV HTML",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT \n    A.CD_CGC    AS CGC_CONV\nFROM CONVENIO A",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV SMART - HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - Oftalmoclin",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CNPJ"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gerar Base Consulta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_CNPJ_SYS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CNPJ"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-09T14:48:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Agentes por Dia NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Agentes por Dia CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": [],
				"lastPublishTime": "2019-12-05T20:44:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Agentes por Hora NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Agentes por Hora DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": [],
				"lastPublishTime": "2019-11-14T15:21:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Bilhetes NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Bilhete de ligacoes CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes CSI SADALLA",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes HOBL2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": [],
				"lastPublishTime": "2019-11-13T13:27:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Filas por Hora NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Filas por Hora CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_FilasporHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Cria Base Nexcore",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Filas por Hora CSI",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora HOSL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora HOB",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora DH",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora INOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CREATEBASENEXCORE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": [],
				"lastPublishTime": "2019-11-14T21:24:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Importa CSV Py to AZ')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CSV to AZ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_CNPJ_PY_AZ_FINAL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_DIM_CNPJ",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CNPJ"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Movimento_Estoque')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mov Estoque HTML",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "WITH AUX AS(\nselect operacao_estoque.cd_operacao_estoque,\n    dt_movimento_estoque,\n    movimento_estoque.cd_local_estoque,\n    ds_local_estoque,\n    movimento_estoque.cd_estabelecimento,\n    nm_fantasia_estab,\n    movimento_estoque.nr_documento,\n    movimento_estoque.cd_material,\n    /*case \n        when ds_familia is null then 'Sem classificação'\n        else ds_familia\n        end familia_padrao,*/\n    MATERIAL.CD_CLASSE_MATERIAL,   \n    ds_classe_material classe_material,\n    ds_subgrupo_material Subgrupo,\n    ds_grupo_material Grupo,\n    ds_fabricante Fabricante,\n    ds_reduzida,\n    ds_operacao,\n    ie_entrada_saida,\n    cd_acao,\n    case \n        when ds_operacao in ('Consumo', 'Execução Prescrição', 'Consumo da Produção')\n        then sum(qt_movimento)/(avg(QT_CONV_ESTOQUE_CONSUMO))\n        else sum(qt_movimento)\n        end qt_movimento,\n    sum(case when movimento_estoque_valor.cd_tipo_valor = 5 then - movimento_estoque_valor.vl_movimento else + movimento_estoque_valor.vl_movimento end ) valor_movimento\n    \n    from movimento_estoque\n    left join operacao_estoque\n    on movimento_estoque.cd_operacao_estoque = operacao_estoque.cd_operacao_estoque\n    \n    left join estabelecimento\n    on (movimento_estoque.cd_estabelecimento = estabelecimento.cd_estabelecimento)\n    \n    left join local_estoque\n    on (local_estoque.cd_estabelecimento = movimento_estoque.cd_estabelecimento AND\n        local_estoque.cd_local_estoque = movimento_estoque.cd_local_estoque)\n        \n    left join material\n    on (movimento_estoque.cd_material = material.cd_material) \n    \n    left join material_familia\n    on (material.nr_seq_familia = material_familia.nr_sequencia)\n    \n    left join classe_material\n    on (material.cd_classe_material = classe_material.cd_classe_material)\n    \n    left join subgrupo_material\n    on (classe_material.cd_subgrupo_material = subgrupo_material.cd_subgrupo_material)\n    \n    left join grupo_material\n    on (subgrupo_material.cd_grupo_material = grupo_material.cd_grupo_material)\n    \n    left join mat_fabricante\n    on material.nr_seq_fabric =  mat_fabricante.nr_sequencia\n    \n    left join movimento_estoque_valor\n    on movimento_estoque_valor.nr_movimento_estoque = movimento_estoque.nr_movimento_estoque\n\n    --where dt_movimento_estoque >= '01/01/2020' \n\n    GROUP BY operacao_estoque.cd_operacao_estoque,\n        dt_movimento_estoque,\n        movimento_estoque.cd_local_estoque,\n        ds_local_estoque,\n        movimento_estoque.cd_estabelecimento,\n        nm_fantasia_estab,\n        movimento_estoque.nr_documento,\n        movimento_estoque.cd_material,\n        --case when ds_familia is null then 'Sem classificação' else ds_familia end,\n        material.cd_classe_material,\n        ds_classe_material,\n        ds_subgrupo_material,\n        ds_grupo_material,\n        ds_fabricante,\n        ds_reduzida,\n        ds_operacao,\n        ie_entrada_saida,\n        cd_acao\n)\nSELECT \n    TO_CHAR(A.DT_MOVIMENTO_ESTOQUE,'YYYY-MM-DD') AS DATA_MOVIMENTO\n    ,A.CD_LOCAL_ESTOQUE\n    ,A.DS_LOCAL_ESTOQUE\n    ,A.CD_ESTABELECIMENTO\n    ,A.nm_fantasia_estab                         AS DS_ESTABELECIMENTO\n    ,A.CD_MATERIAL\n    ,A.DS_REDUZIDA                                AS DS_MATERIAL_SHORT\n    ,A.CD_CLASSE_MATERIAL\n    ,A.CLASSE_MATERIAL                           AS DS_CLASSE_MATERIAL\n    ,A.cd_operacao_estoque\n    ,A.DS_OPERACAO\n    ,A.QT_MOVIMENTO\n    ,CASE \n        WHEN A.CD_ACAO = 2 THEN A.VALOR_MOVIMENTO * -1\n        ELSE A.VALOR_MOVIMENTO\n     END VL_MOVIMENTO   \nFROM AUX A\nWHERE TO_CHAR(TRUNC(A.DT_MOVIMENTO_ESTOQUE,'MM'),'YYYY-MM-DD') = TO_CHAR(TRUNC(SYSDATE,'MM'),'YYYY-MM-DD')",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DECLARE @MES INT\nDECLARE @ANO INT\n\nSET @MES = MONTH(GETDATE())\nSET @ANO = YEAR(GETDATE())\n\nDELETE FROM MOVIMENTO_ESTOQUE\nWHERE MONTH(DATA_MOVIMENTO) = @MES\n    AND YEAR(DATA_MOVIMENTO) = @ANO",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOQUE"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO_ESTOQUE"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO"
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO"
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque Delphi",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque HTML",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "WITH AUX AS(\nselect operacao_estoque.cd_operacao_estoque,\n    dt_movimento_estoque,\n    movimento_estoque.cd_local_estoque,\n    ds_local_estoque,\n    movimento_estoque.cd_estabelecimento,\n    nm_fantasia_estab,\n    movimento_estoque.nr_documento,\n    movimento_estoque.cd_material,\n    /*case \n        when ds_familia is null then 'Sem classificação'\n        else ds_familia\n        end familia_padrao,*/\n    MATERIAL.CD_CLASSE_MATERIAL,   \n    ds_classe_material classe_material,\n    ds_subgrupo_material Subgrupo,\n    ds_grupo_material Grupo,\n    ds_fabricante Fabricante,\n    ds_reduzida,\n    ds_operacao,\n    ie_entrada_saida,\n    cd_acao,\n    case \n        when ds_operacao in ('Consumo', 'Execução Prescrição', 'Consumo da Produção')\n        then sum(qt_movimento)/(avg(QT_CONV_ESTOQUE_CONSUMO))\n        else sum(qt_movimento)\n        end qt_movimento,\n    sum(case when movimento_estoque_valor.cd_tipo_valor = 5 then - movimento_estoque_valor.vl_movimento else + movimento_estoque_valor.vl_movimento end ) valor_movimento\n    \n    from movimento_estoque\n    left join operacao_estoque\n    on movimento_estoque.cd_operacao_estoque = operacao_estoque.cd_operacao_estoque\n    \n    left join estabelecimento\n    on (movimento_estoque.cd_estabelecimento = estabelecimento.cd_estabelecimento)\n    \n    left join local_estoque\n    on (local_estoque.cd_estabelecimento = movimento_estoque.cd_estabelecimento AND\n        local_estoque.cd_local_estoque = movimento_estoque.cd_local_estoque)\n        \n    left join material\n    on (movimento_estoque.cd_material = material.cd_material) \n    \n    left join material_familia\n    on (material.nr_seq_familia = material_familia.nr_sequencia)\n    \n    left join classe_material\n    on (material.cd_classe_material = classe_material.cd_classe_material)\n    \n    left join subgrupo_material\n    on (classe_material.cd_subgrupo_material = subgrupo_material.cd_subgrupo_material)\n    \n    left join grupo_material\n    on (subgrupo_material.cd_grupo_material = grupo_material.cd_grupo_material)\n    \n    left join mat_fabricante\n    on material.nr_seq_fabric =  mat_fabricante.nr_sequencia\n    \n    left join movimento_estoque_valor\n    on movimento_estoque_valor.nr_movimento_estoque = movimento_estoque.nr_movimento_estoque\n\n    --where dt_movimento_estoque >= '01/01/2020' \n\n    GROUP BY operacao_estoque.cd_operacao_estoque,\n        dt_movimento_estoque,\n        movimento_estoque.cd_local_estoque,\n        ds_local_estoque,\n        movimento_estoque.cd_estabelecimento,\n        nm_fantasia_estab,\n        movimento_estoque.nr_documento,\n        movimento_estoque.cd_material,\n        --case when ds_familia is null then 'Sem classificação' else ds_familia end,\n        material.cd_classe_material,\n        ds_classe_material,\n        ds_subgrupo_material,\n        ds_grupo_material,\n        ds_fabricante,\n        ds_reduzida,\n        ds_operacao,\n        ie_entrada_saida,\n        cd_acao\n)\nSELECT \n    TO_CHAR(A.DT_MOVIMENTO_ESTOQUE,'YYYY-MM-DD') AS DATA_MOVIMENTO\n    ,A.CD_LOCAL_ESTOQUE\n    ,A.DS_LOCAL_ESTOQUE\n    ,A.CD_ESTABELECIMENTO\n    ,A.nm_fantasia_estab                         AS DS_ESTABELECIMENTO\n    ,A.CD_MATERIAL\n    ,A.DS_REDUZIDA                                AS DS_MATERIAL_SHORT\n    ,A.CD_CLASSE_MATERIAL\n    ,A.CLASSE_MATERIAL                           AS DS_CLASSE_MATERIAL\n    ,A.cd_operacao_estoque\n    ,A.DS_OPERACAO\n    ,A.QT_MOVIMENTO\n    ,CASE \n        WHEN A.CD_ACAO = 2 THEN A.VALOR_MOVIMENTO * -1\n        ELSE A.VALOR_MOVIMENTO\n     END VL_MOVIMENTO   \nFROM AUX A\nWHERE TO_CHAR(TRUNC(A.DT_MOVIMENTO_ESTOQUE,'MM'),'YYYY-MM-DD') = TO_CHAR(TRUNC(SYSDATE,'MM'),'YYYY-MM-DD')",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOQUE"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO_ESTOQUE"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO"
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO"
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque ITG - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque Delphi",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque ITB - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque ITG - Smart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque IOF - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque ITB - Smart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_IOF_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque OFTALMOCLIN - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque IOF - Smart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque HOSL - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque OFTALMOCLIN - Smart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"DATA": {
						"type": "String",
						"defaultValue": "2021-05-01"
					}
				},
				"folder": {
					"name": "Estoque"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nota Fiscal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline que extrai informações de notas fiscais das unidades para compor relatório ao setor de FP&A.",
				"activities": [
					{
						"name": "Nota Fiscal Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select obter_cgc_estabelecimento(n.cd_estabelecimento) as CNPJ,\nobter_nome_estab(n.cd_estabelecimento) as DS_UNIDADE ,\nn.DT_EMISSAO,\ndt_entrada_saida as dt_entrada_saida,\nn.nr_sequencia, \nn.nr_nota_fiscal, \ni.cd_conta_contabil, \nc.ds_conta_contabil, \nobter_nome_pj(n.cd_cgc) as fornecedor,\t\nsum(i.vl_total_item_nf) as vl_total_item_nf,\nSUBSTR(n.ds_observacao,1,100) AS ds_observacao\nfrom nota_fiscal n,\nnota_fiscal_item i,\nconta_contabil c,\noperacao_nota a\nwhere n.nr_sequencia = i.nr_sequencia\nand i.cd_conta_contabil = c.cd_conta_contabil (+)\nand n.cd_operacao_nf = a.cd_operacao_nf (+)\nand a.ie_operacao_fiscal = 'E'\nand n.ie_situacao = 1\ngroup by n.cd_estabelecimento,\nn.cd_estabelecimento ,\nn.DT_EMISSAO,\ndt_entrada_saida,\nn.nr_sequencia, \nn.nr_nota_fiscal, \ni.cd_conta_contabil, \nc.ds_conta_contabil, \nn.cd_cgc,\t\nn.ds_observacao\norder by 5",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select obter_cgc_estabelecimento(n.cd_estabelecimento) as CNPJ,\nobter_nome_estab(n.cd_estabelecimento) as DS_UNIDADE ,\nn.DT_EMISSAO,\ndt_entrada_saida as dt_entrada_saida,\nn.nr_sequencia, \nn.nr_nota_fiscal, \ni.cd_conta_contabil, \nc.ds_conta_contabil, \nobter_nome_pj(n.cd_cgc) as fornecedor,\t\nsum(i.vl_total_item_nf) as vl_total_item_nf,\nSUBSTR(n.ds_observacao,1,100) AS ds_observacao\nfrom nota_fiscal n,\nnota_fiscal_item i,\nconta_contabil c,\noperacao_nota a\nwhere n.nr_sequencia = i.nr_sequencia\nand i.cd_conta_contabil = c.cd_conta_contabil (+)\nand n.cd_operacao_nf = a.cd_operacao_nf (+)\nand a.ie_operacao_fiscal = 'E'\nand n.ie_situacao = 1\ngroup by n.cd_estabelecimento,\nn.cd_estabelecimento ,\nn.DT_EMISSAO,\ndt_entrada_saida,\nn.nr_sequencia, \nn.nr_nota_fiscal, \ni.cd_conta_contabil, \nc.ds_conta_contabil, \nn.cd_cgc,\t\nn.ds_observacao\norder by 5",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal Itaigara",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal Itabuna",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_INOB_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal IOF",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_IOF_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Fiscal"
				},
				"annotations": [],
				"lastPublishTime": "2020-02-10T20:56:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Orientacao e Conversao Cirurgicas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline utilizado para alimentar tabelas do SMC:\n\n",
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Orientacoes Cirurgicas Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- ORIENTAÇÃO\n\nSELECT Z.DT_AGENDA, Z.CD_AGENDA, Z.CD_PESSOA_FISICA, Z.NM_PESSOA_FISICA,Z.IE_LADO,Z.AUTORIZACAO AS DS_AUTORIZACAO,Z.PROCEDIMENTO, Z.CNPJ, Z.DS_UNIDADE, Z.BASE, Z.NR_SEQ_PROC_INTERNO,\n\n(SELECT COUNT(*)\nFROM AGENDA_PACIENTE AB,\n     PESSOA_FISICA PF_1,\n     AGENDA AG_1\nWHERE AB.CD_PESSOA_FISICA = PF_1.CD_PESSOA_FISICA\nAND AB.CD_AGENDA = AG_1.CD_AGENDA\nAND AB.CD_AGENDA NOT IN (4442,4443,4444,4445,4513,4563,4553,5273,4464,4465,4466,4467,4552,3043,11)\nAND AB.CD_PESSOA_FISICA = Z.CD_PESSOA_FISICA\nAND AG_1.CD_TIPO_AGENDA = 1\nAND AB.DT_AGENDA > Z.DT_AGENDA) AS INDICADOR_CIRURGIA\n\nFROM\n\n(SELECT MAX(A.DT_AGENDA) AS DT_AGENDA, A.CD_AGENDA, A.CD_PESSOA_FISICA, PF.NM_PESSOA_FISICA, \nOBTER_VALOR_DOMINIO(1227,A.IE_AUTORIZACAO) AS AUTORIZACAO, \nOBTER_DESC_PROCEDIMENTO(A.CD_PROCEDIMENTO, A.IE_ORIGEM_PROCED) AS PROCEDIMENTO,\n\nA.IE_LADO,\nES.CD_CGC AS CNPJ,\nES.NM_FANTASIA_ESTAB AS DS_UNIDADE,\n'Tasy Delphi' as BASE,\nA.NR_SEQ_PROC_INTERNO\n\nFROM AGENDA_PACIENTE A,\n     PESSOA_FISICA PF,\n     AGENDA AG,\n     ESTABELECIMENTO ES,\n     EMPRESA EM\nWHERE A.CD_PESSOA_FISICA = PF.CD_PESSOA_FISICA\nAND A.CD_AGENDA = AG.CD_AGENDA\nAND AG.CD_ESTABELECIMENTO = ES.CD_ESTABELECIMENTO\nAND ES.CD_EMPRESA = ES.CD_EMPRESA\nAND A.CD_AGENDA IN (4442,4443,4444,4445,4513,4563,4553,5273,4464,4465,4466,4467,4552,3043,11)\nAND AG.CD_TIPO_AGENDA = 1\nGROUP BY A.CD_PESSOA_FISICA, PF.NM_PESSOA_FISICA,A.IE_LADO, OBTER_VALOR_DOMINIO(1227,A.IE_AUTORIZACAO), OBTER_DESC_PROCEDIMENTO(A.CD_PROCEDIMENTO, A.IE_ORIGEM_PROCED),\nES.CD_CGC, ES.NM_FANTASIA_ESTAB, A.CD_AGENDA, A.NR_SEQ_PROC_INTERNO\nORDER BY 1 desc) Z \nWHERE Z.DT_AGENDA BETWEEN SYSDATE - 365 AND SYSDATE + 365",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DT_AGENDA"
										},
										"sink": {
											"name": "DT_AGENDA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CD_AGENDA"
										},
										"sink": {
											"name": "CD_AGENDA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NM_PESSOA_FISICA"
										},
										"sink": {
											"name": "NM_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_AUTORIZACAO"
										},
										"sink": {
											"name": "DS_AUTORIZACAO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_LADO"
										},
										"sink": {
											"name": "IE_LADO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PROCEDIMENTO"
										},
										"sink": {
											"name": "PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CNPJ"
										},
										"sink": {
											"name": "CNPJ",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_UNIDADE"
										},
										"sink": {
											"name": "DS_UNIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BASE"
										},
										"sink": {
											"name": "BASE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INDICADOR_CIRURGIA"
										},
										"sink": {
											"name": "INDICADOR_CIRURGIA",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Orientacao_Cirurgia_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamento Cirurgico Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- AGENDA CIRURGICA\n\nSELECT\nAB.DT_AGENDA, AB.CD_AGENDA,\nAB.CD_PESSOA_FISICA, \nPF_1.NM_PESSOA_FISICA, \nOBTER_VALOR_DOMINIO(1227,AB.IE_AUTORIZACAO) AS DS_AUTORIZACAO, \nOBTER_DESC_PROCEDIMENTO(AB.CD_PROCEDIMENTO, AB.IE_ORIGEM_PROCED) AS PROCEDIMENTO,\nAB.NR_CIRURGIA,\nAB.IE_LADO,\nAB.CD_CONVENIO,\nES.NM_FANTASIA_ESTAB AS DS_UNIDADE,\nES.CD_CGC AS CNPJ,\n'Tasy Delphi' as BASE,\nAB.NR_SEQ_PROC_INTERNO\nFROM AGENDA_PACIENTE AB,\n     PESSOA_FISICA PF_1,\n     AGENDA AG_1,\n     ESTABELECIMENTO ES,\n     EMPRESA EM\nWHERE AB.CD_PESSOA_FISICA = PF_1.CD_PESSOA_FISICA\nAND AB.CD_AGENDA = AG_1.CD_AGENDA\nAND AG_1.CD_ESTABELECIMENTO = ES.CD_ESTABELECIMENTO\nAND AB.DT_AGENDA BETWEEN SYSDATE - 365 AND SYSDATE + 365\nAND ES.CD_EMPRESA = EM.CD_EMPRESA\nAND AB.CD_AGENDA NOT IN (4442,4443,4444,4445,4513,4563,4553,5273,4464,4465,4466,4467,4552,3043,11)\nAND AG_1.CD_TIPO_AGENDA = 1\nORDER BY 1",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento_Cirurgia_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Orientacoes Cirurgicas HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- ORIENTAÇÃO\n\nSELECT Z.DT_AGENDA, Z.CD_AGENDA, Z.CD_PESSOA_FISICA, Z.NM_PESSOA_FISICA,Z.IE_LADO,Z.AUTORIZACAO AS DS_AUTORIZACAO,Z.PROCEDIMENTO, Z.CNPJ, Z.DS_UNIDADE, Z.BASE, Z.NR_SEQ_PROC_INTERNO,\n\n(SELECT COUNT(*)\nFROM AGENDA_PACIENTE AB,\n     PESSOA_FISICA PF_1,\n     AGENDA AG_1\nWHERE AB.CD_PESSOA_FISICA = PF_1.CD_PESSOA_FISICA\nAND AB.CD_AGENDA = AG_1.CD_AGENDA\nAND AB.CD_AGENDA NOT IN (549,802,659,776,665,607,663,666,664,662,660,661,609)\nAND AB.CD_PESSOA_FISICA = Z.CD_PESSOA_FISICA\nAND AG_1.CD_TIPO_AGENDA = 1\nAND AB.DT_AGENDA > Z.DT_AGENDA) AS INDICADOR_CIRURGIA\n\nFROM\n\n(SELECT MAX(A.DT_AGENDAMENTO) AS DT_AGENDA, A.CD_AGENDA, A.CD_PESSOA_FISICA, PF.NM_PESSOA_FISICA, \nOBTER_VALOR_DOMINIO(1227,A.IE_AUTORIZACAO) AS AUTORIZACAO, \nOBTER_DESC_PROCEDIMENTO(A.CD_PROCEDIMENTO, A.IE_ORIGEM_PROCED) AS PROCEDIMENTO,\nA.IE_LADO,\nES.CD_CGC AS CNPJ,\nES.NM_FANTASIA_ESTAB AS DS_UNIDADE,\n'Tasy HTML' as BASE,\nA.NR_SEQ_PROC_INTERNO\n\nFROM AGENDA_PACIENTE A,\n     PESSOA_FISICA PF,\n     AGENDA AG,\n     ESTABELECIMENTO ES,\n     EMPRESA EM\nWHERE A.CD_PESSOA_FISICA = PF.CD_PESSOA_FISICA\nAND A.CD_AGENDA = AG.CD_AGENDA\nAND AG.CD_ESTABELECIMENTO = ES.CD_ESTABELECIMENTO\nAND ES.CD_EMPRESA = ES.CD_EMPRESA\nAND A.CD_AGENDA IN (549,802,659,776,665,607,663,666,664,662,660,661,609)\nAND AG.CD_TIPO_AGENDA = 1\nGROUP BY A.CD_PESSOA_FISICA, PF.NM_PESSOA_FISICA,A.IE_LADO, OBTER_VALOR_DOMINIO(1227,A.IE_AUTORIZACAO), OBTER_DESC_PROCEDIMENTO(A.CD_PROCEDIMENTO, A.IE_ORIGEM_PROCED),\nES.CD_CGC, ES.NM_FANTASIA_ESTAB, A.CD_AGENDA, A.NR_SEQ_PROC_INTERNO\nORDER BY 1 desc) Z \nWHERE Z.DT_AGENDA BETWEEN SYSDATE - 365 AND SYSDATE + 365",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Orientacao_Cirurgia_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamento Cirurgico HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- AGENDA CIRURGICA\n\nSELECT\nAB.DT_AGENDA, AB.CD_AGENDA,\nAB.CD_PESSOA_FISICA, \nPF_1.NM_PESSOA_FISICA, \nOBTER_VALOR_DOMINIO(1227,AB.IE_AUTORIZACAO) AS DS_AUTORIZACAO, \nOBTER_DESC_PROCEDIMENTO(AB.CD_PROCEDIMENTO, AB.IE_ORIGEM_PROCED) AS PROCEDIMENTO,\nAB.NR_CIRURGIA,\nAB.IE_LADO,\nAB.CD_CONVENIO,\nES.NM_FANTASIA_ESTAB AS DS_UNIDADE,\nES.CD_CGC AS CNPJ,\n'Tasy HTML' as BASE,\nAB.NR_SEQ_PROC_INTERNO\nFROM AGENDA_PACIENTE AB,\n     PESSOA_FISICA PF_1,\n     AGENDA AG_1,\n     ESTABELECIMENTO ES,\n     EMPRESA EM\nWHERE AB.CD_PESSOA_FISICA = PF_1.CD_PESSOA_FISICA\nAND AB.CD_AGENDA = AG_1.CD_AGENDA\nAND AG_1.CD_ESTABELECIMENTO = ES.CD_ESTABELECIMENTO\nAND AB.DT_AGENDA BETWEEN SYSDATE - 365 AND SYSDATE + 365\nAND ES.CD_EMPRESA = EM.CD_EMPRESA\nAND AB.CD_AGENDA NOT IN (549,802,659,776,665,607,663,666,664,662,660,661,609)\nAND AG_1.CD_TIPO_AGENDA = 1\nORDER BY 1",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento_Cirurgia_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Cirurgias"
				},
				"annotations": [],
				"lastPublishTime": "2020-02-12T14:12:16Z"
			},
			"dependsOn": []
		}
	]
}