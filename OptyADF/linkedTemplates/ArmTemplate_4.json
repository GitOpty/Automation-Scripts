{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "OptyADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DM_ProdDiaria_TASY_HTML')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP_ODS_TASY_PROD_DIARIA",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SP_TASY_RAW_PRODUCAO_DIARIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_ODS_TASY_PROD_DIARIA"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP_TASY_RAW_PRODUCAO_DIARIA",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_TASY_RAW_PRODUCAO_DIARIA"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP_PROCESSA_DATAMART_PROD_DIARIA_TASY_CLOUD",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SP_ODS_TASY_PROD_DIARIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_PROCESSA_DATAMART_PROD_DIARIA_TASY_CLOUD"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Warehouse/3_Pipeline_Datamart/datamart_ProducaoDiaria"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_ProdDiaria_TASY_ONPREMISES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP_TASY_ONPREMISES_RAW_PRODUCAO_DIARIA",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_TASY_ONPREMISES_RAW_PRODUCAO_DIARIA"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP_ODS_TASY_ONPREMISES_PROD_DIARIA",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SP_TASY_ONPREMISES_RAW_PRODUCAO_DIARIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_ODS_TASY_ONPREMISES_PROD_DIARIA"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP_PROCESSA_DATAMART_PROD_DIARIA_TASY_ONPREMISES",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SP_ODS_TASY_ONPREMISES_PROD_DIARIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_PROCESSA_DATAMART_PROD_DIARIA_TASY_ONPREMISES"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Warehouse/3_Pipeline_Datamart/datamart_ProducaoDiaria"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_ProdDiaria_TasyV2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline criado para gerar informações paliativo",
				"activities": [
					{
						"name": "SP_ODS_TASY_PROD_DIARIA_V2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_ODS_TASY_PROD_DIARIA_V2"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP_INSERT_PRODIARIA_DATAMART",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SP_ODS_TASY_PROD_DIARIA_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Delete Datamart Tasy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_INSERT_PRODIARIA_DATAMART"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete Datamart Tasy",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "DELETE FROM DM.tbl_fprodiaria   \nWHERE ESTABELECIMENTO IN (1,2)"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Warehouse/Ajuste DW Tasy/Antigo"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Five9')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG DW FIVE9_ESP0001",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SQL_DESTINO",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "WITH ESP0001 AS (\n\n    SELECT \nCAST(ID_LIGACAO AS VARCHAR(255)) AS ID_LIGACAO\n,CAST(DATA AS VARCHAR(255)) AS DATA\n,CAST(REGISTRO_DATA_HORA AS VARCHAR(255)) AS REGISTRO_DATA_HORA\n,CAST(CAMPANHA AS VARCHAR(255)) AS CAMPANHA\n,CAST(COMPETENCIA AS VARCHAR(255)) AS COMPETENCIA\n,CAST(AGENTE AS VARCHAR(255)) AS AGENTE\n,CAST(NOME_AGENTE AS VARCHAR(255)) AS NOME_AGENTE\n,CAST(POSICAO AS VARCHAR(255)) AS POSICAO\n,CAST(ANI AS VARCHAR(255)) AS ANI\n,CAST(NOME_CLIENTE AS VARCHAR(255)) AS NOME_CLIENTE\n,CAST(DNIS AS VARCHAR(255)) AS DNIS\n,CAST(TEMPO_LIGACAO AS VARCHAR(255)) AS TEMPO_LIGACAO\n,CAST(TEMPO_FATURAMENTO_ARRED AS VARCHAR(255)) AS TEMPO_FATURAMENTO_ARRED\n,CAST(TEMPO_IVR AS VARCHAR(255)) AS TEMPO_IVR\n,CAST(CAMINHO_IVR AS VARCHAR(255)) AS CAMINHO_IVR\n,CAST(TEMPO_ESPERA_FILA AS VARCHAR(255)) AS TEMPO_ESPERA_FILA\n,CAST(TEMPO_TOQUE AS VARCHAR(255)) AS TEMPO_TOQUE\n,CAST(TEMPO_CONVERSA AS VARCHAR(255)) AS TEMPO_CONVERSA\n,CAST(TEMPO_RETENCAO AS VARCHAR(255)) AS TEMPO_RETENCAO\n,CAST(TEMPO_ESPERA AS VARCHAR(255)) AS TEMPO_ESPERA\n,CAST(TEMPO_ABANDONAR AS VARCHAR(255)) AS TEMPO_ABANDONAR\n,CAST(TEMPO_TOTAL_FILA AS VARCHAR(255)) AS TEMPO_TOTAL_FILA\n,CAST(AP_TEMPO_ATIVIDADE_LIGACAO AS VARCHAR(255)) AS AP_TEMPO_ATIVIDADE_LIGACAO\n,CAST(TRANSFERENCIAS AS VARCHAR(255)) AS TRANSFERENCIAS\n,CAST(CONFERENCIAS AS VARCHAR(255)) AS CONFERENCIAS\n,CAST(RETENCOES AS VARCHAR(255)) AS RETENCOES\n,CAST(ABANDONADA AS VARCHAR(255)) AS ABANDONADA\n,CAST(GRAVACOES AS VARCHAR(255)) AS GRAVACOES\n,CAST(TIPO_CAMPANHA AS VARCHAR(255)) AS TIPO_CAMPANHA\n,CAST(TIPO_LIGACAO AS VARCHAR(255)) AS TIPO_LIGACAO\n,CAST(GRUPO_AGENTES AS VARCHAR(255)) AS GRUPO_AGENTES\n\n    FROM STG.FIVE9_ESP0001\n)\n\n\nMERGE\t           \n\tdw.FIVE9_ESP0001 AS destino           \nUSING            \n\tESP0001 AS origem           \n           \n    ON(        \n        destino.id_ligacao = origem.id_ligacao        \n          )        \n       \n      \n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \ndestino.DATA\t\t\t\t\t=origem.DATA,\ndestino.REGISTRO_DATA_HORA\t\t=origem.REGISTRO_DATA_HORA,\ndestino.CAMPANHA\t\t\t\t=origem.CAMPANHA,\ndestino.COMPETENCIA\t\t\t\t=origem.COMPETENCIA,\ndestino.AGENTE\t\t\t\t\t=origem.AGENTE,\ndestino.NOME_AGENTE\t\t\t\t=origem.NOME_AGENTE,\ndestino.POSICAO\t\t\t\t\t=origem.POSICAO,\ndestino.ANI\t\t\t\t\t\t=origem.ANI,\ndestino.NOME_CLIENTE\t\t\t=origem.NOME_CLIENTE,\ndestino.DNIS\t\t\t\t\t=origem.DNIS,\ndestino.TEMPO_LIGACAO\t\t\t=origem.TEMPO_LIGACAO,\ndestino.TEMPO_FATURAMENTO_ARRED\t=origem.TEMPO_FATURAMENTO_ARRED,\ndestino.TEMPO_IVR\t\t\t\t=origem.TEMPO_IVR,\ndestino.CAMINHO_IVR\t\t\t\t=origem.CAMINHO_IVR,\ndestino.TEMPO_ESPERA_FILA\t\t=origem.TEMPO_ESPERA_FILA,\ndestino.TEMPO_TOQUE\t\t\t\t=origem.TEMPO_TOQUE,\ndestino.TEMPO_CONVERSA\t\t\t=origem.TEMPO_CONVERSA,\ndestino.TEMPO_RETENCAO\t\t\t=origem.TEMPO_RETENCAO,\ndestino.TEMPO_ESPERA\t\t\t=origem.TEMPO_ESPERA,\ndestino.TEMPO_ABANDONAR\t\t\t=origem.TEMPO_ABANDONAR,\ndestino.TEMPO_TOTAL_FILA\t\t\t=origem.TEMPO_TOTAL_FILA,\ndestino.AP_TEMPO_ATIVIDADE_LIGACAO\t=origem.AP_TEMPO_ATIVIDADE_LIGACAO,\ndestino.TRANSFERENCIAS\t\t\t\t=origem.TRANSFERENCIAS,\ndestino.CONFERENCIAS\t\t\t\t=origem.CONFERENCIAS,\ndestino.RETENCOES\t\t\t\t\t=origem.RETENCOES,\ndestino.ABANDONADA\t\t\t\t\t=origem.ABANDONADA,\ndestino.GRAVACOES\t\t\t\t\t=origem.GRAVACOES,\ndestino.TIPO_CAMPANHA\t\t\t\t=origem.TIPO_CAMPANHA,\ndestino.TIPO_LIGACAO\t\t\t\t=origem.TIPO_LIGACAO,\ndestino.GRUPO_AGENTES\t\t\t\t=origem.GRUPO_AGENTES\n  \n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.id_ligacao\t\n,origem.DATA\n,origem.REGISTRO_DATA_HORA\n,origem.CAMPANHA\n,origem.COMPETENCIA\n,origem.AGENTE\n,origem.NOME_AGENTE\n,origem.POSICAO\n,origem.ANI\n,origem.NOME_CLIENTE\n,origem.DNIS\n,origem.TEMPO_LIGACAO\n,origem.TEMPO_FATURAMENTO_ARRED\n,origem.TEMPO_IVR\n,origem.CAMINHO_IVR\n,origem.TEMPO_ESPERA_FILA\n,origem.TEMPO_TOQUE\n,origem.TEMPO_CONVERSA\n,origem.TEMPO_RETENCAO\n,origem.TEMPO_ESPERA\n,origem.TEMPO_ABANDONAR\n,origem.TEMPO_TOTAL_FILA\n,origem.AP_TEMPO_ATIVIDADE_LIGACAO\n,origem.TRANSFERENCIAS\n,origem.CONFERENCIAS\n,origem.RETENCOES\n,origem.ABANDONADA\n,origem.GRAVACOES\n,origem.TIPO_CAMPANHA\n,origem.TIPO_LIGACAO\n,origem.GRUPO_AGENTES\n);        "
								}
							]
						}
					},
					{
						"name": "STG DW FIVE9_ESP0002",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "STG DW FIVE9_ESP0001",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SQL_DESTINO",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "MERGE\t           \n\tdw.FIVE9_ESP0002 AS destino           \nUSING            \n\tstg.FIVE9_ESP0002 AS origem           \n           \n    ON(        \n        destino.agente = origem.agente \n\t\tAND destino.REGISTRO_HORA_DATA_ACESSO = origem.REGISTRO_HORA_DATA_ACESSO\n\t\tAND destino.REGISTRO_HORA_DATA_SAIDA = origem.REGISTRO_HORA_DATA_SAIDA\n          )        \n       \n      \n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \ndestino.DATA_HORA\t\t\t\t\t=origem.DATA_HORA,\ndestino.NOME_AGENTE\t\t\t\t\t=origem.NOME_AGENTE,\ndestino.GRUPO_AGENTES\t\t\t\t=origem.GRUPO_AGENTES,\ndestino.REGISTRO_HORA_DATA_SAIDA\t=origem.REGISTRO_HORA_DATA_SAIDA,\ndestino.TEMPO_LOGIN\t\t\t\t\t=origem.TEMPO_LOGIN,\ndestino.DATA\t\t\t\t\t\t=origem.DATA\n  \n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.DATA_HORA\n,origem.AGENTE\n,origem.NOME_AGENTE\n,origem.GRUPO_AGENTES\n,origem.REGISTRO_HORA_DATA_ACESSO\n,origem.REGISTRO_HORA_DATA_SAIDA\n,origem.TEMPO_LOGIN\n,origem.DATA\n);        "
								}
							]
						}
					},
					{
						"name": "STG DW FIVE9_ESP0003",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "STG DW FIVE9_ESP0002",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SQL_DESTINO",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "WITH ESP0003 AS (\n    SELECT DISTINCT\n        A.*\n    FROM STG.FIVE9_ESP0003 A    \n)\n\n\n\nMERGE\t           \n\tdw.FIVE9_ESP0003 AS destino           \nUSING            \n\tESP0003 AS origem           \n           \n    ON(        \n        destino.id_ligacao = origem.id_ligacao \n          )        \n       \n      \n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \ndestino.ID_LIGACAO\t\t\t\t\t\t\t=origem.ID_LIGACAO,\ndestino.CAMPANHA\t\t\t\t\t\t\t=origem.CAMPANHA,\ndestino.TIPO_LIGACAO\t\t\t\t\t\t=origem.TIPO_LIGACAO,\ndestino.AGENTE\t\t\t\t\t\t\t\t=origem.AGENTE,\ndestino.NOME_AGENTE\t\t\t\t\t\t\t=origem.NOME_AGENTE,\ndestino.POSICAO\t\t\t\t\t\t\t\t=origem.POSICAO,\ndestino.ANI\t\t\t\t\t\t\t\t\t=origem.ANI,\ndestino.TEMPO_LIGACAO\t\t\t\t\t\t=origem.TEMPO_LIGACAO,\ndestino.TEMPO_FATURAMENTO_ARRENDONDADO\t\t=origem.TEMPO_FATURAMENTO_ARRENDONDADO,\ndestino.TEMPO_RETENCAO\t\t\t\t\t\t=origem.TEMPO_RETENCAO,\ndestino.TEMPO_ESPERA\t\t\t\t\t\t=origem.TEMPO_ESPERA,\ndestino.APÓS_TEMPO_ATIVIDADE_LIGACAO\t\t=origem.APÓS_TEMPO_ATIVIDADE_LIGACAO,\ndestino.TRANSFERENCIAS\t\t\t\t\t\t=origem.TRANSFERENCIAS,\ndestino.CONFERENCIAS\t\t\t\t\t\t=origem.CONFERENCIAS,\ndestino.ABANDONADA\t\t\t\t\t\t\t=origem.ABANDONADA,\ndestino.DATA\t\t\t\t\t\t\t\t=origem.DATA,\ndestino.HORA\t\t\t\t\t\t\t\t=origem.HORA,\ndestino.COMPETENCIA\t\t\t\t\t\t\t=origem.COMPETENCIA,\ndestino.TEMPO_CONVERSA\t\t\t\t\t\t=origem.TEMPO_CONVERSA\n  \n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.ID_LIGACAO\n,origem.CAMPANHA\n,origem.TIPO_LIGACAO\n,origem.AGENTE\n,origem.NOME_AGENTE\n,origem.POSICAO\n,origem.ANI\n,origem.TEMPO_LIGACAO\n,origem.TEMPO_FATURAMENTO_ARRENDONDADO\n,origem.TEMPO_RETENCAO\n,origem.TEMPO_ESPERA\n,origem.APÓS_TEMPO_ATIVIDADE_LIGACAO\n,origem.TRANSFERENCIAS\n,origem.CONFERENCIAS\n,origem.ABANDONADA\n,origem.DATA\n,origem.HORA\n,origem.COMPETENCIA\n,origem.TEMPO_CONVERSA\n\n);        \n"
								}
							]
						}
					},
					{
						"name": "STG DW FIVE9_ESP0004",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "STG DW FIVE9_ESP0003",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SQL_DESTINO",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "MERGE\t           \n\tdw.FIVE9_ESP0004 AS destino           \nUSING            \n\tstg.FIVE9_ESP0004 AS origem           \n           \n    ON(        \ndestino.CAMPANHA\t\t\t\t\t=origem.CAMPANHA\t\t\tAND\ndestino.TIPO_LIGACAO\t\t\t\t=origem.TIPO_LIGACAO\t\tAND\ndestino.AGENTE\t\t\t\t\t\t=origem.AGENTE\t\t\t\tAND\ndestino.NOME_AGENTE\t\t\t\t\t=origem.NOME_AGENTE\t\t\tAND\ndestino.POSICAO\t\t\t\t\t\t=origem.POSICAO\t\t\t\tAND\ndestino.ANI\t\t\t\t\t\t\t=origem.ANI\t\t\t\t\tAND\ndestino.DNIS\t\t\t\t\t\t=origem.DNIS\t\t\t\tAND\ndestino.TEMPO_LIGACAO\t\t\t\t=origem.TEMPO_LIGACAO\t\tAND\ndestino.TEMPO_ESPERA_FILA\t\t\t=origem.TEMPO_ESPERA_FILA\tAND\ndestino.TEMPO_CONVERSA\t\t\t\t=origem.TEMPO_CONVERSA\t\tAND\ndestino.TEMPO_ESPERA\t\t\t\t=origem.TEMPO_ESPERA\t\tAND\ndestino.ABANDONADA\t\t\t\t\t=origem.ABANDONADA\t\t\tAND\ndestino.DATA\t\t\t\t\t\t=origem.DATA\t\t\t\tAND\ndestino.HORA\t\t\t\t\t\t=origem.HORA\n          )        \n       \n      \n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \ndestino.CAMPANHA\t\t\t\t\t=origem.CAMPANHA,\ndestino.TIPO_LIGACAO\t\t\t\t=origem.TIPO_LIGACAO,\ndestino.AGENTE\t\t\t\t\t\t=origem.AGENTE,\ndestino.NOME_AGENTE\t\t\t\t\t=origem.NOME_AGENTE,\ndestino.POSICAO\t\t\t\t\t\t=origem.POSICAO,\ndestino.ANI\t\t\t\t\t\t\t=origem.ANI,\ndestino.DNIS\t\t\t\t\t\t=origem.DNIS,\ndestino.TEMPO_LIGACAO\t\t\t\t=origem.TEMPO_LIGACAO,\ndestino.TEMPO_ESPERA_FILA\t\t\t=origem.TEMPO_ESPERA_FILA,\ndestino.TEMPO_CONVERSA\t\t\t\t=origem.TEMPO_CONVERSA,\ndestino.TEMPO_ESPERA\t\t\t\t=origem.TEMPO_ESPERA,\ndestino.ABANDONADA\t\t\t\t\t=origem.ABANDONADA,\ndestino.DATA\t\t\t\t\t\t=origem.DATA,\ndestino.HORA\t\t\t\t\t\t=origem.HORA\n  \n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.CAMPANHA\n,origem.TIPO_LIGACAO\n,origem.AGENTE\n,origem.NOME_AGENTE\n,origem.POSICAO\n,origem.ANI\n,origem.DNIS\n,origem.TEMPO_LIGACAO\n,origem.TEMPO_ESPERA_FILA\n,origem.TEMPO_CONVERSA\n,origem.TEMPO_ESPERA\n,origem.ABANDONADA\n,origem.DATA\n,origem.HORA\n);"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Warehouse/Five9"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Kill_Sessions_Sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Kill_Sessions_Sql",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "declare @dsql nvarchar(max)=''\n\nselect @dsql = 'kill ' + cast(session_id as varchar(20)) + ';' from SYS.dm_exec_sessions\n\nwhere LOGIN_NAME = 'OPTY_RO_LOGIN'\n\nexec(@dsql)"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "SP_MAPPING_INDEX",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Kill_Sessions_Sql",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_MAPPING_INDEX]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Limpa Tabelas DW",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "SP_MAPPING_INDEX",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": {
										"value": "TRUNCATE TABLE dw.tbl_AGENDA;\nTRUNCATE TABLE dw.tbl_AGENDA_PACIENTE;\nTRUNCATE TABLE dw.tbl_AGENDA_CONSULTA;\nTRUNCATE TABLE dw.tbl_AGENDA_CLASSIF;\nTRUNCATE TABLE dw.tbl_AGENDA_MOTIVO_CANCELAMENTO;\nTRUNCATE TABLE dw.tbl_AGENDA_PACIENTE_CLASSIF;\nTRUNCATE TABLE dw.tbl_CID_CATEGORIA;\nTRUNCATE TABLE dw.tbl_CID_DOENCA;\nTRUNCATE TABLE dw.tbl_CLASSE_MATERIAL;\nTRUNCATE TABLE dw.tbl_conta_paciente;\nTRUNCATE TABLE dw.tbl_CONTA_PACIENTE_RESUMO;\nTRUNCATE TABLE dw.tbl_convenio;\nTRUNCATE TABLE dw.tbl_CONVENIO_RETORNO;\nTRUNCATE TABLE dw.tbl_CONVENIO_RETORNO_ITEM;\nTRUNCATE TABLE dw.tbl_empresa;\nTRUNCATE TABLE dw.tbl_estabelecimento;\nTRUNCATE TABLE dw.tbl_estrutura_procedimento;\nTRUNCATE TABLE dw.tbl_local_estoque;\nTRUNCATE TABLE dw.tbl_material;\nTRUNCATE TABLE dw.tbl_medico;\nTRUNCATE TABLE dw.tbl_operacao_estoque;\nTRUNCATE TABLE dw.tbl_pessoa_juridica;\nTRUNCATE TABLE dw.tbl_procedencia;\nTRUNCATE TABLE dw.tbl_procedimento;\nTRUNCATE TABLE dw.tbl_setor_atendimento;\nTRUNCATE TABLE dw.tbl_tipo_valor;\nTRUNCATE TABLE dw.tbl_TITULO_RECEBER;\nTRUNCATE TABLE dw.tbl_TITULO_RECEBER_LIQ;\nTRUNCATE TABLE dw.tbl_valor_dominio;",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Procedure_Marca')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Procedure_Marca",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_UPDATETRADEMARKV2",
							"storedProcedureParameters": {
								"CNPJ_FIELDNAME": {
									"value": "cd_cgc_estab",
									"type": "String"
								},
								"INITIALS_FIELDNAME": {
									"value": "SIGLA_UNIDADE",
									"type": "String"
								},
								"MARK_FIELDNAME": {
									"value": "MARCA",
									"type": "String"
								},
								"TABLENAME": {
									"value": "Aging_Baixa_Titulo_Receber",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Contas a receber"
				},
				"annotations": [],
				"lastPublishTime": "2019-09-10T17:22:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Processamento e Armaz')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Processa Prod Diaria",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_PROCESSA_PROD_DIARIA]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Producao Diaria"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reprocessar Datamart Recebimento Tasy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP_REPROCESSA_RECEBIMENTO_DATAMART_TASY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_REPROCESSA_RECEBIMENTO_DATAMART_TASY"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Warehouse/Ajuste DW Tasy/Antigo"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Workflows Requestia')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Extrai informações específicas para serem processadas nos workflows do Office Flow",
				"activities": [
					{
						"name": "Extract CAPEX",
						"description": "Copy NFD tickets to REQUESTIA_CAPEXNFD table, solving timeout in Microsoft Flow that send weekly mail from sergio.queiroz@opty.com.br account",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_EXTRACTCAPEXREQUESTS]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Extract TISS",
						"description": "Copy TISS tickets to specific table, solving timeout in Microsoft Flow that send weekly mail from sergio.queiroz@opty.com.br account",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_EXTRACTTISSREQUESTS]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Start",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Apoio"
				},
				"annotations": [],
				"lastPublishTime": "2019-10-09T15:23:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZSQL_DINAMICO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_destino": {
						"type": "string"
					},
					"tabela_destino": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_destino",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tabela_destino",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZSQL_TB_Agendamentos_Futuros_Unidade')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Retornos"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CD_PESSOA_FISICA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CD_CONVENIO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CNPJ",
						"type": "varchar"
					},
					{
						"name": "DATA_AGENDA",
						"type": "date"
					},
					{
						"name": "HORA_AGENDA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CD_TIPO_AGENDA",
						"type": "varchar"
					},
					{
						"name": "NM_PACIENTE",
						"type": "varchar"
					},
					{
						"name": "DS_PROCEDIMENTO_PRINC",
						"type": "varchar"
					},
					{
						"name": "DS_PROCEDIMENTO_ADIC",
						"type": "varchar"
					},
					{
						"name": "IE_QUANTIDADE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NM_USUARIO",
						"type": "varchar"
					},
					{
						"name": "MEDICO",
						"type": "varchar"
					},
					{
						"name": "SIGLA_UNIDADE",
						"type": "varchar"
					},
					{
						"name": "MARCA",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Agendamentos_Futuros_Unidade"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZSQL_TB_NC_AgentesPorDia')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Nexcore/Azure"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Usuario",
						"type": "varchar"
					},
					{
						"name": "Intervalo",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Atendidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recusas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recebidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Internas_Recebidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Transferencias",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Efetuadas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Efetuadas_Tratados",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Taxa_de_Contato",
						"type": "varchar"
					},
					{
						"name": "Tempo_Atendidas",
						"type": "varchar"
					},
					{
						"name": "Tempo_Internas_Recebidas",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Efetuadas",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Medio_Falado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Total_Falado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Toque_Agente",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Toque_Cliente",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Pausa",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Estouro",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Disponivel",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Indisponivel",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Logado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Deslogado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Falado_x_Logado",
						"type": "time",
						"scale": 7
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Nexcore_AgentesPorDia]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZSQL_TB_NC_AgentesPorDia_Temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Nexcore/Azure"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Usuario",
						"type": "varchar"
					},
					{
						"name": "Intervalo",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Atendidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recusas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recebidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Internas_Recebidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Transferencias",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Efetuadas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Efetuadas_Tratados",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Taxa_de_Contato",
						"type": "varchar"
					},
					{
						"name": "Tempo_Atendidas",
						"type": "varchar"
					},
					{
						"name": "Tempo_Internas_Recebidas",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Efetuadas",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Medio_Falado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Total_Falado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Toque_Agente",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Toque_Cliente",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Pausa",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Estouro",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Disponivel",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Indisponivel",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Logado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Deslogado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Falado_x_Logado",
						"type": "time",
						"scale": 7
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Nexcore_AgentesPorDia_temp]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZSQL_TB_NC_AgentesPorHora')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Nexcore/Azure"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Usuario",
						"type": "varchar"
					},
					{
						"name": "Intervalo",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Atendidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recusas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recebidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Internas_Recebidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Transferencias",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Efetuadas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Efetuadas_Tratados",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Taxa_de_Contato",
						"type": "varchar"
					},
					{
						"name": "Tempo_Atendidas",
						"type": "varchar"
					},
					{
						"name": "Tempo_Internas_Recebidas",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Efetuadas",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Medio_Falado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Total_Falado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Toque_Agente",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Toque_Cliente",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Pausa",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Estouro",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Disponivel",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Indisponivel",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Logado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Deslogado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Falado_x_Logado",
						"type": "time",
						"scale": 7
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Nexcore_AgentesPorHora]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZSQL_TB_NC_AgentesPorHora_Temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Nexcore/Azure"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Usuario",
						"type": "varchar"
					},
					{
						"name": "Intervalo",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Atendidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recusas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recebidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Internas_Recebidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Transferencias",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Efetuadas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Efetuadas_Tratados",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Taxa_de_Contato",
						"type": "varchar"
					},
					{
						"name": "Tempo_Atendidas",
						"type": "varchar"
					},
					{
						"name": "Tempo_Internas_Recebidas",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Efetuadas",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Medio_Falado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Total_Falado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Toque_Agente",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Toque_Cliente",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Pausa",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Estouro",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Disponivel",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Indisponivel",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Logado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Tempo_Deslogado",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Falado_x_Logado",
						"type": "time",
						"scale": 7
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Nexcore_AgentesPorHora_temp]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZSQL_TB_NC_BilheteLigacoes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Tabela Azure SQL Server Procedimentos.dbo.BilheteLigacoes",
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Nexcore/Azure"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DATA",
						"type": "date"
					},
					{
						"name": "HORA",
						"type": "time",
						"scale": 7
					},
					{
						"name": "USUARIO",
						"type": "varchar"
					},
					{
						"name": "TIPO",
						"type": "varchar"
					},
					{
						"name": "ORIGEM",
						"type": "varchar"
					},
					{
						"name": "DESTINO",
						"type": "varchar"
					},
					{
						"name": "STATUS",
						"type": "varchar"
					},
					{
						"name": "CENTRO_DE_CUSTO",
						"type": "varchar"
					},
					{
						"name": "TEMPO_TARIFADO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TEMPO_DECORRIDO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CAMPANHA",
						"type": "varchar"
					},
					{
						"name": "FILA",
						"type": "varchar"
					},
					{
						"name": "UNIQUE_ID",
						"type": "float",
						"precision": 15
					},
					{
						"name": "LINKED_ID",
						"type": "float",
						"precision": 15
					},
					{
						"name": "MARCA",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Nexcore_BilheteLigacoes]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZSQL_TB_NC_BilheteLigacoes_Temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Tabela Azure SQL Server Procedimentos.dbo.BilheteLigacoes",
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Nexcore/Azure"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DATA",
						"type": "date"
					},
					{
						"name": "HORA",
						"type": "time",
						"scale": 7
					},
					{
						"name": "USUARIO",
						"type": "varchar"
					},
					{
						"name": "TIPO",
						"type": "varchar"
					},
					{
						"name": "ORIGEM",
						"type": "varchar"
					},
					{
						"name": "DESTINO",
						"type": "varchar"
					},
					{
						"name": "STATUS",
						"type": "varchar"
					},
					{
						"name": "CENTRO_DE_CUSTO",
						"type": "varchar"
					},
					{
						"name": "TEMPO_TARIFADO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TEMPO_DECORRIDO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CAMPANHA",
						"type": "varchar"
					},
					{
						"name": "FILA",
						"type": "varchar"
					},
					{
						"name": "UNIQUE_ID",
						"type": "float",
						"precision": 15
					},
					{
						"name": "LINKED_ID",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Nexcore_BilheteLigacoes_temp]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZSQL_TB_NC_FilasPorHoras')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Nexcore/Azure"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Fila",
						"type": "varchar"
					},
					{
						"name": "Intervalo",
						"type": "varchar"
					},
					{
						"name": "Atendidas_Ate_NS",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Atendidas_Apos_NS",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Atendidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Abandonos_Ate_NS",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Abandonos_Apos_NS",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Abandonos_Anuncio_Inicial",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Abandonos",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Roteamentos_Timeout",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Roteamentos_Fila_Cheia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Roteamentos_Fila_Vazia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Roteamentos_Fila_Sem_Ags_Disp",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Roteamentos_Caixa_Postal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Roteamentos",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Fora_Horario_Antes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Fora_Horario_Intervalo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Fora_Horario_Depois",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Fora_Horario",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Recebidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Callback_Tratados",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Callback_Nao_Tratados",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Callback",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tempo_Toque",
						"type": "varchar"
					},
					{
						"name": "Tempo_Falado",
						"type": "varchar"
					},
					{
						"name": "Tempo_Medio_Falado",
						"type": "varchar"
					},
					{
						"name": "Tempo_Medio_Pausa_ACW",
						"type": "varchar"
					},
					{
						"name": "Tempo_Medio_Produtivo_AHT",
						"type": "varchar"
					},
					{
						"name": "Nivel_Servico",
						"type": "varchar"
					},
					{
						"name": "Taxa_Atendimento",
						"type": "varchar"
					},
					{
						"name": "Taxa_Abandono",
						"type": "varchar"
					},
					{
						"name": "Tempo_Medio_Espera",
						"type": "varchar"
					},
					{
						"name": "Tempo_Medio_para_Atender",
						"type": "varchar"
					},
					{
						"name": "Tempo_Total_para_Atender",
						"type": "varchar"
					},
					{
						"name": "Tempo_Medio_para_Abandono",
						"type": "varchar"
					},
					{
						"name": "Tempo_Total_para_Abandono",
						"type": "varchar"
					},
					{
						"name": "Tempo_Total_Espera",
						"type": "varchar"
					},
					{
						"name": "Agentes_Logados_Minimo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Agentes_Logados_Maximo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Chamadas_em_Espera_Minimo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Chamadas_em_Espera_Medio",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Chamadas_em_Espera_Maximo",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Nexcore_FilasPorHoras]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZSQL_TB_NC_FilasPorHoras_Temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL_DB_Procedimentos",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Nexcore/Azure"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Fila",
						"type": "varchar"
					},
					{
						"name": "Intervalo",
						"type": "varchar"
					},
					{
						"name": "Atendidas_Ate_NS",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Atendidas_Apos_NS",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Atendidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Abandonos_Ate_NS",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Abandonos_Apos_NS",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Abandonos_Anuncio_Inicial",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Abandonos",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Roteamentos_Timeout",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Roteamentos_Fila_Cheia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Roteamentos_Fila_Vazia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Roteamentos_Fila_Sem_Ags_Disp",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Roteamentos_Caixa_Postal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Roteamentos",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Fora_Horario_Antes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Fora_Horario_Intervalo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Fora_Horario_Depois",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Fora_Horario",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Recebidas",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Callback_Tratados",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Callback_Nao_Tratados",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Callback",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tempo_Toque",
						"type": "varchar"
					},
					{
						"name": "Tempo_Falado",
						"type": "varchar"
					},
					{
						"name": "Tempo_Medio_Falado",
						"type": "varchar"
					},
					{
						"name": "Tempo_Medio_Pausa_ACW",
						"type": "varchar"
					},
					{
						"name": "Tempo_Medio_Produtivo_AHT",
						"type": "varchar"
					},
					{
						"name": "Nivel_Servico",
						"type": "varchar"
					},
					{
						"name": "Taxa_Atendimento",
						"type": "varchar"
					},
					{
						"name": "Taxa_Abandono",
						"type": "varchar"
					},
					{
						"name": "Tempo_Medio_Espera",
						"type": "varchar"
					},
					{
						"name": "Tempo_Medio_para_Atender",
						"type": "varchar"
					},
					{
						"name": "Tempo_Total_para_Atender",
						"type": "varchar"
					},
					{
						"name": "Tempo_Medio_para_Abandono",
						"type": "varchar"
					},
					{
						"name": "Tempo_Total_para_Abandono",
						"type": "varchar"
					},
					{
						"name": "Tempo_Total_Espera",
						"type": "varchar"
					},
					{
						"name": "Agentes_Logados_Minimo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Agentes_Logados_Maximo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Chamadas_em_Espera_Minimo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Chamadas_em_Espera_Medio",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Chamadas_em_Espera_Maximo",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Nexcore_FilasPorHoras_temp]"
				}
			},
			"dependsOn": []
		}
	]
}