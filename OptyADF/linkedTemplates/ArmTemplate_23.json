{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "OptyADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Filas por hora')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Check HOB file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOB_CSV_NC_FilasPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOB file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOB file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOB file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send HOB failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOB não encontrado!",
											"ErrorMessage": "O arquivo HOB\\FilasHora não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOB filas hora",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "Fila",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Anuncio Inicial",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Anuncio_Inicial",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Timeout",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Timeout",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Cheia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Cheia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Vazia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Vazia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Sem Ags. Disp.",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Sem_Ags_Disp",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Caixa Postal",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Caixa_Postal",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Antes",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Antes",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Intervalo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Depois",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Depois",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Total Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Total_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Nao Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Nao_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback",
														"type": "String"
													},
													"sink": {
														"name": "Callback",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Toque",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Pausa ACW",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Pausa_ACW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Produtivo AHT",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Produtivo_AHT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Nivel Servico",
														"type": "String"
													},
													"sink": {
														"name": "Nivel_Servico",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Atendimento",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Atendimento",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Medio",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Medio",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera = Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOB_CSV_NC_FilasPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_FilasPorHoras",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check HOSAG file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOSAG_CSV_NC_FilasPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOSAG file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOSAG file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOSAG file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send HOSAG failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOSAG não encontrado!",
											"ErrorMessage": "O arquivo HOSAG\\FilasHora não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOSAG filas horas",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "Fila",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Anuncio Inicial",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Anuncio_Inicial",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Timeout",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Timeout",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Cheia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Cheia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Vazia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Vazia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Sem Ags. Disp.",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Sem_Ags_Disp",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Caixa Postal",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Caixa_Postal",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Antes",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Antes",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Intervalo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Depois",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Depois",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Total Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Total_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Nao Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Nao_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback",
														"type": "String"
													},
													"sink": {
														"name": "Callback",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Toque",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Pausa ACW",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Pausa_ACW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Produtivo AHT",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Produtivo_AHT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Nivel Servico",
														"type": "String"
													},
													"sink": {
														"name": "Nivel_Servico",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Atendimento",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Atendimento",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Medio",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Medio",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera = Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOSAG_CSV_NC_FilasPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_FilasPorHoras",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check DH file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DH_CSV_NC_FilasPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DH file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check DH file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check DH file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send DH failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\DH não encontrado!",
											"ErrorMessage": "O arquivo DH\\FilasHora não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy DH filas hora",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "Fila",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Anuncio Inicial",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Anuncio_Inicial",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Timeout",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Timeout",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Cheia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Cheia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Vazia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Vazia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Sem Ags. Disp.",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Sem_Ags_Disp",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Caixa Postal",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Caixa_Postal",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Antes",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Antes",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Intervalo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Depois",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Depois",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Total Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Total_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Nao Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Nao_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback",
														"type": "String"
													},
													"sink": {
														"name": "Callback",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Toque",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Pausa ACW",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Pausa_ACW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Produtivo AHT",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Produtivo_AHT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Nivel Servico",
														"type": "String"
													},
													"sink": {
														"name": "Nivel_Servico",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Atendimento",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Atendimento",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Medio",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Medio",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera = Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DH_CSV_NC_FilasPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_FilasPorHoras",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check HOSL file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HOSL_CSV_NC_BilheteLigacoes",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "HOSL file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check HOSL file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check HOSL file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send HOSL failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\HOSL não encontrado!",
											"ErrorMessage": "O arquivo HOSL\\FilasHora não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy HOSL filas hora",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "Fila",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Anuncio Inicial",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Anuncio_Inicial",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Timeout",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Timeout",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Cheia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Cheia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Vazia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Vazia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Sem Ags. Disp.",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Sem_Ags_Disp",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Caixa Postal",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Caixa_Postal",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Antes",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Antes",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Intervalo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Depois",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Depois",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Total Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Total_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Nao Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Nao_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback",
														"type": "String"
													},
													"sink": {
														"name": "Callback",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Toque",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Pausa ACW",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Pausa_ACW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Produtivo AHT",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Produtivo_AHT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Nivel Servico",
														"type": "String"
													},
													"sink": {
														"name": "Nivel_Servico",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Atendimento",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Atendimento",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Medio",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Medio",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera = Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "HOSL_CSV_NC_FilasPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_FilasPorHoras",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check INOB file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "INOB_CSV_NC_FilasPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "INOB file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check INOB file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check INOB file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send INOB failure",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\INOB não encontrado!",
											"ErrorMessage": "O arquivo INOB\\FilasHoras não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy INOB filas horas",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "Fila",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Anuncio Inicial",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Anuncio_Inicial",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Timeout",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Timeout",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Cheia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Cheia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Vazia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Vazia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Sem Ags. Disp.",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Sem_Ags_Disp",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Caixa Postal",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Caixa_Postal",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Antes",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Antes",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Intervalo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Depois",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Depois",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Total Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Total_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Nao Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Nao_Tratados"
													}
												},
												{
													"source": {
														"name": "Callback",
														"type": "String"
													},
													"sink": {
														"name": "Callback",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Toque",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Pausa ACW",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Pausa_ACW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Produtivo AHT",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Produtivo_AHT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Nivel Servico",
														"type": "String"
													},
													"sink": {
														"name": "Nivel_Servico",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Atendimento",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Atendimento",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Medio",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Medio",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera = Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "INOB_CSV_NC_FilasPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_FilasPorHoras",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check CSI file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CSI_CSV_NC_FilasPorHora",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CSI file exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check CSI file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Check CSI file exists').output.exists, \ntrue)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send failure CSI",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": "sergio.queiroz@opty.com.br",
											"Subject": "Arquivo Nexcore\\INOB não encontrado!",
											"ErrorMessage": "O arquivo INOB\\Agentes por Dia não foi encontrado",
											"MasterPipeline": {
												"value": "@{pipeline().Pipeline}",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy CSI FilasPorHora",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Fila",
														"type": "String"
													},
													"sink": {
														"name": "Fila",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Intervalo",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Atendidas Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Atendidas",
														"type": "String"
													},
													"sink": {
														"name": "Atendidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Ate NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Ate_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Apos NS",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Apos_NS",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos Anuncio Inicial",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos_Anuncio_Inicial",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Abandonos",
														"type": "String"
													},
													"sink": {
														"name": "Abandonos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Timeout",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Timeout",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Cheia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Cheia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Vazia",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Vazia",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Fila Sem Ags. Disp.",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Fila_Sem_Ags_Disp",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos Caixa Postal",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos_Caixa_Postal",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Roteamentos",
														"type": "String"
													},
													"sink": {
														"name": "Roteamentos",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Antes",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Antes",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Intervalo",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Intervalo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario Depois",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario_Depois",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Fora Horario",
														"type": "String"
													},
													"sink": {
														"name": "Fora_Horario",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Total Recebidas",
														"type": "String"
													},
													"sink": {
														"name": "Total_Recebidas",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback Nao Tratados",
														"type": "String"
													},
													"sink": {
														"name": "Callback_Nao_Tratados",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Callback",
														"type": "String"
													},
													"sink": {
														"name": "Callback",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Tempo Toque",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Toque",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Falado",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Falado",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Pausa ACW",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Pausa_ACW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Produtivo AHT",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Produtivo_AHT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Nivel Servico",
														"type": "String"
													},
													"sink": {
														"name": "Nivel_Servico",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Atendimento",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Atendimento",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "% Taxa Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Taxa_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Atender",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Atender",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Medio para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Medio_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total para Abandono",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_para_Abandono",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Tempo Total Espera",
														"type": "String"
													},
													"sink": {
														"name": "Tempo_Total_Espera",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Agentes Logados - Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Agentes_Logados_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Minimo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Minimo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera - Medio",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Medio",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Chamadas em Espera = Maximo",
														"type": "String"
													},
													"sink": {
														"name": "Chamadas_em_Espera_Maximo",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "Marca",
														"type": "String"
													},
													"sink": {
														"name": "MARCA",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "CSI_CSV_NC_FilasPorHora",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_TB_NC_FilasPorHoras",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Nexcore"
				},
				"annotations": [],
				"lastPublishTime": "2019-11-13T13:27:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Geral Atendimentos HOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Alimenta as informações das tabelas:\n\nAtendimento_ Unidade \nAgendamento_Unidade\nUsuarios_Unidade\nConsultas_Unidade\nAgendas Unidade\n\nPara extração de relatórios do call center.",
				"activities": [
					{
						"name": "Atendimento HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select pf.cd_pessoa_fisica, pf.nm_pessoa_fisica, \nto_char(at.dt_entrada,'yyyy-mm-dd') as dt_entrada,\nto_char(at.dt_entrada,'hh24:mi:ss') as hr_entrada, \n\nfast_ops.obter_nome_pf(at.cd_medico_resp) as nm_medico, c.cd_convenio, fast_ops.obter_nome_convenio(c.cd_convenio) AS ds_convenio, \nat.nr_atendimento,\ne.cd_cgc as CNPJ,\nnm_fantasia_estab DS_UNIDADE,\nem.nm_razao_social MARCA,\n\nat.cd_procedencia,\np.ds_procedencia,\n'NAO ENCONTRADO' as ID,\n\nto_char(at.dt_entrada,'dd') dia,\nto_char(at.dt_entrada,'mm') mes,\nto_char(at.dt_entrada,'yyyy') ano,\nto_char(at.dt_cancelamento, 'yyyy-mm-dd') dt_cancelamento,\nto_char(at.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\n'Tasy HTML' as BASE\n\nfrom \nfast_ops.atendimento_paciente at, \nfast_ops.pessoa_fisica pf,\nfast_ops.atend_categoria_convenio c,\nfast_ops.procedencia p,\nfast_ops.estabelecimento e,\nfast_ops.empresa em\nwhere at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand at.cd_procedencia = p.cd_procedencia (+)\nand at.nr_atendimento = c.nr_atendimento\nand at.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\n\nAND at.dt_entrada between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Atendimento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Consulta HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Consulta HOB - Azure\n\nselect o.nr_sequencia as nr_sequencia, \nto_char(o.dt_atualizacao,'yyyy-mm-dd') as dt_atualizacao,\nto_char(o.dt_atualizacao,'hh24:mi:ss') as hr_atualizacao, \no.nr_atendimento, \no.cd_medico as cd_medico ,\nfast_ops.obter_nome_pf(o.cd_medico) as nm_medico, \nc.qt_periodo||' '||c.ie_periodo as ds_retorno,  \nsubstr(z.conduta,1,1000) as ds_conduta,\nfast_ops.obter_pessoa_atendimento(o.nr_atendimento, 'C') as cd_pessoa_fisica,\n\n(select unique d.cd_doenca ||' - '|| a.ds_doenca_cid\nfrom fast_ops.diagnostico_doenca d, \n     fast_ops.cid_doenca a\nwhere a.cd_doenca_cid = d.cd_doenca\nand d.nr_atendimento = o.nr_atendimento\nand d.nr_seq_interno = (select max(x.nr_seq_interno) from fast_ops.diagnostico_doenca x where x.nr_atendimento = d.nr_atendimento)) as ds_diagnostico,\n\nfast_ops.obter_nome_estab(fast_ops.obter_estab_atendimento(o.nr_atendimento)) as DS_UNIDADE,\n\ne.cd_cgc as cnpj,\n\n'HOB' as MARCA,\n'Tasy HTML' as BASE\n\nfrom fast_ops.oft_consulta o,\n     (SELECT a.nr_seq_consulta, b.ds_resultado as conduta\n      FROM   fast_ops.med_avaliacao_paciente a \n      inner join fast_ops.med_avaliacao_result b ON b.nr_seq_avaliacao = a.nr_sequencia \n      WHERE  a.nr_seq_tipo_avaliacao = 34 \n      and  b.nr_seq_item = 457 --456, 458 ) \n      GROUP  BY a.nr_seq_consulta, b.ds_resultado) z,\n      fast_ops.oft_conduta c,\n      fast_ops.estabelecimento e\nwhere o.nr_sequencia = z.nr_seq_consulta\nand o.nr_sequencia = c.nr_seq_consulta\nand o.nr_atendimento is not null\nand fast_ops.obter_estab_atendimento(o.nr_atendimento) = e.cd_estabelecimento\n\nand o.dt_atualizacao between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Consulta",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamento HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- AGENDAMENTO HOB - Azure\n\nselect  a.cd_pessoa_fisica, \na.cd_convenio, \nfast_ops.obter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char((a.hr_inicio) , 'yyyy-mm-dd') as data_agenda,\nto_char((a.hr_inicio) , 'hh24:mi:ss') as hora_agenda,\n'Consulta' as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nsubstr(fast_ops.obter_desc_procedimento(a.cd_procedimento, a.ie_origem_proced),1,1000) as ds_procedimento_princ,\nsubstr((select Listagg(fast_ops.Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced), ' ;') within GROUP (ORDER BY fast_ops.Obter_desc_procedimento(p.cd_procedimento, p.ie_origem_proced))  from FAST_OPS.AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia),1,1000) as ds_procedimento_adic,\n1 + (select count(1)from FAST_OPS.AGENDA_PACIENTE_PROC p where p.nr_sequencia = a.nr_sequencia) as ie_quantidade,\nfast_ops.obter_nome_usuario(a.nm_usuario_orig) as nm_usuario,\nfast_ops.obter_nome_pf(a.cd_medico_exec) as nm_medico,\ne.nm_fantasia_estab DS_UNIDADE,\nem.nm_razao_social MARCA,\nfast_ops.obter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\nto_char(a.dt_agendamento, 'yyyy-mm-dd') dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao,\naa.ds_agrupamento ds_agrupamento,\na.cd_motivo_cancelamento,\nsubstr(fast_ops.obter_ds_motivo_status(a.nr_sequencia, a.cd_agenda),1,200) as ds_motivo_cancelamento,\na.cd_agenda,\nto_char(a.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\n'Tasy HTML' as BASE\n\nfrom FAST_OPS.agenda_paciente a,\n     FAST_OPS.agenda ag,\n     FAST_OPS.pessoa_fisica pf,\n     FAST_OPS.procedencia p,\n     FAST_OPS.agenda_paciente_classif ac,\n     FAST_OPS.agrupamento_agenda aa,\n     FAST_OPS.empresa em,\n     FAST_OPS.estabelecimento e\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica (+)\nand a.cd_procedencia = p.cd_procedencia (+)\nand a.nr_seq_classif_agenda = ac.nr_sequencia (+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand ag.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\nand a.cd_pessoa_fisica is not null\nand ag.cd_pessoa_fisica is not null\nand ag.cd_tipo_agenda = 2\n\nand a.dt_agendamento between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Usuarios HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select u.nm_usuario, \nu.ds_usuario, \nu.ie_situacao, \nto_char(u.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\nfast_ops.obter_nome_estabelecimento(u.cd_estabelecimento) as DS_UNIDADE,\ne.cd_cgc as CNPJ,\nfast_ops.obter_nome_empresa(fast_ops.obter_empresa_estab(u.cd_estabelecimento)) as Marca,\n'Tasy HTML' as BASE\nfrom FAST_OPS.usuario u,\n     FAST_OPS.empresa em,\n     FAST_OPS.estabelecimento e\nwhere u.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Usuario",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendas HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT A.CD_AGENDA, A.DS_AGENDA, A.CD_TIPO_AGENDA, A.CD_PESSOA_FISICA, E.CD_CGC as CNPJ, (SELECT X.DS_AREA_ATUACAO FROM fast_ops.AREA_ATUACAO_MEDICA X\nWHERE X.NR_SEQUENCIA = A.NR_SEQ_AREA_ATUACAO) AS DS_AREA_ATUACAO, A.IE_SITUACAO,\nto_char(A.DT_ATUALIZACAO, 'yyyy-mm-dd') DT_ATUALIZACAO,\n'Tasy HTML' as BASE\nFROM FAST_OPS.AGENDA A,\n     FAST_OPS.ESTABELECIMENTO E\nWHERE A.CD_ESTABELECIMENTO = E.CD_ESTABELECIMENTO",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agenda",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento"
				},
				"annotations": [],
				"lastPublishTime": "2020-03-04T15:25:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Geral Atendimentos Oftalmoclin')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Alimenta as informações das tabelas:\n\nAtendimento_ Unidade \nAgendamento_Unidade\nUsuarios_Unidade\nConsultas_Unidade\nAgendas Unidade\n\nPara extração de relatórios do call center.",
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Atendimento Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT pac_reg AS CD_PESSOA_FISICA\n    , rtrim(ltrim(pac_nome)) AS NM_PESSOA_FISICA\n    , convert(CHAR(10), osm_dthr, 121) AS DT_ENTRADA\n    , LEFT(CONVERT(VARCHAR(12), osm_dthr, 114),8) AS HR_ENTRADA\n    , smm_med AS NM_MEDICO\n    , osm_cnv AS CD_CONVENIO\n    , cnv_nome AS DS_CONVENIO\n    , convert(VARCHAR, (convert(VARCHAR, osm_serie) + convert(VARCHAR, osm_num))) AS NR_ATENDIMENTO\n    , emp_cgc AS CNPJ\n    , emp_nome_fantasia AS DS_UNIDADE\n    , emp_nome_fantasia AS MARCA\n    , 0 AS CD_PROCEDENCIA\n    , 'NAO ENCONTRADO' AS DS_PROCEDENCIA\n    , 'NAO ENCONTRADO' AS ID\n    , CONVERT(INT, DAY(osm_dthr)) AS DIA\n    , CONVERT(INT, MONTH(osm_dthr)) AS MES\n    , CONVERT(INT, YEAR(osm_dthr)) AS ANO,\n'Smart Oftalmoclin' as BASE\nFROM osm\nINNER JOIN smm\n    ON smm_osm_serie = osm_serie\n        AND smm_osm = osm_num\nINNER JOIN pac\n    ON pac_reg = osm_pac\nINNER JOIN cnv\n    ON osm_cnv = cnv_cod\nINNER JOIN str\n    ON str_cod = osm_str\nINNER JOIN psv\n    ON psv_cod = osm_mreq\nLEFT OUTER JOIN str str_e\n    ON str.str_str_cod = str_e.str_cod\nLEFT OUTER JOIN emp\n    ON str_e.str_emp_cod = emp_cod\nWHERE 1 = 1\n    AND (\n        smm_pacote IS NULL\n        OR (smm_pacote = 'C')\n        )\n    AND smm_sfat NOT IN ('C')\n\nAND osm_dthr BETWEEN GETDATE() - 730 AND GETDATE()",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Atendimento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamentos Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT AGM_PAC AS CD_PESSOA_FISICA\n    , agm.agm_cnv_cod AS CD_CONVENIO\n    , emp_cgc AS CNPJ\n    , CONVERT(DATE, AGM_HINI) AS DATA_AGENDA\n    , LEFT(CONVERT(VARCHAR(12), agm_hini, 114), 8) AS HORA_AGENDA\n    , CASE AGM_ATEND\n        WHEN 'CRG'\n            THEN 'Cirurgia'\n        WHEN 'ASS'\n            THEN 'Consulta'\n        when '' then 'Consulta'\n        ELSE 'Outros'\n        END AS TIPO_AGENDA\n    , pac.PAC_NOME AS NM_PACIENTE\n    , smk.smk_nome AS DS_PROCEDIMENTO_PRINC\n    , ' ' DS_PROCEDIMENTO_ADIC\n    , 1 AS IE_QUANTIDADE\n    , USR_NOME AS NM_USUARIO\n    , psv_nome AS NM_MEDICO\n    , EMP_NOME_FANTASIA AS DS_UNIDADE\n    , EMP_NOME_FANTASIA AS MARCA\n    , CASE \n        WHEN AGM_STAT = 'A'\n            THEN 'Aberta'\n        WHEN AGM_STAT = 'E'\n            THEN 'Executada'\n        WHEN AGM_STAT = 'C'\n            THEN 'Cancelada'\n        WHEN AGM_STAT = 'B'\n            THEN 'Bloqueada'\n        END STATUS_AGENDA\n    , CONVERT(VARCHAR, convert(VARCHAR, AGM_OSM_SERIE) + convert(VARCHAR, AGM_OSM_NUM)) AS NR_ATENDIMENTO\n    , AGM_num AS NR_SEQUENCIA\n    , '' ID\n    , '' AS CD_PROCEDENCIA\n    , agm_proc AS DS_PROCEDENCIA\n    , agm.AGM_DTMRC AS DT_AGENDAMENTO\n    , CONVERT(INT, DAY(AGM_HINI)) AS DIA\n    , CONVERT(INT, MONTH(AGM_HINI)) AS MES\n    , CONVERT(INT, YEAR(AGM_HINI)) AS ANO\n    , ' ' DS_CLASSIFICACAO\n    , ' ' DS_AGRUPAMENTO\n    , agm.AGM_CANC_MOT_COD AS CD_MOTIVO_CANCELAMENTO\n    , agm.AGM_CANC_MOT_TIPO AS DS_MOTIVO_CANCELAMENTO\n    , agm_med AS CD_AGENDA,\n'Smart Oftalmoclin' as BASE\nFROM agm\nINNER JOIN usr\n    ON (agm.agm_usr_login = usr.usr_login)\nINNER JOIN psv\n    ON (psv.psv_cod = agm.agm_med)\nINNER JOIN smk\n    ON (\n            agm_smk = smk_cod\n            AND agm_tpsmk = smk_tipo\n            )\nINNER JOIN pac\n    ON (pac_reg = agm_pac)\nINNER JOIN loc\n    ON (AGM_LOC = LOC_COD)\nINNER JOIN str\n    ON (LOC_STR = STR.STR_COD)\nINNER JOIN str str_e\n    ON (STR.STR_STR_COD = STR_E.STR_COD)\nINNER JOIN cnv\n    ON (CNV_COD = AGM_CNV_COD)\nLEFT OUTER JOIN ctf ct1\n    ON (\n            ct1.ctf_cod = smk_ctf\n            AND ct1.ctf_tipo = smk_tipo\n            )\nLEFT OUTER JOIN emp\n    ON emp_cod = str_e.str_emp_cod\n\nWHERE AGM_DTMRC BETWEEN GETDATE() - 730 AND GETDATE()",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Usuarios Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select\nusr_login as NM_USUARIO,\nusr_nome as DS_USUARIO,\nusr_status as IE_SITUACAO,\nusr_dt_alter_senha as DT_ATUALIZACAO,\n'OFTALMOCLIN Hospital de Olhos da Bahia' AS DS_UNIDADE,\n'14307763000194' as CNPJ,\n'OFTALMOCLIN' as MARCA,\n'Smart Oftalmoclin' as BASE\nfrom usr",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Usuario",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Consulta Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT\nRCL_SMM AS NR_SEQUENCIA,\nCONVERT(DATE,RCL_DTHR_ATUAL) AS DT_ATUALIZACAO,\nCONVERT(VARCHAR,RCL_DTHR_ATUAL,108) as HR_ATUALIZACAO,\n\nCONVERT(VARCHAR,CONVERT(VARCHAR,RCL_OSM_SERIE) + CONVERT(VARCHAR,RCL_OSM)) AS NR_ATENDIMENTO, \n\nRCL_MED AS CD_MEDICO,\nPSV_APEL AS NM_MEDICO,\n'' AS DS_RETORNO,\nCONVERT(VARCHAR,RCL_LAUDO_RTF) AS DS_CONDUTA,\nRCL_PAC AS CD_PESSOA_FISICA,\nCONVERT(VARCHAR,RCL_TXT) AS DS_DIAGNOSTICO,\n'OFTALMOCLIN Hospital de Olhos da Bahia' AS DS_UNIDADE,\n'14307763000194' as CNPJ,\n'IOF' AS MARCA,\n'Smart Oftalmoclin' as BASE\nFROM RCL\nINNER JOIN PSV ON PSV_COD = RCL_MED\n\nWHERE RCL_DTHR_ATUAL BETWEEN GETDATE() - 730 AND GETDATE()",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Consulta",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendas Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT distinct agd_med AS CD_AGENDA \n    , 0 AS DS_AGENDA\n    , 0 CD_TIPO_AGENDA\n    , psv_cod AS CD_PESSOA_FISICA\n    , emp_cgc AS CNPJ\n    , '' AS DS_AREA_ATUACAO\n    , 'A' AS IE_SITUACAO,\n'Smart Oftalmoclin' as BASE\n    -- , CASE \n    --     WHEN (agd_dt_reconstr IS not NULL and AGD_DT_GERA is not null)\n    --         THEN agd_dt_reconstr\n    --     WHEN (agd_dt_reconstr IS NULL and AGD_DT_GERA is not null)\n    --         THEN agd_dt_gera\n    --     ELSE AGD_DT_GERA\n    --     END AS DT_ATUALIZACAO\nFROM agd\nINNER JOIN PSV\n    ON agd_med = psv_cod\nINNER JOIN loc\n    ON loc_cod = agd_loc\nINNER JOIN str\n    ON str_cod = loc_str\nLEFT OUTER JOIN str str_e\n    ON str_e.str_cod = str.str_str_cod\nLEFT OUTER JOIN emp\n    ON emp_cod = str_e.str_emp_cod",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agenda",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento"
				},
				"annotations": [],
				"lastPublishTime": "2020-02-10T13:01:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Geral Atendimentos Sadalla')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Alimenta as informações das tabelas:\n\nAtendimento_ Unidade \nAgendamento_Unidade\nUsuarios_Unidade\nConsultas_Unidade\nAgendas Unidade\n\nPara extração de relatórios do call center.",
				"activities": [
					{
						"name": "Atendimento Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select pf.cd_pessoa_fisica, pf.nm_pessoa_fisica, \n\nto_char(at.dt_entrada,'yyyy-mm-dd') as dt_entrada,\nto_char(at.dt_entrada,'hh24:mi:ss') as hr_entrada, \n\nobter_nome_pf(at.cd_medico_resp) as nm_medico, c.cd_convenio, obter_nome_convenio(c.cd_convenio) AS ds_convenio, \nat.nr_atendimento,\ne.cd_cgc as CNPJ,\nnm_fantasia_estab DS_UNIDADE,\nem.nm_razao_social MARCA,\n\nat.cd_procedencia,\np.ds_procedencia,\n'NAO ENCONTRADO' as ID,\n\nto_char(at.dt_entrada,'dd') dia,\nto_char(at.dt_entrada,'mm') mes,\nto_char(at.dt_entrada,'yyyy') ano,\nto_char(at.dt_cancelamento, 'yyyy-mm-dd') dt_cancelamento,\nto_char(at.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\n'Tasy Delphi' as BASE\n\nfrom \natendimento_paciente at, \npessoa_fisica pf,\natend_categoria_convenio c,\nprocedencia p,\nestabelecimento e,\nempresa em\nwhere at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand at.cd_procedencia = p.cd_procedencia (+)\nand at.nr_atendimento = c.nr_atendimento\nand at.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\n\nAND at.dt_entrada between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Atendimento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Consulta Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Consulta Sadalla - Azure\n\nselect o.nr_sequencia as nr_sequencia, to_char(o.dt_atualizacao,'yyyy-mm-dd') as dt_atualizacao,\nto_char(o.dt_atualizacao,'hh24:mi:ss') as hr_atualizacao, \no.nr_atendimento, o.cd_profissional as cd_medico ,obter_nome_pf(o.cd_profissional) as nm_medico, r.ds_retorno, substr(o.ds_conduta,1,1000) as ds_conduta,\nobter_pessoa_atendimento(o.nr_atendimento, 'C') as cd_pessoa_fisica,\n\n(select unique d.cd_doenca ||' - '|| a.ds_doenca_cid\nfrom diagnostico_doenca d, \n     cid_doenca a\nwhere a.cd_doenca_cid = d.cd_doenca\nand d.nr_atendimento = o.nr_atendimento\nand d.nr_seq_interno = (select max(x.nr_seq_interno) from diagnostico_doenca x where x.nr_atendimento = d.nr_atendimento)) as ds_diagnostico,\n\nobter_nome_estab(obter_estab_atendimento(o.nr_atendimento)) as DS_UNIDADE,\n\ne.cd_cgc as cnpj,\n\n'SADALLA' as marca,\n'Tasy Delphi' as BASE\n\nfrom oft_consulta_medica o,\n     oft_retorno r,\n     estabelecimento e\nwhere o.nr_seq_retorno = r.nr_sequencia\nand o.nr_atendimento is not null\nand obter_estab_atendimento(o.nr_atendimento) = e.cd_estabelecimento\n\nand o.dt_atualizacao between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Consulta",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamento Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Agendamento Sadalla - Azure\n\nselect a.cd_pessoa_fisica, \na.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char(a.dt_agenda, 'yyyy-mm-dd') as data_agenda,\nto_char(a.dt_agenda, 'hh24:mi:ss') as hora_agenda,\n'Consulta' as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nobter_desc_procedimento(10502, 1) as ds_procedimento_princ,\n'' ds_procedimento_adic,\n1 as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_origem) as nm_usuario,\nobter_nome_pf(ag.cd_pessoa_fisica) as nm_medico,\nnm_fantasia_estab DS_UNIDADE,\nem.nm_razao_social MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\nto_char(a.dt_agendamento, 'yyyy-mm-dd') dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao ,\naa.ds_agrupamento ds_agrupamento,\na.cd_motivo_cancelamento,\nsubstr(obter_ds_motivo_status(a.nr_sequencia, a.cd_agenda),1,200) as ds_motivo_cancelamento,\na.cd_agenda,\n\nto_char(a.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\n'Tasy Delphi' as BASE\n\nfrom agenda_consulta a,\n     agenda ag,\n     pessoa_fisica pf,\n     procedencia p,\n     agenda_classif ac,\n     agrupamento_agenda aa,\n     estabelecimento e,\n     empresa em\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica (+)\nand a.cd_procedencia = p.cd_procedencia(+)\nand a.ie_classif_agenda  = ac.cd_classificacao(+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand ag.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\nand a.cd_pessoa_fisica is not null\nand a.dt_agendamento between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Clear Base",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Usuarios Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select u.nm_usuario, \nu.ds_usuario, \nu.ie_situacao, \nto_char(u.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\nobter_nome_estabelecimento(u.cd_estabelecimento) as DS_UNIDADE,\ne.cd_cgc as CNPJ,\nobter_nome_empresa(obter_empresa_estab(u.cd_estabelecimento)) as Marca,\n'Tasy Delphi' as BASE\nfrom usuario u,\n     empresa em,\n     estabelecimento e\nwhere u.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Usuario",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendas Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT A.CD_AGENDA, A.DS_AGENDA, A.CD_TIPO_AGENDA, A.CD_PESSOA_FISICA, E.CD_CGC as CNPJ, (SELECT X.DS_AREA_ATUACAO FROM AREA_ATUACAO_MEDICA X\nWHERE X.NR_SEQUENCIA = A.NR_SEQ_AREA_ATUACAO) AS DS_AREA_ATUACAO, A.IE_SITUACAO,\nto_char(A.DT_ATUALIZACAO, 'yyyy-mm-dd') DT_ATUALIZACAO,\n'Tasy Delphi' as BASE\nFROM AGENDA A,\n     ESTABELECIMENTO E\nWHERE A.CD_ESTABELECIMENTO = E.CD_ESTABELECIMENTO",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agenda",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Clear Base",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CLEARBASEATENDIMENTOUNIDADES]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-09T17:32:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gerar Base CNPJ')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Busca dados",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy to CSV CNPJ",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "    SELECT DISTINCT \n        a.CGC_CONV\n    FROM STG.BI_CNPJ_CONVENIO a\n    WHERE NOT EXISTS (SELECT X.CGC_CONVENIO FROM dw.DimConvenioCGC X WHERE X.CGC_CONVENIO = a.CGC_CONV)\n    AND LEN(A.CGC_CONV) = 14",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "FileServerWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DW_ORIGEM",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CSV_CNPJ_SYS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Busca dados",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "    SELECT DISTINCT \n        a.CGC_CONV\n    FROM STG.BI_CNPJ_CONVENIO a\n    WHERE NOT EXISTS (SELECT X.CGC_CONVENIO FROM dw.DimConvenioCGC X WHERE X.CGC_CONVENIO = a.CGC_CONV)\n    AND LEN(A.CGC_CONV) = 14",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW_ORIGEM",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CNPJ"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gerar Base Consulta CNPJ DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CNPJ CONV SMART - DH ITG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE STG.BI_CNPJ_CONVENIO",
								"writeBehavior": "insert",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV SMART - DH ITB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - DH ITG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV SMART - DH IOF",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - DH ITB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_IOF_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV SMART - Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - DH IOF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV HTML",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - HOSL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT \n    A.CD_CGC    AS CGC_CONV\nFROM CONVENIO A",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV DELPHI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV HTML",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT \n    A.CD_CGC    AS CGC_CONV\nFROM CONVENIO A",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV SMART - HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - Oftalmoclin",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CNPJ"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gerar Base Consulta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_CNPJ_SYS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CNPJ"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-09T14:48:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Agentes por Dia NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Agentes por Dia CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": [],
				"lastPublishTime": "2019-12-05T20:44:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Agentes por Hora NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Agentes por Hora DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": [],
				"lastPublishTime": "2019-11-14T15:21:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Bilhetes NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Bilhete de ligacoes CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes CSI SADALLA",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes HOBL2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": [],
				"lastPublishTime": "2019-11-13T13:27:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Filas por Hora NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Filas por Hora CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_FilasporHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Cria Base Nexcore",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Filas por Hora CSI",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora HOSL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora HOB",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora DH",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora INOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CREATEBASENEXCORE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": [],
				"lastPublishTime": "2019-11-14T21:24:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRIS_CARGA_DINAMICA_ADF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LISTA ORIGEM DESTINO",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "COPY STG TO DW",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.05:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[sp_origem_destino]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "String",
										"value": null
									},
									"Dt_inicio_manual": {
										"type": "DateTime",
										"value": null
									},
									"manual": {
										"type": "String",
										"value": "N"
									},
									"plataforma": {
										"type": "String",
										"value": "SMART_IRIS_ODBC_XXX"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LISTA_TABELAS_ADF",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "PROCESSA ETL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "DROPA TABELAS DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SE CARGA COMPLETA",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().TIPO_CARGA,'COMPLETA')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "DATA_HORA_INICIO_PARCIAL",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA PARCIAL",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"oracleReaderQuery": {
															"value": "@concat(\n'select * from ', item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM,' where ', item().nome_coluna_referencia,' >= ''',\nitem().Data_Inicio, ''' and  ', item().nome_coluna_referencia,' <= ''', item().Data_Fim, ''''\n)",
															"type": "Expression"
														},
														"partitionOption": "None",
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert"
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "ORACLE_DINAMICO",
														"type": "DatasetReference",
														"parameters": {
															"NOME_KEYVAULT_SECRET": "@item().NOME_KEYVAULT_SECRET",
															"schema_name": "@item().NOME_SCHEMA_ORIGEM",
															"table_name": "@item().NOME_TABELA_ORIGEM"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA PARCIAL').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "DATA_HORA_INICIO_COMPLETA",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA COMPLETA",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.10:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "PhysicalPartitionsOfTable"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "SQL_DINAMICO",
														"type": "DatasetReference",
														"parameters": {
															"NOME_KEYVAULT_SECRET": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"schema_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"table_name": {
																"value": "@item().NOME_TABELA_ORIGEM",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA COMPLETA').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "DROPA TABELAS DESTINO",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LISTA ORIGEM DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 30,
							"activities": [
								{
									"name": "LIMPA TABELA DESTINO",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.05:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N',\n'''',   \nitem().NOME_SCHEMA_DESTINO,\n'.',\nitem().NOME_TABELA_DESTINO,\n'''',\n') AND type in (N',\n'''',\n'U',\n'''',\n'))',\n' DROP TABLE ',\nitem().NOME_SCHEMA_DESTINO,\n'.',\nitem().NOME_TABELA_DESTINO,\n'  SELECT 0'\n)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DESTINO_TABELAS_ADF",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Destino": {
													"value": "@item().NOME_SCHEMA_DESTINO",
													"type": "Expression"
												},
												"Tabela_Destino": {
													"value": "@item().NOME_TABELA_DESTINO",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					},
					{
						"name": "Copy STG OSM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG CNV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.osm\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table stg.iris_osm",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_osm"
								}
							}
						]
					},
					{
						"name": "Copy STG CNV",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG HON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.cnv\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table stg.iris_CNV",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_cnv"
								}
							}
						]
					},
					{
						"name": "Copy STG CTF",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG OSM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.CTF\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table stg.iris_CTF",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_CTF"
								}
							}
						]
					},
					{
						"name": "Copy STG GCC",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG CTF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.GCC\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_GCC"
								}
							}
						]
					},
					{
						"name": "Copy STG HON",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG SMM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.HON A\nWHERE SUBSTRING(A.hon_dthr_alt,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_HON"
								}
							}
						]
					},
					{
						"name": "Copy STG PSV",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG GCC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.PSV\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_PSV"
								}
							}
						]
					},
					{
						"name": "Copy STG SMK",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG PSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.SMK\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_SMK"
								}
							}
						]
					},
					{
						"name": "Copy STG SMM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG NFS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.SMM A\nWHERE SUBSTRING(A.smm_dthr_alter,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_SMM"
								}
							}
						]
					},
					{
						"name": "Copy STG STR",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG SMK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.STR\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_STR"
								}
							}
						]
					},
					{
						"name": "Copy STG NFS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG EXT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.nfs A\nWHERE SUBSTRING(A.nfs_dthr_proc,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_NFS"
								}
							}
						]
					},
					{
						"name": "Copy STG EMP",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG STR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.EMP\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_EMP"
								}
							}
						]
					},
					{
						"name": "Copy STG FAT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG EMP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.FAT\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_FAT"
								}
							}
						]
					},
					{
						"name": "Copy STG EXT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG MNS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT \n96    estabelecimento\n,EXT.ext_osm_serie\n,EXT.ext_osm_num\n,EXT.ext_smm_num\n,EXT.ext_mns_serie\n,EXT.ext_mns_num\n,EXT.ext_dt_mov\n,EXT.ext_valor_glosa\n,EXT.ext_valor_receb\n,EXT.ext_mog_cod\n,EXT.ext_ccr_psv\n,EXT.EXT_PSV_COD\n,EXT.EXT_STATUS_GLOSA\n,EXT.EXT_SGO_COD\n,EXT.EXT_GLOSA_ACATADA\n,EXT.EXT_MTE_SERIE\n,EXT.EXT_MTE_SEQ\n,EXT.ext_qtd\n,EXT.ext_valor_imposto\n,EXT.ext_obs\n,EXT.ext_valor_complemento\n,NULL W\n,NULL EXT_VALOR_IMPOSTO222\n,NULL ext_valor_imp_sem_abater\n,EXT.ext_rpi_serie\n,EXT.ext_rpi_num\n,EXT.ext_rpi_status\n,EXT.ext_rpi_valor\n,EXT.ext_rpi_dthr\n,EXT.ext_rpi_usr_login\n,EXT.ext_rpi_obs\n,EXT.ext_epl_serie\n,EXT.ext_epl_num\n,MNS.MNS_DT_REG\nFROM EXT EXT\nINNER join MNS MNS  on ext.ext_mns_num = mns.MNS_NUM and ext.ext_mns_serie = mns.MNS_SERIE \nWHERE SUBSTRING(MNS.mns_dt_reg,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_EXT"
								}
							}
						]
					},
					{
						"name": "Copy STG MNS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG PAC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.mns A\nWHERE SUBSTRING(A.mns_dt_reg,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_MNS"
								}
							}
						]
					},
					{
						"name": "Copy STG PAC",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG MTE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.pac A\nWHERE SUBSTRING(A.pac_dreg,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_PAC"
								}
							}
						]
					},
					{
						"name": "Copy STG MTE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG AGM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.mte A\nWHERE SUBSTRING(A.mte_dt_reg,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_MTE"
								}
							}
						]
					},
					{
						"name": "Copy STG NFL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG FAT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.NFL\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_NFL"
								}
							}
						]
					},
					{
						"name": "Copy STG AGM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG TO DW FLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.agm A\nWHERE SUBSTRING(A.agm_hini,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_AGM"
								}
							}
						]
					},
					{
						"name": "Copy STG FLE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.fle A\nWHERE SUBSTRING(A.fle_dthr_reg,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_FLE"
								}
							}
						]
					},
					{
						"name": "Copy STG LOC",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG NFL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.LOC\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_LOC"
								}
							}
						]
					},
					{
						"name": "Copy STG GMM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG LOC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.GMM\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_GMM"
								}
							}
						]
					},
					{
						"name": "COPY STG TO DW",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy STG GMM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "/**\n\ndrop table dw.iris_hon;\nselect '96' as ESTABELECIMENTO,* into dw.iris_hon from stg.iris_hon;\ndrop table dw.iris_smm;\nselect '96' as ESTABELECIMENTO,* into dw.iris_smm from stg.iris_smm;\ndrop table dw.iris_nfs;\nselect '96' as ESTABELECIMENTO,* into dw.iris_nfs from stg.iris_nfs;\ndrop table dw.iris_ext;\nselect '96' as ESTABELECIMENTO,* into dw.iris_ext from stg.iris_ext;\ndrop table dw.iris_mns;\nselect '96' as ESTABELECIMENTO,* into dw.iris_mns from stg.iris_mns;\ndrop table dw.iris_pac;\nselect '96' as ESTABELECIMENTO,* into dw.iris_pac from stg.iris_pac;\ndrop table dw.iris_mte;\nselect '96' as ESTABELECIMENTO,* into dw.iris_mte from stg.iris_mte;\ndrop table dw.iris_agm;\nselect '96' as ESTABELECIMENTO,* into dw.iris_agm from stg.iris_agm;\ndrop table dw.iris_fle;\nselect '96' as ESTABELECIMENTO,* into dw.iris_fle from stg.iris_fle;\n\n\ndrop table dw.iris_osm;\nselect '96' as ESTABELECIMENTO,* into dw.iris_osm from stg.iris_osm;\ndrop table dw.iris_cnv;\nselect '96' as ESTABELECIMENTO,* into dw.iris_cnv from stg.iris_cnv;\ndrop table dw.iris_ctf;\nselect '96' as ESTABELECIMENTO,* into dw.iris_ctf from stg.iris_ctf;\ndrop table dw.iris_gcc;\nselect '96' as ESTABELECIMENTO,* into dw.iris_gcc from stg.iris_gcc;\ndrop table dw.iris_psv;\nselect '96' as ESTABELECIMENTO,* into dw.iris_psv from stg.iris_psv;\ndrop table dw.iris_smk;\nselect '96' as ESTABELECIMENTO,* into dw.iris_smk from stg.iris_smk;\ndrop table dw.iris_str;\nselect '96' as ESTABELECIMENTO,* into dw.iris_str from stg.iris_str;\ndrop table dw.iris_emp;\nselect '96' as ESTABELECIMENTO,* into dw.iris_emp from stg.iris_emp;\ndrop table dw.iris_fat;\nselect '96' as ESTABELECIMENTO,* into dw.iris_fat from stg.iris_fat;\ndrop table dw.iris_nfl;\nselect '96' as ESTABELECIMENTO,* into dw.iris_nfl from stg.iris_nfl;\ndrop table dw.iris_loc;\nselect '96' as ESTABELECIMENTO,* into dw.iris_loc from stg.iris_loc;\ndrop table dw.iris_gmm;\nselect '96' as ESTABELECIMENTO,* into dw.iris_gmm from stg.iris_gmm;\n\n**/"
								}
							]
						}
					},
					{
						"name": "STG TO DW HON",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy STG HON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "WITH STG_HON \nAS\n(\n\nSELECT DISTINCT\n\t   '96' as estabelecimento\n\t  ,[hon_med]\n      ,[hon_psv_vinc]\n      ,[hon_ctf]\n      ,[hon_str]\n      ,[hon_tpctf]\n      ,[hon_str_solic]\n      ,[hon_seq]\n      ,[hon_aux]\n      ,[hon_cc1]\n      ,[hon_pc1]\n      ,[hon_vl1]\n      ,[hon_cc2]\n      ,[hon_pc2]\n      ,[hon_vl2]\n      ,[hon_cc3]\n      ,[hon_pc3]\n      ,[hon_vl3]\n      ,[hon_cc4]\n      ,[hon_pc4]\n      ,[hon_vl4]\n      ,[hon_cc5]\n      ,[hon_pc5]\n      ,[hon_vl5]\n      ,[hon_cnv_cod]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(hon_dthr_ini as varchar(1000))) = 1 THEN  cast(hon_dthr_ini as varchar(1000)) -- substring(substring(cast(hon_dthr_ini as varchar(1000)),9,2),1,4) + '/' + substring(substring(cast(hon_dthr_ini as varchar(1000)),6,2),1,4) + '/' + substring(substring(cast(hon_dthr_ini as varchar(1000)),1,10),1,4) \n\t\t\tWHEN ISDATE(cast(hon_dthr_ini as varchar(1000))) <> 1 THEN Null \n\t\tEND as hon_dthr_ini\n      ,[hon_status]\n      ,[HON_USR_LOGIN_CAD]\n      ,[HON_USR_LOGIN_ALT]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(HON_DTHR_ALT as varchar(1000))) = 1 THEN  cast(HON_DTHR_ALT as varchar(1000)) \n\t\t\tWHEN ISDATE(cast(HON_DTHR_ALT as varchar(1000))) <> 1 THEN Null \n\t   END as HON_DTHR_ALT\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(HON_DTHR_CAD as varchar(1000))) = 1 THEN  cast(HON_DTHR_CAD as varchar(1000)) \n\t\t\tWHEN ISDATE(cast(HON_DTHR_CAD as varchar(1000))) <> 1 THEN Null \n\t   END as HON_DTHR_CAD\n      ,[HON_GMR_COD]\n      ,[HON_CTF_CATEG]\n      ,[HON_EMP_COD]\n      ,[HON_CC6]\n      ,[HON_PC6]\n      ,[HON_VL6]\n      ,[hon_psv_solic]\n      ,[hon_ih_origem]\n      ,[HON_DIA]\n      ,[HON_HOR_INI]\n      ,[HON_HOR_FIM]\n      ,[hon_obs]\n      ,[hon_smk_tipo]\n      ,[hon_smk_cod]\n      ,[hon_forma_pag]\n      ,[hon_ind_rat]\n      ,[hon_gmr_solic]\n      ,[hon_cnv_emp_cod]\n      ,[hon_psv_tipo_solic]\n      ,[hon_tap_cod]\n      ,[hon_dce_id]\n      ,[hon_adicional_1]\n      ,[hon_adicional_2]\n      ,[hon_adicional_3]\n      ,[hon_adicional_4]\n      ,[hon_adicional_5]\n      ,[hon_adicional_6]\n      ,[hon_grupo_id]\n\t  \n  FROM [stg].[iris_HON]  with(nolock)\n\t  )\n\n--Sincronize a tabela de destino com dados atualizados da tabela de origem\nMERGE\t\n\t[a].[tbl_HON] AS destino\nUSING \n\tSTG_HON AS origem\n\n\tON (destino.hon_seq\t\t\t= origem.hon_seq\t\t\tAND \n\t\tdestino.estabelecimento = origem.estabelecimento)\n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração\nWHEN MATCHED \nTHEN UPDATE SET      \ndestino.[hon_med] = origem.[hon_med],\ndestino.[hon_psv_vinc] = origem.[hon_psv_vinc],\ndestino.[hon_ctf] = origem.[hon_ctf],\ndestino.[hon_str] = origem.[hon_str],\ndestino.[hon_tpctf] = origem.[hon_tpctf],\ndestino.[hon_str_solic] = origem.[hon_str_solic],\ndestino.[hon_seq] = origem.[hon_seq],\ndestino.[hon_aux] = origem.[hon_aux],\ndestino.[hon_cc1] = origem.[hon_cc1],\ndestino.[hon_pc1] = origem.[hon_pc1],\ndestino.[hon_vl1] = origem.[hon_vl1],\ndestino.[hon_cc2] = origem.[hon_cc2],\ndestino.[hon_pc2] = origem.[hon_pc2],\ndestino.[hon_vl2] = origem.[hon_vl2],\ndestino.[hon_cc3] = origem.[hon_cc3],\ndestino.[hon_pc3] = origem.[hon_pc3],\ndestino.[hon_vl3] = origem.[hon_vl3],\ndestino.[hon_cc4] = origem.[hon_cc4],\ndestino.[hon_pc4] = origem.[hon_pc4],\ndestino.[hon_vl4] = origem.[hon_vl4],\ndestino.[hon_cc5] = origem.[hon_cc5],\ndestino.[hon_pc5] = origem.[hon_pc5],\ndestino.[hon_vl5] = origem.[hon_vl5],\ndestino.[hon_cnv_cod] = origem.[hon_cnv_cod],\ndestino.[hon_dthr_ini] = origem.[hon_dthr_ini],\ndestino.[hon_status] = origem.[hon_status],\ndestino.[HON_USR_LOGIN_CAD] = origem.[HON_USR_LOGIN_CAD],\ndestino.[HON_USR_LOGIN_ALT] = origem.[HON_USR_LOGIN_ALT],\ndestino.[HON_DTHR_ALT] = origem.[HON_DTHR_ALT],\ndestino.[HON_DTHR_CAD] = origem.[HON_DTHR_CAD],\ndestino.[HON_GMR_COD] = origem.[HON_GMR_COD],\ndestino.[HON_CTF_CATEG] = origem.[HON_CTF_CATEG],\ndestino.[HON_EMP_COD] = origem.[HON_EMP_COD],\ndestino.[HON_CC6] = origem.[HON_CC6],\ndestino.[HON_PC6] = origem.[HON_PC6],\ndestino.[HON_VL6] = origem.[HON_VL6],\ndestino.[hon_psv_solic] = origem.[hon_psv_solic],\ndestino.[hon_ih_origem] = origem.[hon_ih_origem],\ndestino.[HON_DIA] = origem.[HON_DIA],\ndestino.[HON_HOR_INI] = origem.[HON_HOR_INI],\ndestino.[HON_HOR_FIM] = origem.[HON_HOR_FIM],\ndestino.[hon_obs] = origem.[hon_obs],\ndestino.[hon_smk_tipo] = origem.[hon_smk_tipo],\ndestino.[hon_smk_cod] = origem.[hon_smk_cod],\ndestino.[hon_forma_pag] = origem.[hon_forma_pag],\ndestino.[hon_ind_rat] = origem.[hon_ind_rat],\ndestino.[hon_gmr_solic] = origem.[hon_gmr_solic],\ndestino.[hon_cnv_emp_cod] = origem.[hon_cnv_emp_cod],\ndestino.[hon_psv_tipo_solic] = origem.[hon_psv_tipo_solic],\ndestino.[hon_tap_cod] = origem.[hon_tap_cod],\ndestino.[hon_dce_id] = origem.[hon_dce_id],\ndestino.[hon_adicional_1] = origem.[hon_adicional_1],\ndestino.[hon_adicional_2] = origem.[hon_adicional_2],\ndestino.[hon_adicional_3] = origem.[hon_adicional_3],\ndestino.[hon_adicional_4] = origem.[hon_adicional_4],\ndestino.[hon_adicional_5] = origem.[hon_adicional_5],\ndestino.[hon_adicional_6] = origem.[hon_adicional_6],\ndestino.[hon_grupo_id] = origem.[hon_grupo_id]\n\n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT \n\tVALUES (  \norigem.estabelecimento,\norigem.[hon_med],\norigem.[hon_psv_vinc],\norigem.[hon_ctf],\norigem.[hon_str],\norigem.[hon_tpctf],\norigem.[hon_str_solic],\norigem.[hon_seq],\norigem.[hon_aux],\norigem.[hon_cc1],\norigem.[hon_pc1],\norigem.[hon_vl1],\norigem.[hon_cc2],\norigem.[hon_pc2],\norigem.[hon_vl2],\norigem.[hon_cc3],\norigem.[hon_pc3],\norigem.[hon_vl3],\norigem.[hon_cc4],\norigem.[hon_pc4],\norigem.[hon_vl4],\norigem.[hon_cc5],\norigem.[hon_pc5],\norigem.[hon_vl5],\norigem.[hon_cnv_cod],\norigem.[hon_dthr_ini],\norigem.[hon_status],\norigem.[HON_USR_LOGIN_CAD],\norigem.[HON_USR_LOGIN_ALT],\norigem.[HON_DTHR_ALT],\norigem.[HON_DTHR_CAD],\norigem.[HON_GMR_COD],\norigem.[HON_CTF_CATEG],\norigem.[HON_EMP_COD],\norigem.[HON_CC6],\norigem.[HON_PC6],\norigem.[HON_VL6],\norigem.[hon_psv_solic],\norigem.[hon_ih_origem],\norigem.[HON_DIA],\norigem.[HON_HOR_INI],\norigem.[HON_HOR_FIM],\norigem.[hon_obs],\norigem.[hon_smk_tipo],\norigem.[hon_smk_cod],\norigem.[hon_forma_pag],\norigem.[hon_ind_rat],\norigem.[hon_gmr_solic],\norigem.[hon_cnv_emp_cod],\norigem.[hon_psv_tipo_solic],\norigem.[hon_tap_cod],\norigem.[hon_dce_id],\norigem.[hon_adicional_1],\norigem.[hon_adicional_2],\norigem.[hon_adicional_3],\norigem.[hon_adicional_4],\norigem.[hon_adicional_5],\norigem.[hon_adicional_6],\norigem.[hon_grupo_id]\n) ;\n \n\n\n"
								}
							]
						}
					},
					{
						"name": "STG TO DW FLE",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy STG FLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "WITH STG_FLE \nAS\n(\n\nSELECT DISTINCT\n\t   '96' as estabelecimento\n\t ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_chegada as varchar(1000))) = 1 THEN  cast(fle_dthr_chegada as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_chegada as varchar(1000))) <> 1 THEN Null \n\t  END as fle_dthr_chegada\n      ,[FLE_PSV_COD]\n      ,[FLE_STR_COD]\n      ,[FLE_PAC_REG]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_atendimento as varchar(1000))) = 1 THEN  cast(fle_dthr_atendimento as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_atendimento as varchar(1000))) <> 1 THEN Null \n\t   END as fle_dthr_atendimento\n      ,[FLE_ORDEM]\n      ,[FLE_STATUS]\n      ,[FLE_USR_LOGIN]\n    --  ,[FLE_OBS_OLD]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_marcada as varchar(1000))) = 1 THEN  cast(fle_dthr_marcada as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_marcada as varchar(1000))) <> 1 THEN Null \n\t\tEND as fle_dthr_marcada\n      ,[FLE_MARC_EXTRA]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(FLE_DTHR_FINAL as varchar(1000))) = 1 THEN  cast(FLE_DTHR_FINAL as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(FLE_DTHR_FINAL as varchar(1000))) <> 1 THEN Null \n\t\tEND as FLE_DTHR_FINAL\n      ,[FLE_PSV_RESP]\n      ,[FLE_MFL_RETORNO]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(FLE_DTHR_REG as varchar(1000))) = 1 THEN  cast(FLE_DTHR_REG as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(FLE_DTHR_REG as varchar(1000))) <> 1 THEN Null \n\t\tEND as FLE_DTHR_REG\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_chegada_inicial as varchar(1000))) = 1 THEN  cast(fle_dthr_chegada_inicial as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_chegada_inicial as varchar(1000))) <> 1 THEN Null \n\t   END as fle_dthr_chegada_inicial\n      ,[FLE_PROCED]\n      ,[FLE_COR]\n      ,[FLE_BIP]\n      ,[FLE_VERSAO]\n      ,[FLE_USR_ATENDIMENTO]\n      ,[FLE_USR_FINAL]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_hora_aguardo as varchar(1000))) = 1 THEN  cast(fle_dthr_hora_aguardo as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_hora_aguardo as varchar(1000))) <> 1 THEN Null \n\t\tEND as fle_dthr_hora_aguardo\n\n      ,[FLE_OSM_SERIE]\n      ,[FLE_OSM_NUM]\n      ,[FLE_SMM_NUM]\n      ,[FLE_LOC_COD]\n      ,[FLE_OBS]\n      ,[FLE_OBS_PSV]\n      ,[FLE_PREFERENCIAL]\n      ,[FLE_ID]\n      ,[FLE_SMA_SERIE]\n      ,[FLE_SMA_NUM]\n      ,[FLE_IND_OCUPADO]\n      ,[FLE_PSV_T_PREFIXO]\n      ,[FLE_ID_FILA_SOLICITACAO_RD]\n      ,[FLE_PAC_NOME]\n      ,[FLE_RETORNO]\n      ,[FLE_RISCO_QUEDA]\n      ,[FLE_VULNERAVEL]\n   --   ,[FLE_TOLIFE_EPISODE]\n\t  \n  FROM [stg].[iris_FLE]  with(nolock)\n\t  )\n\n--delete [a].[tbl_FLE] where Estabelecimento = 96\n--select count(*)  from [a].[tbl_FLE] where Estabelecimento = 96  --696.551\n\n--Sincronize a tabela de destino com dados atualizados da tabela de origem\nMERGE\t\n\t[a].[tbl_FLE] AS destino\nUSING \n\tSTG_FLE AS origem\n\n\tON (\n\t\tdestino.estabelecimento\t\t\t= origem.estabelecimento\t\t\tAND\t\n\t\tdestino.FLE_DTHR_CHEGADA\t\t= origem.FLE_DTHR_CHEGADA\t\t\tAND\n\t\tdestino.FLE_PSV_COD\t\t\t\t= origem.FLE_PSV_COD\t\t\t\tAND \n\t\tdestino.FLE_PAC_REG\t\t\t\t= origem.FLE_PAC_REG\t\t\t\tAND\n\t\tdestino.fle_str_cod\t\t\t\t= origem.fle_str_cod\t\t\t\tAND\t\n\n\t\tdestino.FLE_USR_LOGIN\t\t\t= origem.FLE_USR_LOGIN\t\t\t\tAND\n\t\tdestino.fle_loc_cod\t\t\t\t= origem.fle_loc_cod\t\t\t\tAND\n\t\t\n\t\tdestino.FLE_DTHR_ATENDIMENTO\t= origem.FLE_DTHR_ATENDIMENTO\t\tAND\n\t\tdestino.FLE_DTHR_FINAL\t\t\t= origem.FLE_DTHR_FINAL\t\t\t\tAND\n\t\tdestino.FLE_ORDEM\t\t\t\t= origem.FLE_ORDEM\t\t\t\t\tAND\n\t\tdestino.FLE_DTHR_MARCADA\t\t= origem.FLE_DTHR_MARCADA\t\t\t\n\t\t\n\t\t\n\t\n\t\t)\n\n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração\nWHEN MATCHED \nTHEN UPDATE SET      \ndestino.fle_bip=origem.fle_bip,\ndestino.fle_cor=origem.fle_cor,\ndestino.fle_dthr_atendimento=origem.fle_dthr_atendimento,\ndestino.fle_dthr_chegada=origem.fle_dthr_chegada,\ndestino.fle_dthr_chegada_inicial=origem.fle_dthr_chegada_inicial,\ndestino.FLE_DTHR_FINAL=origem.FLE_DTHR_FINAL,\ndestino.fle_dthr_hora_aguardo=origem.fle_dthr_hora_aguardo,\ndestino.fle_dthr_marcada=origem.fle_dthr_marcada,\ndestino.FLE_DTHR_REG=origem.FLE_DTHR_REG,\ndestino.fle_id=origem.fle_id,\ndestino.fle_id_fila_solicitacao_rd=origem.fle_id_fila_solicitacao_rd,\ndestino.fle_ind_ocupado=origem.fle_ind_ocupado,\ndestino.fle_loc_cod=origem.fle_loc_cod,\ndestino.fle_marc_extra=origem.fle_marc_extra,\ndestino.FLE_MFL_RETORNO=origem.FLE_MFL_RETORNO,\ndestino.fle_obs=origem.fle_obs,\ndestino.FLE_OBS_PSV=origem.FLE_OBS_PSV,\ndestino.fle_ordem=origem.fle_ordem,\ndestino.fle_osm_num=origem.fle_osm_num,\ndestino.fle_osm_serie=origem.fle_osm_serie,\ndestino.fle_pac_nome=origem.fle_pac_nome,\ndestino.fle_pac_reg=origem.fle_pac_reg,\ndestino.fle_preferencial=origem.fle_preferencial,\ndestino.fle_proced=origem.fle_proced,\ndestino.fle_psv_cod=origem.fle_psv_cod,\ndestino.FLE_PSV_RESP=origem.FLE_PSV_RESP,\ndestino.fle_psv_t_prefixo=origem.fle_psv_t_prefixo,\ndestino.fle_retorno=origem.fle_retorno,\ndestino.fle_risco_queda=origem.fle_risco_queda,\ndestino.fle_sma_num=origem.fle_sma_num,\ndestino.fle_sma_serie=origem.fle_sma_serie,\ndestino.fle_smm_num=origem.fle_smm_num,\ndestino.fle_status=origem.fle_status,\ndestino.fle_str_cod=origem.fle_str_cod,\ndestino.fle_usr_atendimento=origem.fle_usr_atendimento,\ndestino.fle_usr_final=origem.fle_usr_final,\ndestino.fle_usr_login=origem.fle_usr_login,\ndestino.fle_versao=origem.fle_versao,\ndestino.fle_vulneravel=origem.fle_vulneravel\n\n\n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT \n\tVALUES (  \norigem.estabelecimento,\norigem.fle_dthr_chegada,\norigem.fle_psv_cod,\norigem.fle_str_cod,\norigem.fle_pac_reg,\norigem.fle_dthr_atendimento,\norigem.fle_ordem,\norigem.fle_status,\norigem.fle_usr_login,\norigem.fle_obs,\norigem.fle_dthr_marcada,\norigem.fle_marc_extra,\norigem.FLE_DTHR_FINAL,\norigem.FLE_PSV_RESP,\norigem.FLE_OBS_PSV,\norigem.FLE_MFL_RETORNO,\norigem.FLE_DTHR_REG,\norigem.fle_dthr_chegada_inicial,\norigem.fle_cor,\norigem.fle_bip,\norigem.fle_proced,\norigem.fle_versao,\norigem.fle_usr_atendimento,\norigem.fle_usr_final,\norigem.fle_dthr_hora_aguardo,\norigem.fle_osm_serie,\norigem.fle_osm_num,\norigem.fle_smm_num,\norigem.fle_loc_cod,\norigem.fle_preferencial,\norigem.fle_id,\norigem.fle_sma_serie,\norigem.fle_sma_num,\norigem.fle_ind_ocupado,\norigem.fle_psv_t_prefixo,\norigem.fle_id_fila_solicitacao_rd,\norigem.fle_pac_nome,\norigem.fle_retorno,\norigem.fle_risco_queda,\norigem.fle_vulneravel\n\n) ;\n \n\n\n"
								}
							]
						}
					}
				],
				"concurrency": 5,
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Data Warehouse/P&P"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRIS_STORAGE_ACCOUNT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lista arquivos",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_HMAISDATADRIVEN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"FileSystem": "urobrasil"
								}
							},
							"fieldList": [
								"childItems",
								"itemType",
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filtro",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lista arquivos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lista arquivos').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endsWith(item().name, 'csv')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filtro",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filtro').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copia dados para a STG",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "@{concat('Drop table stg.',activity('Lista arquivos').output.itemName)}",
												"type": "Expression"
											},
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_HMAISDATADRIVEN",
											"type": "DatasetReference",
											"parameters": {
												"Filesystem": {
													"value": "@activity('Lista arquivos').output.itemName",
													"type": "Expression"
												},
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AZ_SQL_STG",
											"type": "DatasetReference",
											"parameters": {
												"SCHEMA": "stg",
												"TABELA": {
													"value": "@activity('Lista arquivos').output.itemName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Move arquivo para PROCESSADOS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "STG DW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_HMAISDATADRIVEN",
											"type": "DatasetReference",
											"parameters": {
												"Filesystem": {
													"value": "@activity('Lista arquivos').output.itemName",
													"type": "Expression"
												},
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_HMAISDATADRIVEN",
											"type": "DatasetReference",
											"parameters": {
												"Filesystem": {
													"value": "@concat(activity('Lista arquivos').output.itemName,'\\Processados')",
													"type": "Expression"
												},
												"File": {
													"value": "@concat(item().name,'-',utcnow())",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Apaga arquivo",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Move arquivo para PROCESSADOS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_HMAISDATADRIVEN",
											"type": "DatasetReference",
											"parameters": {
												"Filesystem": {
													"value": "@activity('Lista arquivos').output.itemName",
													"type": "Expression"
												},
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "sv_hmaisbrasildatadriven",
												"type": "LinkedServiceReference"
											},
											"path": "ceop/logs"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "STG DW",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Copia dados para a STG",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SQL_DESTINO",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": "MERGE\t           \n\tdw.ortocity AS destino           \nUSING            \n\tstg.ortocity AS origem           \n           \n    ON(        \ndestino.CD_ESTABELECIMENTO\t\t= origem.CD_ESTABELECIMENTO AND\ndestino.DS_ESTABELECIMENTO\t\t= origem.DS_ESTABELECIMENTO AND\ndestino.NR_ATENDIMENTO\t\t\t= origem.NR_ATENDIMENTO AND\ndestino.NR_INTERNO_CONTA\t\t= origem.NR_INTERNO_CONTA AND\ndestino.CD_PESSOA_FISICA\t\t= origem.CD_PESSOA_FISICA AND\ndestino.CD_CONVENIO\t\t\t\t= origem.CD_CONVENIO AND\ndestino.CD_MEDICO_EXECUTANTE\t=\torigem.CD_MEDICO_EXECUTANTE \n)        \n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \ndestino.CD_ESTABELECIMENTO=origem.CD_ESTABELECIMENTO ,\ndestino.DS_ESTABELECIMENTO=origem.DS_ESTABELECIMENTO ,\ndestino.NR_ATENDIMENTO=origem.NR_ATENDIMENTO ,\ndestino.NR_INTERNO_CONTA=origem.NR_INTERNO_CONTA ,\ndestino.CD_PESSOA_FISICA=origem.CD_PESSOA_FISICA ,\ndestino.NM_PESSOA_FISICA=origem.NM_PESSOA_FISICA ,\ndestino.DT_NASCIMENTO=origem.DT_NASCIMENTO ,\ndestino.CD_CONVENIO=origem.CD_CONVENIO ,\ndestino.DS_CONVENIO=origem.DS_CONVENIO ,\ndestino.CD_MEDICO_EXECUTANTE=origem.CD_MEDICO_EXECUTANTE ,\ndestino.NM_MEDICO_EXECUTANTE=origem.NM_MEDICO_EXECUTANTE ,\ndestino.CD_SETOR_EXECUTANTE=origem.CD_SETOR_EXECUTANTE ,\ndestino.DS_SETOR_EXECUTANTE=origem.DS_SETOR_EXECUTANTE ,\ndestino.DT_ENTRADA=origem.DT_ENTRADA ,\ndestino.CD_ITEM=origem.CD_ITEM ,\ndestino.DS_ITEM=origem.DS_ITEM ,\ndestino.DT_LANC_ITEM=origem.DT_LANC_ITEM ,\ndestino.QT=origem.QT ,\ndestino.VALOR=origem.VALOR \n\n\n  \n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.CD_ESTABELECIMENTO,\norigem.DS_ESTABELECIMENTO,\norigem.NR_ATENDIMENTO,\norigem.NR_INTERNO_CONTA,\norigem.CD_PESSOA_FISICA,\norigem.NM_PESSOA_FISICA,\norigem.DT_NASCIMENTO,\norigem.CD_CONVENIO,\norigem.DS_CONVENIO,\norigem.CD_MEDICO_EXECUTANTE,\norigem.NM_MEDICO_EXECUTANTE,\norigem.CD_SETOR_EXECUTANTE,\norigem.DS_SETOR_EXECUTANTE,\norigem.DT_ENTRADA,\norigem.CD_ITEM,\norigem.DS_ITEM,\norigem.DT_LANC_ITEM,\norigem.QT,\norigem.VALOR\n); "
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "\nSELECT \nosm_num\n,osm_pac\n,osm_dthr\n,osm_cnv\n,osm_proc\n,osm_mreq\n,osm_str\n,osm_status\n,osm_ind_urg\n,osm_serie\n,osm_hsp_num\n,osm_tipo\n,osm_dt_result\n,osm_atend\n,osm_obs_coleta\n,osm_lta_cod\n,osm_ctle_cnv\n,osm_nota_sala\n,osm_cid_cod\n,osm_obs\n,osm_mcnv\n,OSM_PADRAO_PRECO\n,OSM_DT_SOLIC\n,OSM_HORA_ESP\n,OSM_SUS_GRUPO_ATENDE\n,OSM_SUS_TIPO_ATENDE\n,OSM_CNPJ_SOLIC\n,OSM_SAP_COD\n,OSM_LIB_PAG\n,OSM_LIB_PAG_DTHR\n,OSM_LIB_PAG_USR\n,OSM_MTE_SERIE_BENEF\n,OSM_MTE_SEQ_BENEF\n,OSM_OSM_SERIE_BENEF\n,OSM_OSM_NUM_BENEF\n,OSM_LIB_PAG_SERIE\n,OSM_LIB_PAG_NUM\n,OSM_ASO_MES_REF\n,OSM_NUM_EXTERNO\n,OSM_CML_CNV_COD\n,OSM_LEG_COD\n,OSM_CML_CONV_COD\n,OSM_CML_CONV_NOME\n,OSM_LIB_PAG_NFL_NUM\n,OSM_LIB_PAG_NFL_SERIE\n,OSM_IND_COLETA_DOM\n,OSM_MREQ_IND_SLINE\n,osm_usr_login_cad\n,osm_mreq_2\n,osm_mreq_3\n,osm_dt_solic_2\n,osm_dt_solic_3\n,osm_nota_sala_cobranca_mat\n,OSM_MCNV_PROTOCOLO\n,osm_tipo_acidente\n,osm_tipo_doenca\n,osm_tempo_doenca\n,osm_escala_doenca\n,osm_tiss_indic_clinica\n,osm_tiss_tipo_atende\n,OSM_TISS_TIPO_SAIDA\n,osm_sus_idade\n,osm_sus_sexo\n,osm_dthr_saida\n,osm_empnome_solic\n,osm_tiss_guia_principal\n,osm_cnes_solic\n,osm_w_login\n,osm_w_senha\n,osm_num_externo_alfa\n,osm_pln_cod\n,osm_obs_tiss\n,osm_psv_indic\n,osm_imp_etiq\n,osm_ind_web\n,osm_etiqueta_cip_lsf\n,osm_tipo_audit\n,OSM_PAC_ETIQUETA_CIP_LSF\n,osm_planserv_rat_empresa\n,osm_cod_cebim\n,osm_email_result\n,osm_cr_cor\n,osm_planserv_bm_mot_tipo\n,osm_planserv_bm_mot_cod\n,osm_obs_extenso\n,osm_trak_passagem\n,osm_id_alvaro\n,osm_obs_pend_b2b\n,osm_ind_vacina\n,osm_lib_pag_prt\n,osm_tiss_guia_operadora\n,osm_planserv_rat_dt_emis\n,osm_dthr_biometria_unimed\n,osm_resultado_biometria_unimed\n,OSM_IND_ANTECIPADA\n,OSM_ORI_SOL\n,osm_click_protocolo\n,osm_click_requisicao\n,osm_click_ind_integracao\n,osm_dthr_exp\n,osm_orp_num\n,osm_sus_ind_prog_transp\n,osm_mcnv_protocolo_v2\n,osm_token\n,osm_cod_justificativa\n,osm_status_confirmacao\n,osm_id_integra\n,osm_tp_ident_benef\n  FROM dba.osm\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_osm"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data Warehouse/P&P"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Importa CSV Py to AZ')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CSV to AZ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_CNPJ_PY_AZ_FINAL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_DIM_CNPJ",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CNPJ"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Movimento_Estoque')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mov Estoque HTML",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "WITH AUX AS(\nselect operacao_estoque.cd_operacao_estoque,\n    dt_movimento_estoque,\n    movimento_estoque.cd_local_estoque,\n    ds_local_estoque,\n    movimento_estoque.cd_estabelecimento,\n    nm_fantasia_estab,\n    movimento_estoque.nr_documento,\n    movimento_estoque.cd_material,\n    /*case \n        when ds_familia is null then 'Sem classificação'\n        else ds_familia\n        end familia_padrao,*/\n    MATERIAL.CD_CLASSE_MATERIAL,   \n    ds_classe_material classe_material,\n    ds_subgrupo_material Subgrupo,\n    ds_grupo_material Grupo,\n    ds_fabricante Fabricante,\n    ds_reduzida,\n    ds_operacao,\n    ie_entrada_saida,\n    cd_acao,\n    case \n        when ds_operacao in ('Consumo', 'Execução Prescrição', 'Consumo da Produção')\n        then sum(qt_movimento)/(avg(QT_CONV_ESTOQUE_CONSUMO))\n        else sum(qt_movimento)\n        end qt_movimento,\n    sum(case when movimento_estoque_valor.cd_tipo_valor = 5 then - movimento_estoque_valor.vl_movimento else + movimento_estoque_valor.vl_movimento end ) valor_movimento\n    \n    from movimento_estoque\n    left join operacao_estoque\n    on movimento_estoque.cd_operacao_estoque = operacao_estoque.cd_operacao_estoque\n    \n    left join estabelecimento\n    on (movimento_estoque.cd_estabelecimento = estabelecimento.cd_estabelecimento)\n    \n    left join local_estoque\n    on (local_estoque.cd_estabelecimento = movimento_estoque.cd_estabelecimento AND\n        local_estoque.cd_local_estoque = movimento_estoque.cd_local_estoque)\n        \n    left join material\n    on (movimento_estoque.cd_material = material.cd_material) \n    \n    left join material_familia\n    on (material.nr_seq_familia = material_familia.nr_sequencia)\n    \n    left join classe_material\n    on (material.cd_classe_material = classe_material.cd_classe_material)\n    \n    left join subgrupo_material\n    on (classe_material.cd_subgrupo_material = subgrupo_material.cd_subgrupo_material)\n    \n    left join grupo_material\n    on (subgrupo_material.cd_grupo_material = grupo_material.cd_grupo_material)\n    \n    left join mat_fabricante\n    on material.nr_seq_fabric =  mat_fabricante.nr_sequencia\n    \n    left join movimento_estoque_valor\n    on movimento_estoque_valor.nr_movimento_estoque = movimento_estoque.nr_movimento_estoque\n\n    --where dt_movimento_estoque >= '01/01/2020' \n\n    GROUP BY operacao_estoque.cd_operacao_estoque,\n        dt_movimento_estoque,\n        movimento_estoque.cd_local_estoque,\n        ds_local_estoque,\n        movimento_estoque.cd_estabelecimento,\n        nm_fantasia_estab,\n        movimento_estoque.nr_documento,\n        movimento_estoque.cd_material,\n        --case when ds_familia is null then 'Sem classificação' else ds_familia end,\n        material.cd_classe_material,\n        ds_classe_material,\n        ds_subgrupo_material,\n        ds_grupo_material,\n        ds_fabricante,\n        ds_reduzida,\n        ds_operacao,\n        ie_entrada_saida,\n        cd_acao\n)\nSELECT \n    TO_CHAR(A.DT_MOVIMENTO_ESTOQUE,'YYYY-MM-DD') AS DATA_MOVIMENTO\n    ,A.CD_LOCAL_ESTOQUE\n    ,A.DS_LOCAL_ESTOQUE\n    ,A.CD_ESTABELECIMENTO\n    ,A.nm_fantasia_estab                         AS DS_ESTABELECIMENTO\n    ,A.CD_MATERIAL\n    ,A.DS_REDUZIDA                                AS DS_MATERIAL_SHORT\n    ,A.CD_CLASSE_MATERIAL\n    ,A.CLASSE_MATERIAL                           AS DS_CLASSE_MATERIAL\n    ,A.cd_operacao_estoque\n    ,A.DS_OPERACAO\n    ,A.QT_MOVIMENTO\n    ,CASE \n        WHEN A.CD_ACAO = 2 THEN A.VALOR_MOVIMENTO * -1\n        ELSE A.VALOR_MOVIMENTO\n     END VL_MOVIMENTO   \nFROM AUX A\nWHERE TO_CHAR(TRUNC(A.DT_MOVIMENTO_ESTOQUE,'MM'),'YYYY-MM-DD') = TO_CHAR(TRUNC(SYSDATE,'MM'),'YYYY-MM-DD')",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DECLARE @MES INT\nDECLARE @ANO INT\n\nSET @MES = MONTH(GETDATE())\nSET @ANO = YEAR(GETDATE())\n\nDELETE FROM MOVIMENTO_ESTOQUE\nWHERE MONTH(DATA_MOVIMENTO) = @MES\n    AND YEAR(DATA_MOVIMENTO) = @ANO",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOQUE"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO_ESTOQUE"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO"
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO"
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque Delphi",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque HTML",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "WITH AUX AS(\nselect operacao_estoque.cd_operacao_estoque,\n    dt_movimento_estoque,\n    movimento_estoque.cd_local_estoque,\n    ds_local_estoque,\n    movimento_estoque.cd_estabelecimento,\n    nm_fantasia_estab,\n    movimento_estoque.nr_documento,\n    movimento_estoque.cd_material,\n    /*case \n        when ds_familia is null then 'Sem classificação'\n        else ds_familia\n        end familia_padrao,*/\n    MATERIAL.CD_CLASSE_MATERIAL,   \n    ds_classe_material classe_material,\n    ds_subgrupo_material Subgrupo,\n    ds_grupo_material Grupo,\n    ds_fabricante Fabricante,\n    ds_reduzida,\n    ds_operacao,\n    ie_entrada_saida,\n    cd_acao,\n    case \n        when ds_operacao in ('Consumo', 'Execução Prescrição', 'Consumo da Produção')\n        then sum(qt_movimento)/(avg(QT_CONV_ESTOQUE_CONSUMO))\n        else sum(qt_movimento)\n        end qt_movimento,\n    sum(case when movimento_estoque_valor.cd_tipo_valor = 5 then - movimento_estoque_valor.vl_movimento else + movimento_estoque_valor.vl_movimento end ) valor_movimento\n    \n    from movimento_estoque\n    left join operacao_estoque\n    on movimento_estoque.cd_operacao_estoque = operacao_estoque.cd_operacao_estoque\n    \n    left join estabelecimento\n    on (movimento_estoque.cd_estabelecimento = estabelecimento.cd_estabelecimento)\n    \n    left join local_estoque\n    on (local_estoque.cd_estabelecimento = movimento_estoque.cd_estabelecimento AND\n        local_estoque.cd_local_estoque = movimento_estoque.cd_local_estoque)\n        \n    left join material\n    on (movimento_estoque.cd_material = material.cd_material) \n    \n    left join material_familia\n    on (material.nr_seq_familia = material_familia.nr_sequencia)\n    \n    left join classe_material\n    on (material.cd_classe_material = classe_material.cd_classe_material)\n    \n    left join subgrupo_material\n    on (classe_material.cd_subgrupo_material = subgrupo_material.cd_subgrupo_material)\n    \n    left join grupo_material\n    on (subgrupo_material.cd_grupo_material = grupo_material.cd_grupo_material)\n    \n    left join mat_fabricante\n    on material.nr_seq_fabric =  mat_fabricante.nr_sequencia\n    \n    left join movimento_estoque_valor\n    on movimento_estoque_valor.nr_movimento_estoque = movimento_estoque.nr_movimento_estoque\n\n    --where dt_movimento_estoque >= '01/01/2020' \n\n    GROUP BY operacao_estoque.cd_operacao_estoque,\n        dt_movimento_estoque,\n        movimento_estoque.cd_local_estoque,\n        ds_local_estoque,\n        movimento_estoque.cd_estabelecimento,\n        nm_fantasia_estab,\n        movimento_estoque.nr_documento,\n        movimento_estoque.cd_material,\n        --case when ds_familia is null then 'Sem classificação' else ds_familia end,\n        material.cd_classe_material,\n        ds_classe_material,\n        ds_subgrupo_material,\n        ds_grupo_material,\n        ds_fabricante,\n        ds_reduzida,\n        ds_operacao,\n        ie_entrada_saida,\n        cd_acao\n)\nSELECT \n    TO_CHAR(A.DT_MOVIMENTO_ESTOQUE,'YYYY-MM-DD') AS DATA_MOVIMENTO\n    ,A.CD_LOCAL_ESTOQUE\n    ,A.DS_LOCAL_ESTOQUE\n    ,A.CD_ESTABELECIMENTO\n    ,A.nm_fantasia_estab                         AS DS_ESTABELECIMENTO\n    ,A.CD_MATERIAL\n    ,A.DS_REDUZIDA                                AS DS_MATERIAL_SHORT\n    ,A.CD_CLASSE_MATERIAL\n    ,A.CLASSE_MATERIAL                           AS DS_CLASSE_MATERIAL\n    ,A.cd_operacao_estoque\n    ,A.DS_OPERACAO\n    ,A.QT_MOVIMENTO\n    ,CASE \n        WHEN A.CD_ACAO = 2 THEN A.VALOR_MOVIMENTO * -1\n        ELSE A.VALOR_MOVIMENTO\n     END VL_MOVIMENTO   \nFROM AUX A\nWHERE TO_CHAR(TRUNC(A.DT_MOVIMENTO_ESTOQUE,'MM'),'YYYY-MM-DD') = TO_CHAR(TRUNC(SYSDATE,'MM'),'YYYY-MM-DD')",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOQUE"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO_ESTOQUE"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO"
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO"
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque ITG - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque Delphi",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque ITB - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque ITG - Smart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque IOF - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque ITB - Smart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_IOF_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque OFTALMOCLIN - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque IOF - Smart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque HOSL - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque OFTALMOCLIN - Smart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"DATA": {
						"type": "String",
						"defaultValue": "2021-05-01"
					}
				},
				"folder": {
					"name": "Estoque"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Calendario",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "DT_INICIO",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DT_FIM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('\nSELECT DISTINCT\n    CAST(A.TheFirstOfMonth AS VARCHAR(20)) + '' 00:00:00.000'' AS DT_INICIO\n    ,CAST(A.TheLastOfMonth AS VARCHAR(20)) + '' 23:59:59.000'' AS DT_FIM,\n\n     CONVERT(VARCHAR(20),A.TheFirstOfMonth  ,103)  AS DT_INICIO_ORACLE\n    ,CONVERT(VARCHAR(20),A.TheLastOfMonth ,103)  AS DT_FIM_ORACLE\n\nFROM calendar A\nWHERE A.TheFirstOfMonth BETWEEN ','''',variables('DT_INICIO'),'''', ' AND  ','''',variables('DT_FIM'),'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DIN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DT_INICIO",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup Periodo Inicial",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DT_INICIO",
							"value": {
								"value": "@activity('Lookup Periodo Inicial').output.firstRow.Data_Inicial",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DT_FIM",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup Periodo Inicial",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DT_FIM",
							"value": {
								"value": "@activity('Lookup Periodo Inicial').output.firstRow.data_final",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Calendario",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Calendario').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SMART - NF ITG",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "TASY - NF HTML",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat(\n'DECLARE @DT_INICIO AS DATE\n DECLARE @DT_FIM     AS DATE\n\nSET @DT_INICIO = ','''', item().DT_INICIO,'''',\n'SET @DT_FIM = '  , '''', item().DT_FIM,'''',\n' SELECT \n 90 as estabelecimento  ',\n\n '\n     ,nfe_dt_emissao\n    , nfe_dt_entrada\n    , nfe_tipo\n    , nfe_serie\n    , nfe_num\n    , fne_cod\n    , fne_nome_fantasia\n    , ine_mat_cod\n    , mat_desc_resumida\n    , gmm_nome\n    , ine_qtde_entrada\n    , mat_unm_cod_entrada\n    , ine_vlr_unit_entrada\n    , nfe_ipg_aberto\n    , ine_vlr_desconto\n    , ine_vlr_ipi\n    , nfe_aft\n    , nfe_vlr_total\n    , ds_nfe_tipo\n    , nfe_crit_venc\n    , nfe_cpg_parcelas\n    , nfe_ipg_dt_vcto\n    , nfe_parcela_1\nFROM (\n    SELECT cfg.cfg_emp\n        , sba.sba_cod\n        , sba.sba_nome\n        , nfe.nfe_serie\n        , nfe.nfe_num\n        , nfe.nfe_fne_cod\n        , nfe.nfe_tipo\n        , CASE nfe.nfe_tipo\n\n                WHEN ''PR''\n                THEN ''Entrada''\n            WHEN ''SR''\n                THEN ''Simples Remessa''\n            WHEN ''SF''\n                THEN ''Simples Faturamento''\n            WHEN ''DV''\n                THEN ''Devolução''\n            WHEN ''TR''\n                THEN ''Transferência''\n            ELSE ''N/A''\n            END AS ds_nfe_tipo\n        , fne.fne_cod\n        , fne.fne_nome_fantasia\n        , nfe.nfe_vlr_total\n \n \n        , (\n            SELECT TOP 1 i.ipg_dt_vcto\n            FROM cpg c\n            INNER JOIN ipg i\n                ON (\n                        c.cpg_serie = i.ipg_cpg_serie\n                        AND c.cpg_num = i.ipg_cpg_num\n                        )\n            WHERE c.cpg_nfe_serie = nfe_serie\n                AND c.cpg_nfe_num = nfe_num\n                AND c.cpg_nfe_tipo = nfe_tipo\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\n            ORDER BY i.ipg_dt_vcto\n            ) AS nfe_ipg_dt_vcto\n        , (\n            SELECT count(ipg_parc)\n            FROM cpg c\n            INNER JOIN ipg i\n                ON (\n                        c.cpg_serie = i.ipg_cpg_serie\n                        AND c.cpg_num = i.ipg_cpg_num\n                        )\n            WHERE c.cpg_nfe_serie = nfe_serie\n                AND c.cpg_nfe_num = nfe_num\n                AND c.cpg_nfe_tipo = nfe_tipo\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\n            ) AS nfe_cpg_parcelas\n        , nfe.nfe_crit_venc\n        , nfe.nfe_parcela_1\n        , nfe.nfe_dt_emissao\n        , nfe.nfe_dt_entrada\n        , ine.ine_seq\n        , ine.ine_mat_cod\n        , mat.mat_desc_resumida\n        , mat.mat_lma_cod\n        , lma.lma_nome\n        , mat.mat_gmm_cod\n        , gmm.gmm_nome\n        , mat_unm_cod_entrada\n        , ine.ine_qtde AS ine_qtde_entrada\n        , ine.ine_vlr_unit AS ine_vlr_unit_entrada\n        , (\n            SELECT isnull(sum(ipg_valor), 0)\n            FROM cpg c\n            INNER JOIN ipg i\n                ON (\n                        c.cpg_serie = i.ipg_cpg_serie\n                        AND c.cpg_num = i.ipg_cpg_num\n                        )\n            WHERE c.cpg_nfe_serie = nfe_serie\n                AND c.cpg_nfe_num = nfe_num\n                AND c.cpg_nfe_tipo = nfe_tipo\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\n                AND i.ipg_status IN (''A'', ''R'')\n                AND i.ipg_dt_vcto <= @DT_FIM\n            ) AS nfe_ipg_aberto\n        , mat_unm_cod_saida\n        , '' AS solic\n        , '' AS DATA_solic\n        , convert(VARCHAR, ine_aft_serie) + ''.'' + convert(VARCHAR, ine_aft_num) AS nfe_aft\n        , aft_dthr\n        , ine.ine_qtde * mat_fat_conv_s_v AS ine_qtde_saida\n        , ine.ine_vlr_unit / mat_fat_conv_s_v AS ine_vlr_saida\n        , ine.ine_vlr_ipi\n        , ine.ine_vlr_desconto\n        , (\n            SELECT TOP 1 f.fne_cod\n            FROM nfe n WITH (NOLOCK)\n            INNER JOIN ine i WITH (NOLOCK)\n                ON (\n                        n.nfe_fne_cod = i.ine_fne_cod\n                        AND n.nfe_serie = i.ine_nfe_serie\n                        AND n.nfe_num = i.ine_nfe_num\n                        AND n.nfe_tipo = i.ine_nfe_tipo\n                          )\n            LEFT OUTER JOIN fne f WITH (NOLOCK)\n                ON ine.ine_fne_cod = fne.fne_cod\n            WHERE i.ine_mat_cod = ine.ine_mat_cod\n                AND f.fne_cod = ine.ine_fne_cod\n                AND (\n                    n.nfe_dt_entrada >= @DT_INICIO\n                    AND n.nfe_dt_entrada <= @DT_FIM\n                    )\n            ORDER BY n.nfe_dt_entrada DESC\n            ) AS ine_fne_cod\n        , (\n            SELECT TOP 1 f.fne_nome_fantasia\n            FROM nfe n WITH (NOLOCK)\n            INNER JOIN ine i WITH (NOLOCK)\n                ON (\n                        n.nfe_fne_cod = i.ine_fne_cod\n                        AND n.nfe_serie = i.ine_nfe_serie\n                        AND n.nfe_num = i.ine_nfe_num\n                        AND n.nfe_tipo = i.ine_nfe_tipo\n                        )\n            LEFT OUTER JOIN fne f WITH (NOLOCK)\n                ON ine.ine_fne_cod = fne.fne_cod\n            WHERE i.ine_mat_cod = ine.ine_mat_cod\n                AND f.fne_cod = ine.ine_fne_cod\n                AND (\n                   n.nfe_dt_entrada >= @DT_INICIO\n                 AND n.nfe_dt_entrada <= @DT_FIM\n                    )\n            ORDER BY n.nfe_dt_entrada DESC\n            ) AS ine_fne_nome_fantasia\n        , replace(replace(replace(emp_cgc, ''.'', ''''), ''/'', ''''), ''-'', '''') AS emp_cgc\n    FROM nfe WITH (NOLOCK)\n    INNER JOIN ine WITH (NOLOCK)\n        ON (\n                nfe.nfe_fne_cod = ine.ine_fne_cod\n                AND nfe.nfe_serie = ine.ine_nfe_serie\n                AND nfe.nfe_num = ine.ine_nfe_num\n                AND nfe.nfe_tipo = ine.ine_nfe_tipo\n                )\n    LEFT OUTER JOIN fne WITH (NOLOCK)\n        ON (convert(VARCHAR, ine.ine_fne_cod) = convert(VARCHAR, fne.fne_cod))\n    LEFT OUTER JOIN mat WITH (NOLOCK)\n        ON (mat.mat_cod = ine.ine_mat_cod)\n    LEFT OUTER JOIN lma WITH (NOLOCK)\n       ON (\n                lma.lma_cod = mat.mat_lma_cod\n                AND lma.lma_gmm_cod = mat.mat_gmm_cod\n                )\n    LEFT OUTER JOIN gmm WITH (NOLOCK)\n        ON (lma.lma_gmm_cod = gmm.gmm_cod)\n    LEFT OUTER JOIN sba WITH (NOLOCK)\n        ON (sba.sba_cod = nfe.nfe_sba_cod)\n    LEFT OUTER JOIN aft WITH (NOLOCK)\n        ON (\n               aft_serie = ine_aft_serie\n                AND aft_num = ine_aft_num\n                )\n    LEFT OUTER JOIN emp WITH (NOLOCK)\n        ON (emp.emp_fne_cod = fne.FNE_COD)\n    CROSS JOIN cfg\n    WHERE (\n            nfe.nfe_dt_entrada >= @DT_INICIO\n            AND nfe.nfe_dt_entrada <= @DT_FIM\n            )\n        AND (\n            fne.fne_cod IN (''%'')\n            OR (''%'' IN (''%''))\n            )\n    ) AS t1\nORDER BY sba_cod\n    , sba_nome\n    , nfe_tipo\n    , nfe_dt_entrada\n    , nfe_serie\n    , nfe_num\n    , ine_seq\n '\n\n)\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SMART_ITAIGARA_PrdDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_DINAMICO",
											"type": "DatasetReference",
											"parameters": {
												"schema_destino": "STG",
												"tabela_destino": "SUP_NFS_SMART"
											}
										}
									]
								},
								{
									"name": "SMART - NF ITB",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SMART - NF ITG",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat(\r\n'DECLARE @DT_INICIO AS DATE\r\n DECLARE @DT_FIM     AS DATE\r\n\r\nSET @DT_INICIO = ','''', item().DT_INICIO,'''',\r\n'SET @DT_FIM = '  , '''', item().DT_FIM,'''',\r\n' SELECT \r\n 91 as estabelecimento  ',\r\n\r\n '\r\n     ,nfe_dt_emissao\r\n    , nfe_dt_entrada\r\n    , nfe_tipo\r\n    , nfe_serie\r\n    , nfe_num\r\n    , fne_cod\r\n    , fne_nome_fantasia\r\n    , ine_mat_cod\r\n    , mat_desc_resumida\r\n    , gmm_nome\r\n    , ine_qtde_entrada\r\n    , mat_unm_cod_entrada\r\n    , ine_vlr_unit_entrada\r\n    , nfe_ipg_aberto\r\n    , ine_vlr_desconto\r\n    , ine_vlr_ipi\r\n    , nfe_aft\r\n    , nfe_vlr_total\r\n    , ds_nfe_tipo\r\n    , nfe_crit_venc\r\n    , nfe_cpg_parcelas\r\n    , nfe_ipg_dt_vcto\r\n    , nfe_parcela_1\r\nFROM (\r\n    SELECT cfg.cfg_emp\r\n        , sba.sba_cod\r\n        , sba.sba_nome\r\n        , nfe.nfe_serie\r\n        , nfe.nfe_num\r\n        , nfe.nfe_fne_cod\r\n        , nfe.nfe_tipo\r\n        , CASE nfe.nfe_tipo\r\n\r\n                WHEN ''PR''\r\n                THEN ''Entrada''\r\n            WHEN ''SR''\r\n                THEN ''Simples Remessa''\r\n            WHEN ''SF''\r\n                THEN ''Simples Faturamento''\r\n            WHEN ''DV''\r\n                THEN ''Devolução''\r\n            WHEN ''TR''\r\n                THEN ''Transferência''\r\n            ELSE ''N/A''\r\n            END AS ds_nfe_tipo\r\n        , fne.fne_cod\r\n        , fne.fne_nome_fantasia\r\n        , nfe.nfe_vlr_total\r\n \r\n \r\n        , (\r\n            SELECT TOP 1 i.ipg_dt_vcto\r\n            FROM cpg c\r\n            INNER JOIN ipg i\r\n                ON (\r\n                        c.cpg_serie = i.ipg_cpg_serie\r\n                        AND c.cpg_num = i.ipg_cpg_num\r\n                        )\r\n            WHERE c.cpg_nfe_serie = nfe_serie\r\n                AND c.cpg_nfe_num = nfe_num\r\n                AND c.cpg_nfe_tipo = nfe_tipo\r\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\r\n            ORDER BY i.ipg_dt_vcto\r\n            ) AS nfe_ipg_dt_vcto\r\n        , (\r\n            SELECT count(ipg_parc)\r\n            FROM cpg c\r\n            INNER JOIN ipg i\r\n                ON (\r\n                        c.cpg_serie = i.ipg_cpg_serie\r\n                        AND c.cpg_num = i.ipg_cpg_num\r\n                        )\r\n            WHERE c.cpg_nfe_serie = nfe_serie\r\n                AND c.cpg_nfe_num = nfe_num\r\n                AND c.cpg_nfe_tipo = nfe_tipo\r\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\r\n            ) AS nfe_cpg_parcelas\r\n        , nfe.nfe_crit_venc\r\n        , nfe.nfe_parcela_1\r\n        , nfe.nfe_dt_emissao\r\n        , nfe.nfe_dt_entrada\r\n        , ine.ine_seq\r\n        , ine.ine_mat_cod\r\n        , mat.mat_desc_resumida\r\n        , mat.mat_lma_cod\r\n        , lma.lma_nome\r\n        , mat.mat_gmm_cod\r\n        , gmm.gmm_nome\r\n        , mat_unm_cod_entrada\r\n        , ine.ine_qtde AS ine_qtde_entrada\r\n        , ine.ine_vlr_unit AS ine_vlr_unit_entrada\r\n        , (\r\n            SELECT isnull(sum(ipg_valor), 0)\r\n            FROM cpg c\r\n            INNER JOIN ipg i\r\n                ON (\r\n                        c.cpg_serie = i.ipg_cpg_serie\r\n                        AND c.cpg_num = i.ipg_cpg_num\r\n                        )\r\n            WHERE c.cpg_nfe_serie = nfe_serie\r\n                AND c.cpg_nfe_num = nfe_num\r\n                AND c.cpg_nfe_tipo = nfe_tipo\r\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\r\n                AND i.ipg_status IN (''A'', ''R'')\r\n                AND i.ipg_dt_vcto <= @DT_FIM\r\n            ) AS nfe_ipg_aberto\r\n        , mat_unm_cod_saida\r\n        , '' AS solic\r\n        , '' AS DATA_solic\r\n        , convert(VARCHAR, ine_aft_serie) + ''.'' + convert(VARCHAR, ine_aft_num) AS nfe_aft\r\n        , aft_dthr\r\n        , ine.ine_qtde * mat_fat_conv_s_v AS ine_qtde_saida\r\n        , ine.ine_vlr_unit / mat_fat_conv_s_v AS ine_vlr_saida\r\n        , ine.ine_vlr_ipi\r\n        , ine.ine_vlr_desconto\r\n        , (\r\n            SELECT TOP 1 f.fne_cod\r\n            FROM nfe n WITH (NOLOCK)\r\n            INNER JOIN ine i WITH (NOLOCK)\r\n                ON (\r\n                        n.nfe_fne_cod = i.ine_fne_cod\r\n                        AND n.nfe_serie = i.ine_nfe_serie\r\n                        AND n.nfe_num = i.ine_nfe_num\r\n                        AND n.nfe_tipo = i.ine_nfe_tipo\r\n                          )\r\n            LEFT OUTER JOIN fne f WITH (NOLOCK)\r\n                ON ine.ine_fne_cod = fne.fne_cod\r\n            WHERE i.ine_mat_cod = ine.ine_mat_cod\r\n                AND f.fne_cod = ine.ine_fne_cod\r\n                AND (\r\n                    n.nfe_dt_entrada >= @DT_INICIO\r\n                    AND n.nfe_dt_entrada <= @DT_FIM\r\n                    )\r\n            ORDER BY n.nfe_dt_entrada DESC\r\n            ) AS ine_fne_cod\r\n        , (\r\n            SELECT TOP 1 f.fne_nome_fantasia\r\n            FROM nfe n WITH (NOLOCK)\r\n            INNER JOIN ine i WITH (NOLOCK)\r\n                ON (\r\n                        n.nfe_fne_cod = i.ine_fne_cod\r\n                        AND n.nfe_serie = i.ine_nfe_serie\r\n                        AND n.nfe_num = i.ine_nfe_num\r\n                        AND n.nfe_tipo = i.ine_nfe_tipo\r\n                        )\r\n            LEFT OUTER JOIN fne f WITH (NOLOCK)\r\n                ON ine.ine_fne_cod = fne.fne_cod\r\n            WHERE i.ine_mat_cod = ine.ine_mat_cod\r\n                AND f.fne_cod = ine.ine_fne_cod\r\n                AND (\r\n                   n.nfe_dt_entrada >= @DT_INICIO\r\n                 AND n.nfe_dt_entrada <= @DT_FIM\r\n                    )\r\n            ORDER BY n.nfe_dt_entrada DESC\r\n            ) AS ine_fne_nome_fantasia\r\n        , replace(replace(replace(emp_cgc, ''.'', ''''), ''/'', ''''), ''-'', '''') AS emp_cgc\r\n    FROM nfe WITH (NOLOCK)\r\n    INNER JOIN ine WITH (NOLOCK)\r\n        ON (\r\n                nfe.nfe_fne_cod = ine.ine_fne_cod\r\n                AND nfe.nfe_serie = ine.ine_nfe_serie\r\n                AND nfe.nfe_num = ine.ine_nfe_num\r\n                AND nfe.nfe_tipo = ine.ine_nfe_tipo\r\n                )\r\n    LEFT OUTER JOIN fne WITH (NOLOCK)\r\n        ON (convert(VARCHAR, ine.ine_fne_cod) = convert(VARCHAR, fne.fne_cod))\r\n    LEFT OUTER JOIN mat WITH (NOLOCK)\r\n        ON (mat.mat_cod = ine.ine_mat_cod)\r\n    LEFT OUTER JOIN lma WITH (NOLOCK)\r\n       ON (\r\n                lma.lma_cod = mat.mat_lma_cod\r\n                AND lma.lma_gmm_cod = mat.mat_gmm_cod\r\n                )\r\n    LEFT OUTER JOIN gmm WITH (NOLOCK)\r\n        ON (lma.lma_gmm_cod = gmm.gmm_cod)\r\n    LEFT OUTER JOIN sba WITH (NOLOCK)\r\n        ON (sba.sba_cod = nfe.nfe_sba_cod)\r\n    LEFT OUTER JOIN aft WITH (NOLOCK)\r\n        ON (\r\n               aft_serie = ine_aft_serie\r\n                AND aft_num = ine_aft_num\r\n                )\r\n    LEFT OUTER JOIN emp WITH (NOLOCK)\r\n        ON (emp.emp_fne_cod = fne.FNE_COD)\r\n    CROSS JOIN cfg\r\n    WHERE (\r\n            nfe.nfe_dt_entrada >= @DT_INICIO\r\n            AND nfe.nfe_dt_entrada <= @DT_FIM\r\n            )\r\n        AND (\r\n            fne.fne_cod IN (''%'')\r\n            OR (''%'' IN (''%''))\r\n            )\r\n    ) AS t1\r\nORDER BY sba_cod\r\n    , sba_nome\r\n    , nfe_tipo\r\n    , nfe_dt_entrada\r\n    , nfe_serie\r\n    , nfe_num\r\n    , ine_seq\r\n '\r\n\r\n)\r\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SMART_ITABUNA_PrdDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_DINAMICO",
											"type": "DatasetReference",
											"parameters": {
												"schema_destino": "STG",
												"tabela_destino": "SUP_NFS_SMART"
											}
										}
									]
								},
								{
									"name": "SMART - NF IOF",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SMART - NF ITB",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat(\n'DECLARE @DT_INICIO AS DATE\n DECLARE @DT_FIM     AS DATE\n\nSET @DT_INICIO = ','''', item().DT_INICIO,'''',\n'SET @DT_FIM = '  , '''', item().DT_FIM,'''',\n' SELECT \n 92 as estabelecimento  ',\n\n '\n     ,nfe_dt_emissao\n    , nfe_dt_entrada\n    , nfe_tipo\n    , nfe_serie\n    , nfe_num\n    , fne_cod\n    , fne_nome_fantasia\n    , ine_mat_cod\n    , mat_desc_resumida\n    , gmm_nome\n    , ine_qtde_entrada\n    , mat_unm_cod_entrada\n    , ine_vlr_unit_entrada\n    , nfe_ipg_aberto\n    , ine_vlr_desconto\n    , ine_vlr_ipi\n    , nfe_aft\n    , nfe_vlr_total\n    , ds_nfe_tipo\n    , nfe_crit_venc\n    , nfe_cpg_parcelas\n    , nfe_ipg_dt_vcto\n    , nfe_parcela_1\nFROM (\n    SELECT cfg.cfg_emp\n        , sba.sba_cod\n        , sba.sba_nome\n        , nfe.nfe_serie\n        , nfe.nfe_num\n        , nfe.nfe_fne_cod\n        , nfe.nfe_tipo\n        , CASE nfe.nfe_tipo\n\n                WHEN ''PR''\n                THEN ''Entrada''\n            WHEN ''SR''\n                THEN ''Simples Remessa''\n            WHEN ''SF''\n                THEN ''Simples Faturamento''\n            WHEN ''DV''\n                THEN ''Devolução''\n            WHEN ''TR''\n                THEN ''Transferência''\n            ELSE ''N/A''\n            END AS ds_nfe_tipo\n        , fne.fne_cod\n        , fne.fne_nome_fantasia\n        , nfe.nfe_vlr_total\n \n \n        , (\n            SELECT TOP 1 i.ipg_dt_vcto\n            FROM cpg c\n            INNER JOIN ipg i\n                ON (\n                        c.cpg_serie = i.ipg_cpg_serie\n                        AND c.cpg_num = i.ipg_cpg_num\n                        )\n            WHERE c.cpg_nfe_serie = nfe_serie\n                AND c.cpg_nfe_num = nfe_num\n                AND c.cpg_nfe_tipo = nfe_tipo\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\n            ORDER BY i.ipg_dt_vcto\n            ) AS nfe_ipg_dt_vcto\n        , (\n            SELECT count(ipg_parc)\n            FROM cpg c\n            INNER JOIN ipg i\n                ON (\n                        c.cpg_serie = i.ipg_cpg_serie\n                        AND c.cpg_num = i.ipg_cpg_num\n                        )\n            WHERE c.cpg_nfe_serie = nfe_serie\n                AND c.cpg_nfe_num = nfe_num\n                AND c.cpg_nfe_tipo = nfe_tipo\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\n            ) AS nfe_cpg_parcelas\n        , nfe.nfe_crit_venc\n        , nfe.nfe_parcela_1\n        , nfe.nfe_dt_emissao\n        , nfe.nfe_dt_entrada\n        , ine.ine_seq\n        , ine.ine_mat_cod\n        , mat.mat_desc_resumida\n        , mat.mat_lma_cod\n        , lma.lma_nome\n        , mat.mat_gmm_cod\n        , gmm.gmm_nome\n        , mat_unm_cod_entrada\n        , ine.ine_qtde AS ine_qtde_entrada\n        , ine.ine_vlr_unit AS ine_vlr_unit_entrada\n        , (\n            SELECT isnull(sum(ipg_valor), 0)\n            FROM cpg c\n            INNER JOIN ipg i\n                ON (\n                        c.cpg_serie = i.ipg_cpg_serie\n                        AND c.cpg_num = i.ipg_cpg_num\n                        )\n            WHERE c.cpg_nfe_serie = nfe_serie\n                AND c.cpg_nfe_num = nfe_num\n                AND c.cpg_nfe_tipo = nfe_tipo\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\n                AND i.ipg_status IN (''A'', ''R'')\n                AND i.ipg_dt_vcto <= @DT_FIM\n            ) AS nfe_ipg_aberto\n        , mat_unm_cod_saida\n        , '' AS solic\n        , '' AS DATA_solic\n        , convert(VARCHAR, ine_aft_serie) + ''.'' + convert(VARCHAR, ine_aft_num) AS nfe_aft\n        , aft_dthr\n        , ine.ine_qtde * mat_fat_conv_s_v AS ine_qtde_saida\n        , ine.ine_vlr_unit / mat_fat_conv_s_v AS ine_vlr_saida\n        , ine.ine_vlr_ipi\n        , ine.ine_vlr_desconto\n        , (\n            SELECT TOP 1 f.fne_cod\n            FROM nfe n WITH (NOLOCK)\n            INNER JOIN ine i WITH (NOLOCK)\n                ON (\n                        n.nfe_fne_cod = i.ine_fne_cod\n                        AND n.nfe_serie = i.ine_nfe_serie\n                        AND n.nfe_num = i.ine_nfe_num\n                        AND n.nfe_tipo = i.ine_nfe_tipo\n                          )\n            LEFT OUTER JOIN fne f WITH (NOLOCK)\n                ON ine.ine_fne_cod = fne.fne_cod\n            WHERE i.ine_mat_cod = ine.ine_mat_cod\n                AND f.fne_cod = ine.ine_fne_cod\n                AND (\n                    n.nfe_dt_entrada >= @DT_INICIO\n                    AND n.nfe_dt_entrada <= @DT_FIM\n                    )\n            ORDER BY n.nfe_dt_entrada DESC\n            ) AS ine_fne_cod\n        , (\n            SELECT TOP 1 f.fne_nome_fantasia\n            FROM nfe n WITH (NOLOCK)\n            INNER JOIN ine i WITH (NOLOCK)\n                ON (\n                        n.nfe_fne_cod = i.ine_fne_cod\n                        AND n.nfe_serie = i.ine_nfe_serie\n                        AND n.nfe_num = i.ine_nfe_num\n                        AND n.nfe_tipo = i.ine_nfe_tipo\n                        )\n            LEFT OUTER JOIN fne f WITH (NOLOCK)\n                ON ine.ine_fne_cod = fne.fne_cod\n            WHERE i.ine_mat_cod = ine.ine_mat_cod\n                AND f.fne_cod = ine.ine_fne_cod\n                AND (\n                   n.nfe_dt_entrada >= @DT_INICIO\n                 AND n.nfe_dt_entrada <= @DT_FIM\n                    )\n            ORDER BY n.nfe_dt_entrada DESC\n            ) AS ine_fne_nome_fantasia\n        , replace(replace(replace(emp_cgc, ''.'', ''''), ''/'', ''''), ''-'', '''') AS emp_cgc\n    FROM nfe WITH (NOLOCK)\n    INNER JOIN ine WITH (NOLOCK)\n        ON (\n                nfe.nfe_fne_cod = ine.ine_fne_cod\n                AND nfe.nfe_serie = ine.ine_nfe_serie\n                AND nfe.nfe_num = ine.ine_nfe_num\n                AND nfe.nfe_tipo = ine.ine_nfe_tipo\n                )\n    LEFT OUTER JOIN fne WITH (NOLOCK)\n        ON (convert(VARCHAR, ine.ine_fne_cod) = convert(VARCHAR, fne.fne_cod))\n    LEFT OUTER JOIN mat WITH (NOLOCK)\n        ON (mat.mat_cod = ine.ine_mat_cod)\n    LEFT OUTER JOIN lma WITH (NOLOCK)\n       ON (\n                lma.lma_cod = mat.mat_lma_cod\n                AND lma.lma_gmm_cod = mat.mat_gmm_cod\n                )\n    LEFT OUTER JOIN gmm WITH (NOLOCK)\n        ON (lma.lma_gmm_cod = gmm.gmm_cod)\n    LEFT OUTER JOIN sba WITH (NOLOCK)\n        ON (sba.sba_cod = nfe.nfe_sba_cod)\n    LEFT OUTER JOIN aft WITH (NOLOCK)\n        ON (\n               aft_serie = ine_aft_serie\n                AND aft_num = ine_aft_num\n                )\n    LEFT OUTER JOIN emp WITH (NOLOCK)\n        ON (emp.emp_fne_cod = fne.FNE_COD)\n    CROSS JOIN cfg\n    WHERE (\n            nfe.nfe_dt_entrada >= @DT_INICIO\n            AND nfe.nfe_dt_entrada <= @DT_FIM\n            )\n        AND (\n            fne.fne_cod IN (''%'')\n            OR (''%'' IN (''%''))\n            )\n    ) AS t1\nORDER BY sba_cod\n    , sba_nome\n    , nfe_tipo\n    , nfe_dt_entrada\n    , nfe_serie\n    , nfe_num\n    , ine_seq\n '\n\n)\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SMART_IOF_PrdDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_DINAMICO",
											"type": "DatasetReference",
											"parameters": {
												"schema_destino": "STG",
												"tabela_destino": "SUP_NFS_SMART"
											}
										}
									]
								},
								{
									"name": "SMART - NF OFT",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SMART - NF IOF",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat(\r\n'DECLARE @DT_INICIO AS DATE\r\n DECLARE @DT_FIM     AS DATE\r\n\r\nSET @DT_INICIO = ','''', item().DT_INICIO,'''',\r\n'SET @DT_FIM = '  , '''', item().DT_FIM,'''',\r\n' SELECT \r\n 93 as estabelecimento  ',\r\n\r\n '\r\n     ,nfe_dt_emissao\r\n    , nfe_dt_entrada\r\n    , nfe_tipo\r\n    , nfe_serie\r\n    , nfe_num\r\n    , fne_cod\r\n    , fne_nome_fantasia\r\n    , ine_mat_cod\r\n    , mat_desc_resumida\r\n    , gmm_nome\r\n    , ine_qtde_entrada\r\n    , mat_unm_cod_entrada\r\n    , ine_vlr_unit_entrada\r\n    , nfe_ipg_aberto\r\n    , ine_vlr_desconto\r\n    , ine_vlr_ipi\r\n    , nfe_aft\r\n    , nfe_vlr_total\r\n    , ds_nfe_tipo\r\n    , nfe_crit_venc\r\n    , nfe_cpg_parcelas\r\n    , nfe_ipg_dt_vcto\r\n    , nfe_parcela_1\r\nFROM (\r\n    SELECT cfg.cfg_emp\r\n        , sba.sba_cod\r\n        , sba.sba_nome\r\n        , nfe.nfe_serie\r\n        , nfe.nfe_num\r\n        , nfe.nfe_fne_cod\r\n        , nfe.nfe_tipo\r\n        , CASE nfe.nfe_tipo\r\n\r\n                WHEN ''PR''\r\n                THEN ''Entrada''\r\n            WHEN ''SR''\r\n                THEN ''Simples Remessa''\r\n            WHEN ''SF''\r\n                THEN ''Simples Faturamento''\r\n            WHEN ''DV''\r\n                THEN ''Devolução''\r\n            WHEN ''TR''\r\n                THEN ''Transferência''\r\n            ELSE ''N/A''\r\n            END AS ds_nfe_tipo\r\n        , fne.fne_cod\r\n        , fne.fne_nome_fantasia\r\n        , nfe.nfe_vlr_total\r\n \r\n \r\n        , (\r\n            SELECT TOP 1 i.ipg_dt_vcto\r\n            FROM cpg c\r\n            INNER JOIN ipg i\r\n                ON (\r\n                        c.cpg_serie = i.ipg_cpg_serie\r\n                        AND c.cpg_num = i.ipg_cpg_num\r\n                        )\r\n            WHERE c.cpg_nfe_serie = nfe_serie\r\n                AND c.cpg_nfe_num = nfe_num\r\n                AND c.cpg_nfe_tipo = nfe_tipo\r\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\r\n            ORDER BY i.ipg_dt_vcto\r\n            ) AS nfe_ipg_dt_vcto\r\n        , (\r\n            SELECT count(ipg_parc)\r\n            FROM cpg c\r\n            INNER JOIN ipg i\r\n                ON (\r\n                        c.cpg_serie = i.ipg_cpg_serie\r\n                        AND c.cpg_num = i.ipg_cpg_num\r\n                        )\r\n            WHERE c.cpg_nfe_serie = nfe_serie\r\n                AND c.cpg_nfe_num = nfe_num\r\n                AND c.cpg_nfe_tipo = nfe_tipo\r\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\r\n            ) AS nfe_cpg_parcelas\r\n        , nfe.nfe_crit_venc\r\n        , nfe.nfe_parcela_1\r\n        , nfe.nfe_dt_emissao\r\n        , nfe.nfe_dt_entrada\r\n        , ine.ine_seq\r\n        , ine.ine_mat_cod\r\n        , mat.mat_desc_resumida\r\n        , mat.mat_lma_cod\r\n        , lma.lma_nome\r\n        , mat.mat_gmm_cod\r\n        , gmm.gmm_nome\r\n        , mat_unm_cod_entrada\r\n        , ine.ine_qtde AS ine_qtde_entrada\r\n        , ine.ine_vlr_unit AS ine_vlr_unit_entrada\r\n        , (\r\n            SELECT isnull(sum(ipg_valor), 0)\r\n            FROM cpg c\r\n            INNER JOIN ipg i\r\n                ON (\r\n                        c.cpg_serie = i.ipg_cpg_serie\r\n                        AND c.cpg_num = i.ipg_cpg_num\r\n                        )\r\n            WHERE c.cpg_nfe_serie = nfe_serie\r\n                AND c.cpg_nfe_num = nfe_num\r\n                AND c.cpg_nfe_tipo = nfe_tipo\r\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\r\n                AND i.ipg_status IN (''A'', ''R'')\r\n                AND i.ipg_dt_vcto <= @DT_FIM\r\n            ) AS nfe_ipg_aberto\r\n        , mat_unm_cod_saida\r\n        , '' AS solic\r\n        , '' AS DATA_solic\r\n        , convert(VARCHAR, ine_aft_serie) + ''.'' + convert(VARCHAR, ine_aft_num) AS nfe_aft\r\n        , aft_dthr\r\n        , ine.ine_qtde * mat_fat_conv_s_v AS ine_qtde_saida\r\n        , ine.ine_vlr_unit / mat_fat_conv_s_v AS ine_vlr_saida\r\n        , ine.ine_vlr_ipi\r\n        , ine.ine_vlr_desconto\r\n        , (\r\n            SELECT TOP 1 f.fne_cod\r\n            FROM nfe n WITH (NOLOCK)\r\n            INNER JOIN ine i WITH (NOLOCK)\r\n                ON (\r\n                        n.nfe_fne_cod = i.ine_fne_cod\r\n                        AND n.nfe_serie = i.ine_nfe_serie\r\n                        AND n.nfe_num = i.ine_nfe_num\r\n                        AND n.nfe_tipo = i.ine_nfe_tipo\r\n                          )\r\n            LEFT OUTER JOIN fne f WITH (NOLOCK)\r\n                ON ine.ine_fne_cod = fne.fne_cod\r\n            WHERE i.ine_mat_cod = ine.ine_mat_cod\r\n                AND f.fne_cod = ine.ine_fne_cod\r\n                AND (\r\n                    n.nfe_dt_entrada >= @DT_INICIO\r\n                    AND n.nfe_dt_entrada <= @DT_FIM\r\n                    )\r\n            ORDER BY n.nfe_dt_entrada DESC\r\n            ) AS ine_fne_cod\r\n        , (\r\n            SELECT TOP 1 f.fne_nome_fantasia\r\n            FROM nfe n WITH (NOLOCK)\r\n            INNER JOIN ine i WITH (NOLOCK)\r\n                ON (\r\n                        n.nfe_fne_cod = i.ine_fne_cod\r\n                        AND n.nfe_serie = i.ine_nfe_serie\r\n                        AND n.nfe_num = i.ine_nfe_num\r\n                        AND n.nfe_tipo = i.ine_nfe_tipo\r\n                        )\r\n            LEFT OUTER JOIN fne f WITH (NOLOCK)\r\n                ON ine.ine_fne_cod = fne.fne_cod\r\n            WHERE i.ine_mat_cod = ine.ine_mat_cod\r\n                AND f.fne_cod = ine.ine_fne_cod\r\n                AND (\r\n                   n.nfe_dt_entrada >= @DT_INICIO\r\n                 AND n.nfe_dt_entrada <= @DT_FIM\r\n                    )\r\n            ORDER BY n.nfe_dt_entrada DESC\r\n            ) AS ine_fne_nome_fantasia\r\n        , replace(replace(replace(emp_cgc, ''.'', ''''), ''/'', ''''), ''-'', '''') AS emp_cgc\r\n    FROM nfe WITH (NOLOCK)\r\n    INNER JOIN ine WITH (NOLOCK)\r\n        ON (\r\n                nfe.nfe_fne_cod = ine.ine_fne_cod\r\n                AND nfe.nfe_serie = ine.ine_nfe_serie\r\n                AND nfe.nfe_num = ine.ine_nfe_num\r\n                AND nfe.nfe_tipo = ine.ine_nfe_tipo\r\n                )\r\n    LEFT OUTER JOIN fne WITH (NOLOCK)\r\n        ON (convert(VARCHAR, ine.ine_fne_cod) = convert(VARCHAR, fne.fne_cod))\r\n    LEFT OUTER JOIN mat WITH (NOLOCK)\r\n        ON (mat.mat_cod = ine.ine_mat_cod)\r\n    LEFT OUTER JOIN lma WITH (NOLOCK)\r\n       ON (\r\n                lma.lma_cod = mat.mat_lma_cod\r\n                AND lma.lma_gmm_cod = mat.mat_gmm_cod\r\n                )\r\n    LEFT OUTER JOIN gmm WITH (NOLOCK)\r\n        ON (lma.lma_gmm_cod = gmm.gmm_cod)\r\n    LEFT OUTER JOIN sba WITH (NOLOCK)\r\n        ON (sba.sba_cod = nfe.nfe_sba_cod)\r\n    LEFT OUTER JOIN aft WITH (NOLOCK)\r\n        ON (\r\n               aft_serie = ine_aft_serie\r\n                AND aft_num = ine_aft_num\r\n                )\r\n    LEFT OUTER JOIN emp WITH (NOLOCK)\r\n        ON (emp.emp_fne_cod = fne.FNE_COD)\r\n    CROSS JOIN cfg\r\n    WHERE (\r\n            nfe.nfe_dt_entrada >= @DT_INICIO\r\n            AND nfe.nfe_dt_entrada <= @DT_FIM\r\n            )\r\n        AND (\r\n            fne.fne_cod IN (''%'')\r\n            OR (''%'' IN (''%''))\r\n            )\r\n    ) AS t1\r\nORDER BY sba_cod\r\n    , sba_nome\r\n    , nfe_tipo\r\n    , nfe_dt_entrada\r\n    , nfe_serie\r\n    , nfe_num\r\n    , ine_seq\r\n '\r\n\r\n)\r\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_DINAMICO",
											"type": "DatasetReference",
											"parameters": {
												"schema_destino": "STG",
												"tabela_destino": "SUP_NFS_SMART"
											}
										}
									]
								},
								{
									"name": "SMART - NF HOSL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SMART - NF OFT",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat(\r\n'DECLARE @DT_INICIO AS DATE\r\n DECLARE @DT_FIM     AS DATE\r\n\r\nSET @DT_INICIO = ','''', item().DT_INICIO,'''',\r\n'SET @DT_FIM = '  , '''', item().DT_FIM,'''',\r\n' SELECT \r\n 94 as estabelecimento  ',\r\n\r\n '\r\n     ,nfe_dt_emissao\r\n    , nfe_dt_entrada\r\n    , nfe_tipo\r\n    , nfe_serie\r\n    , nfe_num\r\n    , fne_cod\r\n    , fne_nome_fantasia\r\n    , ine_mat_cod\r\n    , mat_desc_resumida\r\n    , gmm_nome\r\n    , ine_qtde_entrada\r\n    , mat_unm_cod_entrada\r\n    , ine_vlr_unit_entrada\r\n    , nfe_ipg_aberto\r\n    , ine_vlr_desconto\r\n    , ine_vlr_ipi\r\n    , nfe_aft\r\n    , nfe_vlr_total\r\n    , ds_nfe_tipo\r\n    , nfe_crit_venc\r\n    , nfe_cpg_parcelas\r\n    , nfe_ipg_dt_vcto\r\n    , nfe_parcela_1\r\nFROM (\r\n    SELECT cfg.cfg_emp\r\n        , sba.sba_cod\r\n        , sba.sba_nome\r\n        , nfe.nfe_serie\r\n        , nfe.nfe_num\r\n        , nfe.nfe_fne_cod\r\n        , nfe.nfe_tipo\r\n        , CASE nfe.nfe_tipo\r\n\r\n                WHEN ''PR''\r\n                THEN ''Entrada''\r\n            WHEN ''SR''\r\n                THEN ''Simples Remessa''\r\n            WHEN ''SF''\r\n                THEN ''Simples Faturamento''\r\n            WHEN ''DV''\r\n                THEN ''Devolução''\r\n            WHEN ''TR''\r\n                THEN ''Transferência''\r\n            ELSE ''N/A''\r\n            END AS ds_nfe_tipo\r\n        , fne.fne_cod\r\n        , fne.fne_nome_fantasia\r\n        , nfe.nfe_vlr_total\r\n \r\n \r\n        , (\r\n            SELECT TOP 1 i.ipg_dt_vcto\r\n            FROM cpg c\r\n            INNER JOIN ipg i\r\n                ON (\r\n                        c.cpg_serie = i.ipg_cpg_serie\r\n                        AND c.cpg_num = i.ipg_cpg_num\r\n                        )\r\n            WHERE c.cpg_nfe_serie = nfe_serie\r\n                AND c.cpg_nfe_num = nfe_num\r\n                AND c.cpg_nfe_tipo = nfe_tipo\r\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\r\n            ORDER BY i.ipg_dt_vcto\r\n            ) AS nfe_ipg_dt_vcto\r\n        , (\r\n            SELECT count(ipg_parc)\r\n            FROM cpg c\r\n            INNER JOIN ipg i\r\n                ON (\r\n                        c.cpg_serie = i.ipg_cpg_serie\r\n                        AND c.cpg_num = i.ipg_cpg_num\r\n                        )\r\n            WHERE c.cpg_nfe_serie = nfe_serie\r\n                AND c.cpg_nfe_num = nfe_num\r\n                AND c.cpg_nfe_tipo = nfe_tipo\r\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\r\n            ) AS nfe_cpg_parcelas\r\n        , nfe.nfe_crit_venc\r\n        , nfe.nfe_parcela_1\r\n        , nfe.nfe_dt_emissao\r\n        , nfe.nfe_dt_entrada\r\n        , ine.ine_seq\r\n        , ine.ine_mat_cod\r\n        , mat.mat_desc_resumida\r\n        , mat.mat_lma_cod\r\n        , lma.lma_nome\r\n        , mat.mat_gmm_cod\r\n        , gmm.gmm_nome\r\n        , mat_unm_cod_entrada\r\n        , ine.ine_qtde AS ine_qtde_entrada\r\n        , ine.ine_vlr_unit AS ine_vlr_unit_entrada\r\n        , (\r\n            SELECT isnull(sum(ipg_valor), 0)\r\n            FROM cpg c\r\n            INNER JOIN ipg i\r\n                ON (\r\n                        c.cpg_serie = i.ipg_cpg_serie\r\n                        AND c.cpg_num = i.ipg_cpg_num\r\n                        )\r\n            WHERE c.cpg_nfe_serie = nfe_serie\r\n                AND c.cpg_nfe_num = nfe_num\r\n                AND c.cpg_nfe_tipo = nfe_tipo\r\n                AND c.cpg_nfe_fne_cod = nfe_fne_cod\r\n                AND i.ipg_status IN (''A'', ''R'')\r\n                AND i.ipg_dt_vcto <= @DT_FIM\r\n            ) AS nfe_ipg_aberto\r\n        , mat_unm_cod_saida\r\n        , '' AS solic\r\n        , '' AS DATA_solic\r\n        , convert(VARCHAR, ine_aft_serie) + ''.'' + convert(VARCHAR, ine_aft_num) AS nfe_aft\r\n        , aft_dthr\r\n        , ine.ine_qtde * mat_fat_conv_s_v AS ine_qtde_saida\r\n        , ine.ine_vlr_unit / mat_fat_conv_s_v AS ine_vlr_saida\r\n        , ine.ine_vlr_ipi\r\n        , ine.ine_vlr_desconto\r\n        , (\r\n            SELECT TOP 1 f.fne_cod\r\n            FROM nfe n WITH (NOLOCK)\r\n            INNER JOIN ine i WITH (NOLOCK)\r\n                ON (\r\n                        n.nfe_fne_cod = i.ine_fne_cod\r\n                        AND n.nfe_serie = i.ine_nfe_serie\r\n                        AND n.nfe_num = i.ine_nfe_num\r\n                        AND n.nfe_tipo = i.ine_nfe_tipo\r\n                          )\r\n            LEFT OUTER JOIN fne f WITH (NOLOCK)\r\n                ON ine.ine_fne_cod = fne.fne_cod\r\n            WHERE i.ine_mat_cod = ine.ine_mat_cod\r\n                AND f.fne_cod = ine.ine_fne_cod\r\n                AND (\r\n                    n.nfe_dt_entrada >= @DT_INICIO\r\n                    AND n.nfe_dt_entrada <= @DT_FIM\r\n                    )\r\n            ORDER BY n.nfe_dt_entrada DESC\r\n            ) AS ine_fne_cod\r\n        , (\r\n            SELECT TOP 1 f.fne_nome_fantasia\r\n            FROM nfe n WITH (NOLOCK)\r\n            INNER JOIN ine i WITH (NOLOCK)\r\n                ON (\r\n                        n.nfe_fne_cod = i.ine_fne_cod\r\n                        AND n.nfe_serie = i.ine_nfe_serie\r\n                        AND n.nfe_num = i.ine_nfe_num\r\n                        AND n.nfe_tipo = i.ine_nfe_tipo\r\n                        )\r\n            LEFT OUTER JOIN fne f WITH (NOLOCK)\r\n                ON ine.ine_fne_cod = fne.fne_cod\r\n            WHERE i.ine_mat_cod = ine.ine_mat_cod\r\n                AND f.fne_cod = ine.ine_fne_cod\r\n                AND (\r\n                   n.nfe_dt_entrada >= @DT_INICIO\r\n                 AND n.nfe_dt_entrada <= @DT_FIM\r\n                    )\r\n            ORDER BY n.nfe_dt_entrada DESC\r\n            ) AS ine_fne_nome_fantasia\r\n        , replace(replace(replace(emp_cgc, ''.'', ''''), ''/'', ''''), ''-'', '''') AS emp_cgc\r\n    FROM nfe WITH (NOLOCK)\r\n    INNER JOIN ine WITH (NOLOCK)\r\n        ON (\r\n                nfe.nfe_fne_cod = ine.ine_fne_cod\r\n                AND nfe.nfe_serie = ine.ine_nfe_serie\r\n                AND nfe.nfe_num = ine.ine_nfe_num\r\n                AND nfe.nfe_tipo = ine.ine_nfe_tipo\r\n                )\r\n    LEFT OUTER JOIN fne WITH (NOLOCK)\r\n        ON (convert(VARCHAR, ine.ine_fne_cod) = convert(VARCHAR, fne.fne_cod))\r\n    LEFT OUTER JOIN mat WITH (NOLOCK)\r\n        ON (mat.mat_cod = ine.ine_mat_cod)\r\n    LEFT OUTER JOIN lma WITH (NOLOCK)\r\n       ON (\r\n                lma.lma_cod = mat.mat_lma_cod\r\n                AND lma.lma_gmm_cod = mat.mat_gmm_cod\r\n                )\r\n    LEFT OUTER JOIN gmm WITH (NOLOCK)\r\n        ON (lma.lma_gmm_cod = gmm.gmm_cod)\r\n    LEFT OUTER JOIN sba WITH (NOLOCK)\r\n        ON (sba.sba_cod = nfe.nfe_sba_cod)\r\n    LEFT OUTER JOIN aft WITH (NOLOCK)\r\n        ON (\r\n               aft_serie = ine_aft_serie\r\n                AND aft_num = ine_aft_num\r\n                )\r\n    LEFT OUTER JOIN emp WITH (NOLOCK)\r\n        ON (emp.emp_fne_cod = fne.FNE_COD)\r\n    CROSS JOIN cfg\r\n    WHERE (\r\n            nfe.nfe_dt_entrada >= @DT_INICIO\r\n            AND nfe.nfe_dt_entrada <= @DT_FIM\r\n            )\r\n        AND (\r\n            fne.fne_cod IN (''%'')\r\n            OR (''%'' IN (''%''))\r\n            )\r\n    ) AS t1\r\nORDER BY sba_cod\r\n    , sba_nome\r\n    , nfe_tipo\r\n    , nfe_dt_entrada\r\n    , nfe_serie\r\n    , nfe_num\r\n    , ine_seq\r\n '\r\n\r\n)\r\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SMART_HOSL_PrdDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_DINAMICO",
											"type": "DatasetReference",
											"parameters": {
												"schema_destino": "STG",
												"tabela_destino": "SUP_NFS_SMART"
											}
										}
									]
								},
								{
									"name": "TASY - NF Sadalla",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat(\n\n'with cate as(\nselect  \n        A.CD_ESTABELECIMENTO,\n        obter_nome_estab(a.cd_estabelecimento) ds_estabelecimento,\n        A.NR_ORDEM_COMPRA,\n        a.dt_entrada_saida,\n        a.dt_emissao,\n        a.nr_nota_fiscal,\n        a.cd_cgc_emitente,\n        substr(obter_nome_pf_pj(null,a.cd_cgc_emitente),1,100) ds_fornecedor,\n        pj.CD_CEP,\n        pj.DS_ENDERECO,\n        pj.DS_BAIRRO,\n        pj.DS_MUNICIPIO,\n        pj.SG_ESTADO,\n        b.cd_material,\n        substr(obter_desc_material(b.cd_material),1,100) ds_material,\n        e.ds_grupo_material,\n        b.cd_local_estoque,\n        b.qt_item_nf,\n        b.cd_unidade_medida_compra,\n        b.vl_unitario_item_nf,\n        b.vl_total_item_nf, \n        b.vl_frete / b.qt_item_nf vl_frete,\n        d.vl_tributo / b.qt_item_nf tributo,\n        dividir(b.vl_liquido, b.qt_item_estoque) vl_custo_medio,\n        ((dividir(b.vl_liquido, b.qt_item_estoque)) *(b.qt_item_nf))total_item,\n        obter_desc_operacao_nota(a.CD_OPERACAO_NF) operacao\n       -- ,obter_desc_local_estoque(b.CD_LOCAL_ESTOQUE) ds_local_estoque\nfrom    nota_fiscal a,\n        nota_fiscal_item b,\n        estrutura_material_v e,\n        nota_fiscal_item_trib d,\n        pessoa_juridica pj\nwhere   b.nr_sequencia = d.nr_sequencia (+)\n        and b.nr_item_nf = d.nr_item_nf (+)\n        and a.nr_sequencia = b.nr_sequencia\n        and b.cd_material = e.cd_material\n        and trunc(a.dt_entrada_saida,''mm'') between to_date(',\n\t\t\n\t\t'''', item().DT_INICIO_ORACLE, '''',\n\t\t\n\t\t\n\t\t\n\t\t',''DD/MM/YYYY'') and to_date(',\n                \n                '''', item().DT_FIM_ORACLE, '''',\n                \n                ',''DD/MM/YYYY'')\n        and a.ie_situacao = 1\n        and a.ie_tipo_nota in (''EF'',''EN'')\n        and a.CD_OPERACAO_NF <> 5\n        and a.dt_atualizacao_estoque is not null\n        and pj.cd_cgc = a.CD_CGC_EMITENTE (+)\n        --and ((a.cd_estabelecimento = :estab) or (:estab = 0))\norder by dt_entrada_saida,\n        nr_nota_fiscal,\n        ds_fornecedor,  \n        ds_material\n)  \nSELECT\n     2 AS ESTABELECIMENTO\n,A.CD_ESTABELECIMENTO\n,A.DS_ESTABELECIMENTO    \n,OC.DT_ORDEM_COMPRA\n,A.NR_ORDEM_COMPRA\n,A.DT_ENTRADA_SAIDA\n,A.DT_EMISSAO\n,A.NR_NOTA_FISCAL\n,A.CD_CGC_EMITENTE\n,A.DS_FORNECEDOR\n,A.CD_CEP\n,A.DS_ENDERECO\n,A.DS_BAIRRO\n,A.DS_MUNICIPIO\n,A.SG_ESTADO\n,A.CD_MATERIAL\n,A.DS_MATERIAL\n,A.DS_GRUPO_MATERIAL\n,A.CD_LOCAL_ESTOQUE\n,A.QT_ITEM_NF\n,A.CD_UNIDADE_MEDIDA_COMPRA\n,A.VL_UNITARIO_ITEM_NF\n,A.VL_TOTAL_ITEM_NF\n,A.VL_FRETE\n,A.TRIBUTO\n,A.VL_CUSTO_MEDIO\n,A.TOTAL_ITEM\n,A.OPERACAO\n,L.DS_LOCAL_ESTOQUE\nFROM CATE A\nLEFT JOIN ORDEM_COMPRA OC ON OC.NR_ORDEM_COMPRA = A.NR_ORDEM_COMPRA\nLEFT JOIN LOCAL_ESTOQUE L ON L.CD_LOCAL_ESTOQUE = A.CD_LOCAL_ESTOQUE'\n\n)\n\n\n \n",
												"type": "Expression"
											},
											"partitionOption": "None",
											"convertDecimalToInteger": false,
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SadallaTasyPrdDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_DINAMICO",
											"type": "DatasetReference",
											"parameters": {
												"schema_destino": "STG",
												"tabela_destino": "SUP_NFS_TASY"
											}
										}
									]
								},
								{
									"name": "TASY - NF HTML",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "TASY - NF Sadalla",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@CONCAT(\n\n'with cate as(\nselect  \n        A.CD_ESTABELECIMENTO,\n        FAST_OPS.obter_nome_estab(a.cd_estabelecimento) ds_estabelecimento,\n        A.NR_ORDEM_COMPRA,\n        a.dt_entrada_saida,\n        a.dt_emissao,\n        a.nr_nota_fiscal,\n        a.cd_cgc_emitente,\n        substr(FAST_OPS.obter_nome_pf_pj(null,a.cd_cgc_emitente),1,100) ds_fornecedor,\n        pj.CD_CEP,\n        pj.DS_ENDERECO,\n        pj.DS_BAIRRO,\n        pj.DS_MUNICIPIO,\n        pj.SG_ESTADO,\n        b.cd_material,\n        substr(FAST_OPS.obter_desc_material(b.cd_material),1,100) ds_material,\n        e.ds_grupo_material,\n        b.cd_local_estoque,\n        b.qt_item_nf,\n        b.cd_unidade_medida_compra,\n        b.vl_unitario_item_nf,\n        b.vl_total_item_nf, \n        b.vl_frete / b.qt_item_nf vl_frete,\n        d.vl_tributo / b.qt_item_nf tributo,\n        FAST_OPS.dividir(b.vl_liquido, b.qt_item_estoque) vl_custo_medio,\n        ((FAST_OPS.dividir(b.vl_liquido, b.qt_item_estoque)) *(b.qt_item_nf))total_item,\n        FAST_OPS.obter_desc_operacao_nota(a.CD_OPERACAO_NF) operacao\n       -- ,obter_desc_local_estoque(b.CD_LOCAL_ESTOQUE) ds_local_estoque\nfrom    FAST_OPS.nota_fiscal a,\n        FAST_OPS.nota_fiscal_item b,\n        FAST_OPS.estrutura_material_v e,\n        FAST_OPS.nota_fiscal_item_trib d,\n        FAST_OPS.pessoa_juridica pj\nwhere   b.nr_sequencia = d.nr_sequencia (+)\n        and b.nr_item_nf = d.nr_item_nf (+)\n        and a.nr_sequencia = b.nr_sequencia\n        and b.cd_material = e.cd_material\n        and trunc(a.dt_entrada_saida,''mm'') between to_date(',\n\t\t\n\t\t'''', item().DT_INICIO_ORACLE, '''',\n\n\t\t',''DD/MM/YYYY'') and to_date(',\n\t\t\n\t\t'''', item().DT_FIM_ORACLE, '''',\n\t\t\n\t\t',''DD/MM/YYYY'')\n        and a.ie_situacao = 1\n        and a.ie_tipo_nota in (''EF'',''EN'')\n        and a.CD_OPERACAO_NF <> 5\n        and a.dt_atualizacao_estoque is not null\n        and pj.cd_cgc = a.CD_CGC_EMITENTE (+)\n        --and ((a.cd_estabelecimento = :estab) or (:estab = 0))\norder by dt_entrada_saida,\n        nr_nota_fiscal,\n        ds_fornecedor,  \n        ds_material\n)  \nSELECT\n1 AS ESTABELECIMENTO\n,A.CD_ESTABELECIMENTO\n,A.DS_ESTABELECIMENTO    \n,OC.DT_ORDEM_COMPRA\n,A.NR_ORDEM_COMPRA\n,A.DT_ENTRADA_SAIDA\n,A.DT_EMISSAO\n,A.NR_NOTA_FISCAL\n,A.CD_CGC_EMITENTE\n,A.DS_FORNECEDOR\n,A.CD_CEP\n,A.DS_ENDERECO\n,A.DS_BAIRRO\n,A.DS_MUNICIPIO\n,A.SG_ESTADO\n,A.CD_MATERIAL\n,A.DS_MATERIAL\n,A.DS_GRUPO_MATERIAL\n,A.CD_LOCAL_ESTOQUE\n,A.QT_ITEM_NF\n,A.CD_UNIDADE_MEDIDA_COMPRA\n,A.VL_UNITARIO_ITEM_NF\n,A.VL_TOTAL_ITEM_NF\n,A.VL_FRETE\n,A.TRIBUTO\n,A.VL_CUSTO_MEDIO\n,A.TOTAL_ITEM\n,A.OPERACAO\n,L.DS_LOCAL_ESTOQUE\nFROM CATE A\nLEFT JOIN FAST_OPS.ORDEM_COMPRA OC ON OC.NR_ORDEM_COMPRA = A.NR_ORDEM_COMPRA\nLEFT JOIN FAST_OPS.LOCAL_ESTOQUE L ON L.CD_LOCAL_ESTOQUE = A.CD_LOCAL_ESTOQUE'\n\n)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"convertDecimalToInteger": false,
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CloudTasyPrdDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AZSQL_DINAMICO",
											"type": "DatasetReference",
											"parameters": {
												"schema_destino": "STG",
												"tabela_destino": "SUP_NFS_TASY"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup Periodo Inicial",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LIMPA STAGE SMART",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LIMPA STAGE TASY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.1:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n\tCASE \n\t\tWHEN day(getdate()) <= 8 THEN\n\t\t\tconcat(substring(convert(varchar(30),DATEADD(MONTH,-1,getdate()),120),1,8),'01')\n\t\tWHEN day(getdate()) > 8 THEN\n\t\t\tSubstring(convert(varchar(30),dateadd(day,1,EOMONTH(getdate(),-1))),1,10)\n\tEND as Data_Inicial,\n\n\t\tsubstring(convert(varchar(30),DATEADD(day,-1,getdate()),120),1,10) as 'data_final' ,\n\tCASE\n\t\tWHEN day(getdate()) <= 8 THEN\n\t\t\tconcat(substring(convert(varchar(30),DATEADD(MONTH,-1,getdate()),103),1,8),'01')\n\tWHEN day(getdate()) > 8 THEN\n\t\t\tSubstring(convert(varchar(30),dateadd(day,1,EOMONTH(getdate(),-1)),103),1,10)\n\tEND as Data_Inicial_Oracle,\n        substring(convert(varchar(30),DATEADD(day,-1,getdate()),103),1,10) as 'data_final_Oracle'\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DIN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LIMPA STAGE SMART",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.1:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "truncate table STG.SUP_NFS_SMART"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "LIMPA STAGE TASY",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.1:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "truncate table STG.SUP_NFS_TASY"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DELETE NFS",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": {
										"value": "DELETE \nFROM DM.TBL_NFS_XPTO\nWHERE   TBL_NFS_XPTO.DT_ENTRADA_SAIDA IN \n(\nSELECT distinct convert(date,DT_ENTRADA_SAIDA,103) AS DT_ENTRADA from STG.SUP_NFS_TASY  with(nolock) \nUNION\nselect distinct convert(date,NFE_DT_ENTRADA,103) AS DT_ENTRADA  from STG.SUP_NFS_SMART  with(nolock)\n) \n",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "INSERT",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "DELETE NFS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": {
										"value": "WITH TB AS(\nSELECT\nA.estabelecimento AS ESTABELECIMENTO\n,null AS DT_ORDEM_COMPRA\n,CAST(A.ESTABELECIMENTO AS VARCHAR(5)) + '|0' AS FK_NR_ORDEM_COMPRA\n,nfe_dt_entrada AS DT_ENTRADA_SAIDA\n,nfe_dt_emissao AS DT_EMISSAO\n,CAST(A.ESTABELECIMENTO AS VARCHAR(5)) + '|'+ CAST(nfe_tipo AS VARCHAR(10)) + CAST(NFE_SERIE AS VARCHAR(10)) + CAST(nfe_num AS VARCHAR(50)) AS FK_NR_NOTA_FISCAL\n,CASE nfe_tipo\n    WHEN 'PR' THEN 'Entrada'\n    WHEN 'SR' THEN 'Simples Remessa'\n    WHEN 'SF' THEN 'Simples Faturamento'\n    WHEN 'DV' THEN 'Devolução'\n    WHEN 'TR' THEN 'Transferência'\n    ELSE 'N/A'\nEND  TP_OPERACAO\n,CAST(EMP.estabelecimento AS VARCHAR(5)) + '|' + CAST(EMP.emp_cgc AS VARCHAR(255)) AS FK_CD_CGC_EMITENTE\n,CAST(A.ESTABELECIMENTO AS VARCHAR(5)) +'|'+CAST(ine_mat_cod AS varchar(100)) AS FK_CD_MATERIAL\n,CAST(A.ESTABELECIMENTO AS VARCHAR(5)) + '|0' AS FK_CD_LOCAL_ESTOQUE\n,ine_qtde_entrada AS QT_ITEM_NF\n,mat_unm_cod_entrada AS CD_UNIDADE_MEDIDA_COMPRA\n,CAST(ine_vlr_unit_entrada AS money) AS VL_UNITARIO_ITEM_NF\n,CAST(ine_vlr_unit_entrada * ine_qtde_entrada AS MONEY) AS VL_TOTAL_ITEM_NF\n,0 AS VL_FRETE\n,0 AS TRIBUTO\n,0 AS VL_CUSTO_MEDIO\n,0 AS TOTAL_ITEM\nFROM STG.SUP_NFS_SMART A\nLEFT JOIN DW.TBL_EMP EMP WITH(NOLOCK) ON EMP.estabelecimento = A.estabelecimento AND EMP.emp_fne_cod = A.fne_cod\n\nUNION ALL\n\nSELECT\n A.ESTABELECIMENTO\n,A.DT_ORDEM_COMPRA\n,CAST(A.ESTABELECIMENTO AS varchar(5)) + '|' + CAST(A.NR_ORDEM_COMPRA AS VARCHAR(50)) FK_NR_ORGEM_COMPRA\n,A.DT_ENTRADA_SAIDA\n,A.DT_EMISSAO\n,CAST(A.ESTABELECIMENTO AS varchar(5)) + '|' + CAST(A.NR_NOTA_FISCAL AS VARCHAR(50)) FK_NR_NOTA_FISCAL\n,A.OPERACAO AS TP_OPERACAO\n,CAST(A.ESTABELECIMENTO AS VARCHAR(5)) + '|' + CAST(A.CD_CGC_EMITENTE AS VARCHAR(255)) AS FK_CD_CGC_EMITENTE\n,CAST(A.ESTABELECIMENTO AS varchar(5)) + '|' + CAST(A.CD_MATERIAL AS VARCHAR(50)) FK_CD_MATERIAL\n,CAST(A.ESTABELECIMENTO AS varchar(5)) + '|' + CAST(A.CD_LOCAL_ESTOQUE AS VARCHAR(50)) AS FK_CD_LOCAL_ESTOQUE\n,A.QT_ITEM_NF\n,A.CD_UNIDADE_MEDIDA_COMPRA\n,A.VL_UNITARIO_ITEM_NF\n,A.VL_TOTAL_ITEM_NF\n,A.VL_FRETE\n,A.TRIBUTO\n,A.VL_CUSTO_MEDIO\n,A.TOTAL_ITEM\nFROM STG.sup_nfs_tasy A\n\n)\n\nINSERT INTO [dm].[TBL_NFS_XPTO]\n           ([ESTABELECIMENTO]\n           ,[DT_ORDEM_COMPRA]\n           ,[FK_NR_ORDEM_COMPRA]\n           ,[DT_ENTRADA_SAIDA]\n           ,[DT_EMISSAO]\n           ,[FK_NR_NOTA_FISCAL]\n           ,[TP_OPERACAO]\n           ,[FK_CD_CGC_EMITENTE]\n           ,[FK_CD_MATERIAL]\n           ,[FK_CD_LOCAL_ESTOQUE]\n           ,[QT_ITEM_NF]\n           ,[CD_UNIDADE_MEDIDA_COMPRA]\n           ,[VL_UNITARIO_ITEM_NF]\n           ,[VL_TOTAL_ITEM_NF]\n           ,[VL_FRETE]\n           ,[TRIBUTO]\n           ,[VL_CUSTO_MEDIO]\n           ,[TOTAL_ITEM]\n\t\t   )\n\n\nSELECT      [ESTABELECIMENTO]\n           ,[DT_ORDEM_COMPRA]\n           ,[FK_NR_ORDEM_COMPRA]\n           ,[DT_ENTRADA_SAIDA]\n           ,[DT_EMISSAO]\n           ,[FK_NR_NOTA_FISCAL]\n           ,[TP_OPERACAO]\n           ,[FK_CD_CGC_EMITENTE]\n           ,[FK_CD_MATERIAL]\n           ,[FK_CD_LOCAL_ESTOQUE]\n           ,[QT_ITEM_NF]\n           ,[CD_UNIDADE_MEDIDA_COMPRA]\n           ,[VL_UNITARIO_ITEM_NF]\n           ,[VL_TOTAL_ITEM_NF]\n           ,[VL_FRETE]\n           ,[TRIBUTO]\n           ,[VL_CUSTO_MEDIO]\n           ,[TOTAL_ITEM]\n\t\t   \n\t\t   FROM TB\n\n",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"DT_INICIO": {
						"type": "String"
					},
					"DT_FIM": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Suprimentos/Nota Fiscal"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nota Fiscal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline que extrai informações de notas fiscais das unidades para compor relatório ao setor de FP&A.",
				"activities": [
					{
						"name": "Nota Fiscal Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select obter_cgc_estabelecimento(n.cd_estabelecimento) as CNPJ,\nobter_nome_estab(n.cd_estabelecimento) as DS_UNIDADE ,\nn.DT_EMISSAO,\ndt_entrada_saida as dt_entrada_saida,\nn.nr_sequencia, \nn.nr_nota_fiscal, \ni.cd_conta_contabil, \nc.ds_conta_contabil, \nobter_nome_pj(n.cd_cgc) as fornecedor,\t\nsum(i.vl_total_item_nf) as vl_total_item_nf,\nSUBSTR(n.ds_observacao,1,100) AS ds_observacao\nfrom nota_fiscal n,\nnota_fiscal_item i,\nconta_contabil c,\noperacao_nota a\nwhere n.nr_sequencia = i.nr_sequencia\nand i.cd_conta_contabil = c.cd_conta_contabil (+)\nand n.cd_operacao_nf = a.cd_operacao_nf (+)\nand a.ie_operacao_fiscal = 'E'\nand n.ie_situacao = 1\ngroup by n.cd_estabelecimento,\nn.cd_estabelecimento ,\nn.DT_EMISSAO,\ndt_entrada_saida,\nn.nr_sequencia, \nn.nr_nota_fiscal, \ni.cd_conta_contabil, \nc.ds_conta_contabil, \nn.cd_cgc,\t\nn.ds_observacao\norder by 5",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select obter_cgc_estabelecimento(n.cd_estabelecimento) as CNPJ,\nobter_nome_estab(n.cd_estabelecimento) as DS_UNIDADE ,\nn.DT_EMISSAO,\ndt_entrada_saida as dt_entrada_saida,\nn.nr_sequencia, \nn.nr_nota_fiscal, \ni.cd_conta_contabil, \nc.ds_conta_contabil, \nobter_nome_pj(n.cd_cgc) as fornecedor,\t\nsum(i.vl_total_item_nf) as vl_total_item_nf,\nSUBSTR(n.ds_observacao,1,100) AS ds_observacao\nfrom nota_fiscal n,\nnota_fiscal_item i,\nconta_contabil c,\noperacao_nota a\nwhere n.nr_sequencia = i.nr_sequencia\nand i.cd_conta_contabil = c.cd_conta_contabil (+)\nand n.cd_operacao_nf = a.cd_operacao_nf (+)\nand a.ie_operacao_fiscal = 'E'\nand n.ie_situacao = 1\ngroup by n.cd_estabelecimento,\nn.cd_estabelecimento ,\nn.DT_EMISSAO,\ndt_entrada_saida,\nn.nr_sequencia, \nn.nr_nota_fiscal, \ni.cd_conta_contabil, \nc.ds_conta_contabil, \nn.cd_cgc,\t\nn.ds_observacao\norder by 5",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal Itaigara",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal Itabuna",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_INOB_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal IOF",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_IOF_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Fiscal"
				},
				"annotations": [],
				"lastPublishTime": "2020-02-10T20:56:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OFTALMODIAGNOSE_ADF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LISTA ORIGEM DESTINO",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.05:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[sp_origem_destino]",
								"storedProcedureParameters": {
									"Dt_inicio_manual": {
										"type": "DateTime",
										"value": null
									},
									"manual": {
										"type": "String",
										"value": "N"
									},
									"plataforma": {
										"type": "String",
										"value": {
											"value": "SMART_OFTALMODIAGONOSE",
											"type": "Expression"
										}
									},
									"COD_TABELA": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LISTA_TABELAS_ADF",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "PROCESSA ETL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LIMPA TABELAS DESTINO",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SE CARGA COMPLETA",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().TIPO_CARGA,'COMPLETA')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "DATA_HORA_INICIO_PARCIAL",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA PARCIAL",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													},
													{
														"activity": "Data Inicio Banco",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OdbcSource",
														"query": {
															"value": "@concat(\n'select * from ',item().NOME_TABELA_ORIGEM,' where SUBSTRING(', item().nome_coluna_referencia,',1,10) >= ',variables('DT_INICIO') \n\n )",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "Oftalmodiagnose_ODBC",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"table_name": "@item().NOME_TABELA_ORIGEM"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA PARCIAL').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Data Inicio Banco",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "DT_INICIO",
													"value": {
														"value": "@concat('''',string(formatDateTime(adddays(utcnow(), -30), 'yyyy-MM-dd')),'''')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "DATA_HORA_INICIO_COMPLETA",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA COMPLETA",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OdbcSource",
														"query": {
															"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_OFTALMODIAGNOSE_ODBC_WITH_PARAM",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"table_name": {
																"value": "@item().NOME_TABELA_ORIGEM",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA COMPLETA').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "LIMPA TABELAS DESTINO",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LISTA ORIGEM DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LIMPA TABELA DESTINO",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.05:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('truncate table ',\nitem().NOME_SCHEMA_DESTINO,\n'.',\nitem().NOME_TABELA_DESTINO,\n' SELECT 0')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DESTINO_TABELAS_ADF",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Destino": {
													"value": "@item().NOME_SCHEMA_DESTINO",
													"type": "Expression"
												},
												"Tabela_Destino": {
													"value": "@item().NOME_TABELA_DESTINO",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					},
					{
						"name": "MERGE",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "PROCESSA ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Script_Merge",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSQL_DB_Procedimentos",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": {
													"value": "@concat('EXEC ',item().NOME_PROC)",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					},
					"DT_INICIO": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Data Warehouse/2_Pipeline_Cargas_DW"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OFTALMODIAGNOSE_ADF_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LISTA ORIGEM DESTINO",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.05:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[sp_origem_destino]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "String",
										"value": null
									},
									"Dt_inicio_manual": {
										"type": "DateTime",
										"value": null
									},
									"manual": {
										"type": "String",
										"value": "N"
									},
									"plataforma": {
										"type": "String",
										"value": "SMART_OFTALMODIAGONOSE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LISTA_TABELAS_ADF",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_GERA ARQUIVOS",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Apaga Arquivos Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "GERA ARQUIVOS",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().TIPO_CARGA,'COMPLETA')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "GERA ARQUIVOS_PARCIAL",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OdbcSource",
														"query": {
															"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_OFTALMODIAGNOSE_ODBC_WITH_PARAM",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"table_name": {
																"value": "@item().NOME_TABELA_ORIGEM",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "Parquet_Oftalmodiagnose",
														"type": "DatasetReference",
														"parameters": {
															"nome_tabela": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "GERA ARQUIVOS_COMPLETA",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OdbcSource",
														"query": {
															"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_OFTALMODIAGNOSE_ODBC_WITH_PARAM",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"table_name": {
																"value": "@item().NOME_TABELA_ORIGEM",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "Parquet_Oftalmodiagnose",
														"type": "DatasetReference",
														"parameters": {
															"nome_tabela": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "LIMPA TABELAS DESTINO",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ForEach_GERA ARQUIVOS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LIMPA TABELA DESTINO",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.05:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('IF  EXISTS (SELECT * FROM sys.objects WHERE name = ','''', item().NOME_TABELA_DESTINO,'''',' AND type =' ,'''U''',')', ' \nTRUNCATE TABLE ', item().NOME_SCHEMA_DESTINO, '.', item().NOME_TABELA_DESTINO, \n' select 0')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DESTINO_TABELAS_ADF",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Destino": {
													"value": "@item().NOME_SCHEMA_DESTINO",
													"type": "Expression"
												},
												"Tabela_Destino": {
													"value": "@item().NOME_TABELA_DESTINO",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					},
					{
						"name": "PROCESSA ETL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LIMPA TABELAS DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SE CARGA COMPLETA",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().TIPO_CARGA,'COMPLETA')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "DATA_HORA_INICIO_PARCIAL",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA PARCIAL",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													},
													{
														"activity": "Data Inicio Banco",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "CSV_OFTALMODIAGNOSE",
														"type": "DatasetReference",
														"parameters": {
															"nome_tabela": {
																"value": "@concat(item().NOME_TABELA_DESTINO,'.csv')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA PARCIAL').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Data Inicio Banco",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "DT_INICIO",
													"value": {
														"value": "@concat('''',string(formatDateTime(adddays(utcnow(), -30), 'yyyy-MM-dd')),'''')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "DATA_HORA_INICIO_COMPLETA",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA COMPLETA",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "CSV_OFTALMODIAGNOSE",
														"type": "DatasetReference",
														"parameters": {
															"nome_tabela": {
																"value": "@concat(item().NOME_TABELA_DESTINO,'.csv')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA COMPLETA').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "CARGA DW",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PROCESSA ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_OFT_SMART_CARGA_DW"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Apaga Arquivos Blob",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LISTA ORIGEM DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "CSV_OFTALMODIAGNOSE",
											"type": "DatasetReference",
											"parameters": {
												"nome_tabela": {
													"value": "@concat(item().NOME_TABELA_DESTINO,'.csv')",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					},
					"DT_INICIO": {
						"type": "String"
					},
					"NM_ARQ": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Data Warehouse/2_Pipeline_Cargas_DW"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORTOCITY_CARGA_DINAMICA_ADF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LISTA ORIGEM DESTINO",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.05:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[sp_origem_destino]",
								"storedProcedureParameters": {
									"Dt_inicio_manual": {
										"type": "DateTime",
										"value": null
									},
									"manual": {
										"type": "String",
										"value": "N"
									},
									"plataforma": {
										"type": "String",
										"value": "ORTOCITY"
									},
									"COD_TABELA": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LISTA_TABELAS_ADF",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "PROCESSA ETL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LIMPA TABELAS DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SE CARGA COMPLETA",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().TIPO_CARGA,'COMPLETA')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "DATA_HORA_INICIO_PARCIAL",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA PARCIAL",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "@concat(\n'select * from ', item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM,' where ', item().nome_coluna_referencia,' >= ''',\nitem().Data_Inicio, ''' and ', item().nome_coluna_referencia, ' <= ''', item().Data_Fim, ''''\n\n )",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SQL_DINAMICO",
														"type": "DatasetReference",
														"parameters": {
															"NOME_KEYVAULT_SECRET": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"schema_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"table_name": {
																"value": "@item().NOME_TABELA_ORIGEM",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA PARCIAL').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "DATA_HORA_INICIO_COMPLETA",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA COMPLETA",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"oracleReaderQuery": {
															"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
															"type": "Expression"
														},
														"partitionOption": "None",
														"convertDecimalToInteger": false,
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ORTOCITY_WITH_PARAM",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"table_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_HMAISDATADRIVEN",
														"type": "DatasetReference",
														"parameters": {
															"Filesystem": "ortocity",
															"File": "arquivo.csv"
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA COMPLETA').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "LIMPA TABELAS DESTINO",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LISTA ORIGEM DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LIMPA TABELA DESTINO",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.05:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('truncate table ',\nitem().NOME_SCHEMA_DESTINO,\n'.',\nitem().NOME_TABELA_DESTINO,\n' SELECT 0')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DESTINO_TABELAS_ADF",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Destino": {
													"value": "@item().NOME_SCHEMA_DESTINO",
													"type": "Expression"
												},
												"Tabela_Destino": {
													"value": "@item().NOME_TABELA_DESTINO",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Data Warehouse/P&P"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}