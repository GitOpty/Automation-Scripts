{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "OptyADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Geral Atendimentos Sadalla')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Alimenta as informações das tabelas:\n\nAtendimento_ Unidade \nAgendamento_Unidade\nUsuarios_Unidade\nConsultas_Unidade\nAgendas Unidade\n\nPara extração de relatórios do call center.",
				"activities": [
					{
						"name": "Atendimento Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select pf.cd_pessoa_fisica, pf.nm_pessoa_fisica, \n\nto_char(at.dt_entrada,'yyyy-mm-dd') as dt_entrada,\nto_char(at.dt_entrada,'hh24:mi:ss') as hr_entrada, \n\nobter_nome_pf(at.cd_medico_resp) as nm_medico, c.cd_convenio, obter_nome_convenio(c.cd_convenio) AS ds_convenio, \nat.nr_atendimento,\ne.cd_cgc as CNPJ,\nnm_fantasia_estab DS_UNIDADE,\nem.nm_razao_social MARCA,\n\nat.cd_procedencia,\np.ds_procedencia,\n'NAO ENCONTRADO' as ID,\n\nto_char(at.dt_entrada,'dd') dia,\nto_char(at.dt_entrada,'mm') mes,\nto_char(at.dt_entrada,'yyyy') ano,\nto_char(at.dt_cancelamento, 'yyyy-mm-dd') dt_cancelamento,\nto_char(at.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\n'Tasy Delphi' as BASE\n\nfrom \natendimento_paciente at, \npessoa_fisica pf,\natend_categoria_convenio c,\nprocedencia p,\nestabelecimento e,\nempresa em\nwhere at.cd_pessoa_fisica = pf.cd_pessoa_fisica\nand at.cd_procedencia = p.cd_procedencia (+)\nand at.nr_atendimento = c.nr_atendimento\nand at.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\n\nAND at.dt_entrada between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Atendimento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Consulta Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Consulta Sadalla - Azure\n\nselect o.nr_sequencia as nr_sequencia, to_char(o.dt_atualizacao,'yyyy-mm-dd') as dt_atualizacao,\nto_char(o.dt_atualizacao,'hh24:mi:ss') as hr_atualizacao, \no.nr_atendimento, o.cd_profissional as cd_medico ,obter_nome_pf(o.cd_profissional) as nm_medico, r.ds_retorno, substr(o.ds_conduta,1,1000) as ds_conduta,\nobter_pessoa_atendimento(o.nr_atendimento, 'C') as cd_pessoa_fisica,\n\n(select unique d.cd_doenca ||' - '|| a.ds_doenca_cid\nfrom diagnostico_doenca d, \n     cid_doenca a\nwhere a.cd_doenca_cid = d.cd_doenca\nand d.nr_atendimento = o.nr_atendimento\nand d.nr_seq_interno = (select max(x.nr_seq_interno) from diagnostico_doenca x where x.nr_atendimento = d.nr_atendimento)) as ds_diagnostico,\n\nobter_nome_estab(obter_estab_atendimento(o.nr_atendimento)) as DS_UNIDADE,\n\ne.cd_cgc as cnpj,\n\n'SADALLA' as marca,\n'Tasy Delphi' as BASE\n\nfrom oft_consulta_medica o,\n     oft_retorno r,\n     estabelecimento e\nwhere o.nr_seq_retorno = r.nr_sequencia\nand o.nr_atendimento is not null\nand obter_estab_atendimento(o.nr_atendimento) = e.cd_estabelecimento\n\nand o.dt_atualizacao between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Consulta",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamento Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- Agendamento Sadalla - Azure\n\nselect a.cd_pessoa_fisica, \na.cd_convenio, \nobter_cnpj_estabelecimento(ag.cd_estabelecimento) as cnpj,\nto_char(a.dt_agenda, 'yyyy-mm-dd') as data_agenda,\nto_char(a.dt_agenda, 'hh24:mi:ss') as hora_agenda,\n'Consulta' as tipo_agenda,\npf.nm_pessoa_fisica as nm_paciente,\nobter_desc_procedimento(10502, 1) as ds_procedimento_princ,\n'' ds_procedimento_adic,\n1 as ie_quantidade,\nobter_nome_usuario(a.nm_usuario_origem) as nm_usuario,\nobter_nome_pf(ag.cd_pessoa_fisica) as nm_medico,\nnm_fantasia_estab DS_UNIDADE,\nem.nm_razao_social MARCA,\nobter_valor_dominio(83,a.ie_status_agenda) as status_agenda,\na.nr_atendimento,\na.nr_sequencia,\n'NAO ENCONTRADO' as ID,\na.cd_procedencia,\np.ds_procedencia,\nto_char(a.dt_agendamento, 'yyyy-mm-dd') dt_agendamento,\n\nto_char(a.dt_agenda,'dd') dia,\nto_char(a.dt_agenda,'mm') mes,\nto_char(a.dt_agenda,'yyyy') ano,\nac.ds_classificacao ,\naa.ds_agrupamento ds_agrupamento,\na.cd_motivo_cancelamento,\nsubstr(obter_ds_motivo_status(a.nr_sequencia, a.cd_agenda),1,200) as ds_motivo_cancelamento,\na.cd_agenda,\n\nto_char(a.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\n'Tasy Delphi' as BASE\n\nfrom agenda_consulta a,\n     agenda ag,\n     pessoa_fisica pf,\n     procedencia p,\n     agenda_classif ac,\n     agrupamento_agenda aa,\n     estabelecimento e,\n     empresa em\nwhere a.cd_agenda = ag.cd_agenda\nand a.cd_pessoa_fisica = pf.cd_pessoa_fisica (+)\nand a.cd_procedencia = p.cd_procedencia(+)\nand a.ie_classif_agenda  = ac.cd_classificacao(+)\nand ag.nr_seq_agrupamento = aa.nr_sequencia (+)\nand ag.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa\nand a.cd_pessoa_fisica is not null\nand a.dt_agendamento between SYSDATE - 730 AND SYSDATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Clear Base",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Usuarios Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select u.nm_usuario, \nu.ds_usuario, \nu.ie_situacao, \nto_char(u.dt_atualizacao, 'yyyy-mm-dd') dt_atualizacao,\nobter_nome_estabelecimento(u.cd_estabelecimento) as DS_UNIDADE,\ne.cd_cgc as CNPJ,\nobter_nome_empresa(obter_empresa_estab(u.cd_estabelecimento)) as Marca,\n'Tasy Delphi' as BASE\nfrom usuario u,\n     empresa em,\n     estabelecimento e\nwhere u.cd_estabelecimento = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Usuario",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendas Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT A.CD_AGENDA, A.DS_AGENDA, A.CD_TIPO_AGENDA, A.CD_PESSOA_FISICA, E.CD_CGC as CNPJ, (SELECT X.DS_AREA_ATUACAO FROM AREA_ATUACAO_MEDICA X\nWHERE X.NR_SEQUENCIA = A.NR_SEQ_AREA_ATUACAO) AS DS_AREA_ATUACAO, A.IE_SITUACAO,\nto_char(A.DT_ATUALIZACAO, 'yyyy-mm-dd') DT_ATUALIZACAO,\n'Tasy Delphi' as BASE\nFROM AGENDA A,\n     ESTABELECIMENTO E\nWHERE A.CD_ESTABELECIMENTO = E.CD_ESTABELECIMENTO",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agenda",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Clear Base",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CLEARBASEATENDIMENTOUNIDADES]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-09T17:32:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gerar Base CNPJ')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Busca dados",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy to CSV CNPJ",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "    SELECT DISTINCT \n        a.CGC_CONV\n    FROM STG.BI_CNPJ_CONVENIO a\n    WHERE NOT EXISTS (SELECT X.CGC_CONVENIO FROM dw.DimConvenioCGC X WHERE X.CGC_CONVENIO = a.CGC_CONV)\n    AND LEN(A.CGC_CONV) = 14",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "FileServerWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DW_ORIGEM",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CSV_CNPJ_SYS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Busca dados",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "    SELECT DISTINCT \n        a.CGC_CONV\n    FROM STG.BI_CNPJ_CONVENIO a\n    WHERE NOT EXISTS (SELECT X.CGC_CONVENIO FROM dw.DimConvenioCGC X WHERE X.CGC_CONVENIO = a.CGC_CONV)\n    AND LEN(A.CGC_CONV) = 14",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW_ORIGEM",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CNPJ"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gerar Base Consulta CNPJ DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CNPJ CONV SMART - DH ITG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE STG.BI_CNPJ_CONVENIO",
								"writeBehavior": "insert",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV SMART - DH ITB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - DH ITG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV SMART - DH IOF",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - DH ITB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_IOF_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV SMART - Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - DH IOF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV HTML",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - HOSL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT \n    A.CD_CGC    AS CGC_CONV\nFROM CONVENIO A",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV DELPHI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV HTML",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT \n    A.CD_CGC    AS CGC_CONV\nFROM CONVENIO A",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CNPJ CONV SMART - HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CNPJ CONV SMART - Oftalmoclin",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CGC_CONV",
											"type": "String"
										},
										"sink": {
											"name": "CGC_CONV",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_OUT_CNPJ_CONVENIO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CNPJ"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gerar Base Consulta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\nreplace(replace(EMP.emp_cgc,'.',''),'-','') CGC_CONV\n--,EMP.emp_raz_soc\n-- ,EMP.emp_nome_fantasia\nFROM CNV (NOLOCK)\ninner join dbo.emp     EMP             (nolock)        on EMP.emp_cod = CNV.cnv_emp_cod\nWHERE len(replace(replace(EMP.emp_cgc,'.',''),'-','')) = 14 and EMP.EMP_CGC NOT IN ('00000000000000')\n-- WHERE UPPER(CNV_CONTRATO) = 'CITO - PF       '\n-- WHERE cnv_nome LIKE '%BRADESCO%'\n-- WHERE CNV_CONTRATO = 'PJ              '\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_CNPJ_SYS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CNPJ"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-09T14:48:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Agentes por Dia NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Agentes por Dia CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Dia DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorDia_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": [],
				"lastPublishTime": "2019-12-05T20:44:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Agentes por Hora NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Agentes por Hora DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agentes por Hora HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Usuario",
											"type": "String"
										},
										"sink": {
											"name": "Usuario",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recusas",
											"type": "String"
										},
										"sink": {
											"name": "Recusas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Internas_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transferencias",
											"type": "String"
										},
										"sink": {
											"name": "Transferencias",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Efetuadas Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Efetuadas_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "% Taxa de Contato",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_de_Contato",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Atendidas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Internas Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Internas_Recebidas",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Tempo Efetuadas",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Efetuadas",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Agente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Agente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Toque Cliente",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque_Cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Pausa",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Pausa",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Estouro",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Estouro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Dispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Disponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Indispon�vel",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Indisponivel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Logado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Logado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Deslogado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Deslogado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Falado x Logado",
											"type": "String"
										},
										"sink": {
											"name": "Falado_x_Logado",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_AgentesPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": [],
				"lastPublishTime": "2019-11-14T15:21:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Bilhetes NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Bilhete de ligacoes CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes CSI SADALLA",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes HOBL2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bilhete de ligacoes HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Data",
											"type": "DateTime",
											"format": "dd/MM/yyyy"
										},
										"sink": {
											"name": "DATA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Hora",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "Usu�rio",
											"type": "String"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Origem",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Destino",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Centro de Custo",
											"type": "String"
										},
										"sink": {
											"name": "CENTRO_DE_CUSTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Tarifado",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_TARIFADO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Decorrido",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO_DECORRIDO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Campanha",
											"type": "String"
										},
										"sink": {
											"name": "CAMPANHA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "FILA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Linked ID",
											"type": "String"
										},
										"sink": {
											"name": "LINKED_ID",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_Bilhete_Ligacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_BilheteLigacoes_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": [],
				"lastPublishTime": "2019-11-13T13:27:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historico Filas por Hora NEXCORE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start",
						"description": "Step added to paralellize execution",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Filas por Hora CSI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSI_CSV_NC_FilasporHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSL_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOSAG_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "HOB_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DH_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Filas por Hora INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Fila",
											"type": "String"
										},
										"sink": {
											"name": "Fila",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Intervalo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Atendidas Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Atendidas",
											"type": "String"
										},
										"sink": {
											"name": "Atendidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Ate NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Ate_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Apos NS",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Apos_NS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos Anuncio Inicial",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos_Anuncio_Inicial",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Abandonos",
											"type": "String"
										},
										"sink": {
											"name": "Abandonos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Timeout",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Timeout",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Cheia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Cheia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Vazia",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Vazia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Fila Sem Ags. Disp.",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Fila_Sem_Ags_Disp",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos Caixa Postal",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos_Caixa_Postal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Roteamentos",
											"type": "String"
										},
										"sink": {
											"name": "Roteamentos",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Antes",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Antes",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Intervalo",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Intervalo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario Depois",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario_Depois",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fora Horario",
											"type": "String"
										},
										"sink": {
											"name": "Fora_Horario",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Recebidas",
											"type": "String"
										},
										"sink": {
											"name": "Total_Recebidas",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback Nao Tratados",
											"type": "String"
										},
										"sink": {
											"name": "Callback_Nao_Tratados",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Callback",
											"type": "String"
										},
										"sink": {
											"name": "Callback",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Tempo Toque",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Toque",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Falado",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Falado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Pausa ACW",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Pausa_ACW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Produtivo AHT",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Produtivo_AHT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Nivel Servico",
											"type": "String"
										},
										"sink": {
											"name": "Nivel_Servico",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Atendimento",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Atendimento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "% Taxa Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Taxa_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Atender",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Atender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Medio para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Medio_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total para Abandono",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_para_Abandono",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tempo Total Espera",
											"type": "String"
										},
										"sink": {
											"name": "Tempo_Total_Espera",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Agentes Logados - Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Agentes_Logados_Maximo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Minimo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Minimo",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera - Medio",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Medio",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Chamadas em Espera = Maximo",
											"type": "String"
										},
										"sink": {
											"name": "Chamadas_em_Espera_Maximo",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "INOB_CSV_NC_FilasPorHora_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_NC_FilasPorHoras_Temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Cria Base Nexcore",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Filas por Hora CSI",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora HOSL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora Sadalla",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora HOB",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora DH",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filas por Hora INOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CREATEBASENEXCORE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Atendimento/Nexcore/Históricos"
				},
				"annotations": [],
				"lastPublishTime": "2019-11-14T21:24:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRIS_CARGA_DINAMICA_ADF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LISTA ORIGEM DESTINO",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "COPY STG TO DW",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.05:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[sp_origem_destino]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "String",
										"value": null
									},
									"Dt_inicio_manual": {
										"type": "DateTime",
										"value": null
									},
									"manual": {
										"type": "String",
										"value": "N"
									},
									"plataforma": {
										"type": "String",
										"value": "SMART_IRIS_ODBC_XXX"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LISTA_TABELAS_ADF",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "PROCESSA ETL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "DROPA TABELAS DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SE CARGA COMPLETA",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().TIPO_CARGA,'COMPLETA')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "DATA_HORA_INICIO_PARCIAL",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA PARCIAL",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"oracleReaderQuery": {
															"value": "@concat(\n'select * from ', item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM,' where ', item().nome_coluna_referencia,' >= ''',\nitem().Data_Inicio, ''' and  ', item().nome_coluna_referencia,' <= ''', item().Data_Fim, ''''\n)",
															"type": "Expression"
														},
														"partitionOption": "None",
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert"
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "ORACLE_DINAMICO",
														"type": "DatasetReference",
														"parameters": {
															"NOME_KEYVAULT_SECRET": "@item().NOME_KEYVAULT_SECRET",
															"schema_name": "@item().NOME_SCHEMA_ORIGEM",
															"table_name": "@item().NOME_TABELA_ORIGEM"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA PARCIAL').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "DATA_HORA_INICIO_COMPLETA",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA COMPLETA",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.10:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "PhysicalPartitionsOfTable"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "SQL_DINAMICO",
														"type": "DatasetReference",
														"parameters": {
															"NOME_KEYVAULT_SECRET": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"schema_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"table_name": {
																"value": "@item().NOME_TABELA_ORIGEM",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA COMPLETA').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "DROPA TABELAS DESTINO",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LISTA ORIGEM DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 30,
							"activities": [
								{
									"name": "LIMPA TABELA DESTINO",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.05:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N',\n'''',   \nitem().NOME_SCHEMA_DESTINO,\n'.',\nitem().NOME_TABELA_DESTINO,\n'''',\n') AND type in (N',\n'''',\n'U',\n'''',\n'))',\n' DROP TABLE ',\nitem().NOME_SCHEMA_DESTINO,\n'.',\nitem().NOME_TABELA_DESTINO,\n'  SELECT 0'\n)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DESTINO_TABELAS_ADF",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Destino": {
													"value": "@item().NOME_SCHEMA_DESTINO",
													"type": "Expression"
												},
												"Tabela_Destino": {
													"value": "@item().NOME_TABELA_DESTINO",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					},
					{
						"name": "Copy STG OSM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG CNV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.osm\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table stg.iris_osm",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_osm"
								}
							}
						]
					},
					{
						"name": "Copy STG CNV",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG HON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.cnv\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table stg.iris_CNV",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_cnv"
								}
							}
						]
					},
					{
						"name": "Copy STG CTF",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG OSM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.CTF\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table stg.iris_CTF",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_CTF"
								}
							}
						]
					},
					{
						"name": "Copy STG GCC",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG CTF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.GCC\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_GCC"
								}
							}
						]
					},
					{
						"name": "Copy STG HON",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG SMM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.HON A\nWHERE SUBSTRING(A.hon_dthr_alt,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_HON"
								}
							}
						]
					},
					{
						"name": "Copy STG PSV",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG GCC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.PSV\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_PSV"
								}
							}
						]
					},
					{
						"name": "Copy STG SMK",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG PSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.SMK\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_SMK"
								}
							}
						]
					},
					{
						"name": "Copy STG SMM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG NFS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.SMM A\nWHERE SUBSTRING(A.smm_dthr_alter,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_SMM"
								}
							}
						]
					},
					{
						"name": "Copy STG STR",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG SMK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.STR\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_STR"
								}
							}
						]
					},
					{
						"name": "Copy STG NFS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG EXT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.nfs A\nWHERE SUBSTRING(A.nfs_dthr_proc,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_NFS"
								}
							}
						]
					},
					{
						"name": "Copy STG EMP",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG STR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.EMP\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_EMP"
								}
							}
						]
					},
					{
						"name": "Copy STG FAT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG EMP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.FAT\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_FAT"
								}
							}
						]
					},
					{
						"name": "Copy STG EXT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG MNS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT \n96    estabelecimento\n,EXT.ext_osm_serie\n,EXT.ext_osm_num\n,EXT.ext_smm_num\n,EXT.ext_mns_serie\n,EXT.ext_mns_num\n,EXT.ext_dt_mov\n,EXT.ext_valor_glosa\n,EXT.ext_valor_receb\n,EXT.ext_mog_cod\n,EXT.ext_ccr_psv\n,EXT.EXT_PSV_COD\n,EXT.EXT_STATUS_GLOSA\n,EXT.EXT_SGO_COD\n,EXT.EXT_GLOSA_ACATADA\n,EXT.EXT_MTE_SERIE\n,EXT.EXT_MTE_SEQ\n,EXT.ext_qtd\n,EXT.ext_valor_imposto\n,EXT.ext_obs\n,EXT.ext_valor_complemento\n,NULL W\n,NULL EXT_VALOR_IMPOSTO222\n,NULL ext_valor_imp_sem_abater\n,EXT.ext_rpi_serie\n,EXT.ext_rpi_num\n,EXT.ext_rpi_status\n,EXT.ext_rpi_valor\n,EXT.ext_rpi_dthr\n,EXT.ext_rpi_usr_login\n,EXT.ext_rpi_obs\n,EXT.ext_epl_serie\n,EXT.ext_epl_num\n,MNS.MNS_DT_REG\nFROM EXT EXT\nINNER join MNS MNS  on ext.ext_mns_num = mns.MNS_NUM and ext.ext_mns_serie = mns.MNS_SERIE \nWHERE SUBSTRING(MNS.mns_dt_reg,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_EXT"
								}
							}
						]
					},
					{
						"name": "Copy STG MNS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG PAC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.mns A\nWHERE SUBSTRING(A.mns_dt_reg,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_MNS"
								}
							}
						]
					},
					{
						"name": "Copy STG PAC",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG MTE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.pac A\nWHERE SUBSTRING(A.pac_dreg,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_PAC"
								}
							}
						]
					},
					{
						"name": "Copy STG MTE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG AGM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.mte A\nWHERE SUBSTRING(A.mte_dt_reg,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_MTE"
								}
							}
						]
					},
					{
						"name": "Copy STG NFL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG FAT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.NFL\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_NFL"
								}
							}
						]
					},
					{
						"name": "Copy STG AGM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG TO DW FLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.agm A\nWHERE SUBSTRING(A.agm_hini,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_AGM"
								}
							}
						]
					},
					{
						"name": "Copy STG FLE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.fle A\nWHERE SUBSTRING(A.fle_dthr_reg,1,10) >= SUBSTRING(ADDDATE(NOW(),-30),1,10)\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_FLE"
								}
							}
						]
					},
					{
						"name": "Copy STG LOC",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG NFL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.LOC\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_LOC"
								}
							}
						]
					},
					{
						"name": "Copy STG GMM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy STG LOC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "SELECT  *  FROM dba.GMM\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_GMM"
								}
							}
						]
					},
					{
						"name": "COPY STG TO DW",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy STG GMM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "/**\n\ndrop table dw.iris_hon;\nselect '96' as ESTABELECIMENTO,* into dw.iris_hon from stg.iris_hon;\ndrop table dw.iris_smm;\nselect '96' as ESTABELECIMENTO,* into dw.iris_smm from stg.iris_smm;\ndrop table dw.iris_nfs;\nselect '96' as ESTABELECIMENTO,* into dw.iris_nfs from stg.iris_nfs;\ndrop table dw.iris_ext;\nselect '96' as ESTABELECIMENTO,* into dw.iris_ext from stg.iris_ext;\ndrop table dw.iris_mns;\nselect '96' as ESTABELECIMENTO,* into dw.iris_mns from stg.iris_mns;\ndrop table dw.iris_pac;\nselect '96' as ESTABELECIMENTO,* into dw.iris_pac from stg.iris_pac;\ndrop table dw.iris_mte;\nselect '96' as ESTABELECIMENTO,* into dw.iris_mte from stg.iris_mte;\ndrop table dw.iris_agm;\nselect '96' as ESTABELECIMENTO,* into dw.iris_agm from stg.iris_agm;\ndrop table dw.iris_fle;\nselect '96' as ESTABELECIMENTO,* into dw.iris_fle from stg.iris_fle;\n\n\ndrop table dw.iris_osm;\nselect '96' as ESTABELECIMENTO,* into dw.iris_osm from stg.iris_osm;\ndrop table dw.iris_cnv;\nselect '96' as ESTABELECIMENTO,* into dw.iris_cnv from stg.iris_cnv;\ndrop table dw.iris_ctf;\nselect '96' as ESTABELECIMENTO,* into dw.iris_ctf from stg.iris_ctf;\ndrop table dw.iris_gcc;\nselect '96' as ESTABELECIMENTO,* into dw.iris_gcc from stg.iris_gcc;\ndrop table dw.iris_psv;\nselect '96' as ESTABELECIMENTO,* into dw.iris_psv from stg.iris_psv;\ndrop table dw.iris_smk;\nselect '96' as ESTABELECIMENTO,* into dw.iris_smk from stg.iris_smk;\ndrop table dw.iris_str;\nselect '96' as ESTABELECIMENTO,* into dw.iris_str from stg.iris_str;\ndrop table dw.iris_emp;\nselect '96' as ESTABELECIMENTO,* into dw.iris_emp from stg.iris_emp;\ndrop table dw.iris_fat;\nselect '96' as ESTABELECIMENTO,* into dw.iris_fat from stg.iris_fat;\ndrop table dw.iris_nfl;\nselect '96' as ESTABELECIMENTO,* into dw.iris_nfl from stg.iris_nfl;\ndrop table dw.iris_loc;\nselect '96' as ESTABELECIMENTO,* into dw.iris_loc from stg.iris_loc;\ndrop table dw.iris_gmm;\nselect '96' as ESTABELECIMENTO,* into dw.iris_gmm from stg.iris_gmm;\n\n**/"
								}
							]
						}
					},
					{
						"name": "STG TO DW HON",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy STG HON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "WITH STG_HON \nAS\n(\n\nSELECT DISTINCT\n\t   '96' as estabelecimento\n\t  ,[hon_med]\n      ,[hon_psv_vinc]\n      ,[hon_ctf]\n      ,[hon_str]\n      ,[hon_tpctf]\n      ,[hon_str_solic]\n      ,[hon_seq]\n      ,[hon_aux]\n      ,[hon_cc1]\n      ,[hon_pc1]\n      ,[hon_vl1]\n      ,[hon_cc2]\n      ,[hon_pc2]\n      ,[hon_vl2]\n      ,[hon_cc3]\n      ,[hon_pc3]\n      ,[hon_vl3]\n      ,[hon_cc4]\n      ,[hon_pc4]\n      ,[hon_vl4]\n      ,[hon_cc5]\n      ,[hon_pc5]\n      ,[hon_vl5]\n      ,[hon_cnv_cod]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(hon_dthr_ini as varchar(1000))) = 1 THEN  cast(hon_dthr_ini as varchar(1000)) -- substring(substring(cast(hon_dthr_ini as varchar(1000)),9,2),1,4) + '/' + substring(substring(cast(hon_dthr_ini as varchar(1000)),6,2),1,4) + '/' + substring(substring(cast(hon_dthr_ini as varchar(1000)),1,10),1,4) \n\t\t\tWHEN ISDATE(cast(hon_dthr_ini as varchar(1000))) <> 1 THEN Null \n\t\tEND as hon_dthr_ini\n      ,[hon_status]\n      ,[HON_USR_LOGIN_CAD]\n      ,[HON_USR_LOGIN_ALT]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(HON_DTHR_ALT as varchar(1000))) = 1 THEN  cast(HON_DTHR_ALT as varchar(1000)) \n\t\t\tWHEN ISDATE(cast(HON_DTHR_ALT as varchar(1000))) <> 1 THEN Null \n\t   END as HON_DTHR_ALT\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(HON_DTHR_CAD as varchar(1000))) = 1 THEN  cast(HON_DTHR_CAD as varchar(1000)) \n\t\t\tWHEN ISDATE(cast(HON_DTHR_CAD as varchar(1000))) <> 1 THEN Null \n\t   END as HON_DTHR_CAD\n      ,[HON_GMR_COD]\n      ,[HON_CTF_CATEG]\n      ,[HON_EMP_COD]\n      ,[HON_CC6]\n      ,[HON_PC6]\n      ,[HON_VL6]\n      ,[hon_psv_solic]\n      ,[hon_ih_origem]\n      ,[HON_DIA]\n      ,[HON_HOR_INI]\n      ,[HON_HOR_FIM]\n      ,[hon_obs]\n      ,[hon_smk_tipo]\n      ,[hon_smk_cod]\n      ,[hon_forma_pag]\n      ,[hon_ind_rat]\n      ,[hon_gmr_solic]\n      ,[hon_cnv_emp_cod]\n      ,[hon_psv_tipo_solic]\n      ,[hon_tap_cod]\n      ,[hon_dce_id]\n      ,[hon_adicional_1]\n      ,[hon_adicional_2]\n      ,[hon_adicional_3]\n      ,[hon_adicional_4]\n      ,[hon_adicional_5]\n      ,[hon_adicional_6]\n      ,[hon_grupo_id]\n\t  \n  FROM [stg].[iris_HON]  with(nolock)\n\t  )\n\n--Sincronize a tabela de destino com dados atualizados da tabela de origem\nMERGE\t\n\t[a].[tbl_HON] AS destino\nUSING \n\tSTG_HON AS origem\n\n\tON (destino.hon_seq\t\t\t= origem.hon_seq\t\t\tAND \n\t\tdestino.estabelecimento = origem.estabelecimento)\n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração\nWHEN MATCHED \nTHEN UPDATE SET      \ndestino.[hon_med] = origem.[hon_med],\ndestino.[hon_psv_vinc] = origem.[hon_psv_vinc],\ndestino.[hon_ctf] = origem.[hon_ctf],\ndestino.[hon_str] = origem.[hon_str],\ndestino.[hon_tpctf] = origem.[hon_tpctf],\ndestino.[hon_str_solic] = origem.[hon_str_solic],\ndestino.[hon_seq] = origem.[hon_seq],\ndestino.[hon_aux] = origem.[hon_aux],\ndestino.[hon_cc1] = origem.[hon_cc1],\ndestino.[hon_pc1] = origem.[hon_pc1],\ndestino.[hon_vl1] = origem.[hon_vl1],\ndestino.[hon_cc2] = origem.[hon_cc2],\ndestino.[hon_pc2] = origem.[hon_pc2],\ndestino.[hon_vl2] = origem.[hon_vl2],\ndestino.[hon_cc3] = origem.[hon_cc3],\ndestino.[hon_pc3] = origem.[hon_pc3],\ndestino.[hon_vl3] = origem.[hon_vl3],\ndestino.[hon_cc4] = origem.[hon_cc4],\ndestino.[hon_pc4] = origem.[hon_pc4],\ndestino.[hon_vl4] = origem.[hon_vl4],\ndestino.[hon_cc5] = origem.[hon_cc5],\ndestino.[hon_pc5] = origem.[hon_pc5],\ndestino.[hon_vl5] = origem.[hon_vl5],\ndestino.[hon_cnv_cod] = origem.[hon_cnv_cod],\ndestino.[hon_dthr_ini] = origem.[hon_dthr_ini],\ndestino.[hon_status] = origem.[hon_status],\ndestino.[HON_USR_LOGIN_CAD] = origem.[HON_USR_LOGIN_CAD],\ndestino.[HON_USR_LOGIN_ALT] = origem.[HON_USR_LOGIN_ALT],\ndestino.[HON_DTHR_ALT] = origem.[HON_DTHR_ALT],\ndestino.[HON_DTHR_CAD] = origem.[HON_DTHR_CAD],\ndestino.[HON_GMR_COD] = origem.[HON_GMR_COD],\ndestino.[HON_CTF_CATEG] = origem.[HON_CTF_CATEG],\ndestino.[HON_EMP_COD] = origem.[HON_EMP_COD],\ndestino.[HON_CC6] = origem.[HON_CC6],\ndestino.[HON_PC6] = origem.[HON_PC6],\ndestino.[HON_VL6] = origem.[HON_VL6],\ndestino.[hon_psv_solic] = origem.[hon_psv_solic],\ndestino.[hon_ih_origem] = origem.[hon_ih_origem],\ndestino.[HON_DIA] = origem.[HON_DIA],\ndestino.[HON_HOR_INI] = origem.[HON_HOR_INI],\ndestino.[HON_HOR_FIM] = origem.[HON_HOR_FIM],\ndestino.[hon_obs] = origem.[hon_obs],\ndestino.[hon_smk_tipo] = origem.[hon_smk_tipo],\ndestino.[hon_smk_cod] = origem.[hon_smk_cod],\ndestino.[hon_forma_pag] = origem.[hon_forma_pag],\ndestino.[hon_ind_rat] = origem.[hon_ind_rat],\ndestino.[hon_gmr_solic] = origem.[hon_gmr_solic],\ndestino.[hon_cnv_emp_cod] = origem.[hon_cnv_emp_cod],\ndestino.[hon_psv_tipo_solic] = origem.[hon_psv_tipo_solic],\ndestino.[hon_tap_cod] = origem.[hon_tap_cod],\ndestino.[hon_dce_id] = origem.[hon_dce_id],\ndestino.[hon_adicional_1] = origem.[hon_adicional_1],\ndestino.[hon_adicional_2] = origem.[hon_adicional_2],\ndestino.[hon_adicional_3] = origem.[hon_adicional_3],\ndestino.[hon_adicional_4] = origem.[hon_adicional_4],\ndestino.[hon_adicional_5] = origem.[hon_adicional_5],\ndestino.[hon_adicional_6] = origem.[hon_adicional_6],\ndestino.[hon_grupo_id] = origem.[hon_grupo_id]\n\n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT \n\tVALUES (  \norigem.estabelecimento,\norigem.[hon_med],\norigem.[hon_psv_vinc],\norigem.[hon_ctf],\norigem.[hon_str],\norigem.[hon_tpctf],\norigem.[hon_str_solic],\norigem.[hon_seq],\norigem.[hon_aux],\norigem.[hon_cc1],\norigem.[hon_pc1],\norigem.[hon_vl1],\norigem.[hon_cc2],\norigem.[hon_pc2],\norigem.[hon_vl2],\norigem.[hon_cc3],\norigem.[hon_pc3],\norigem.[hon_vl3],\norigem.[hon_cc4],\norigem.[hon_pc4],\norigem.[hon_vl4],\norigem.[hon_cc5],\norigem.[hon_pc5],\norigem.[hon_vl5],\norigem.[hon_cnv_cod],\norigem.[hon_dthr_ini],\norigem.[hon_status],\norigem.[HON_USR_LOGIN_CAD],\norigem.[HON_USR_LOGIN_ALT],\norigem.[HON_DTHR_ALT],\norigem.[HON_DTHR_CAD],\norigem.[HON_GMR_COD],\norigem.[HON_CTF_CATEG],\norigem.[HON_EMP_COD],\norigem.[HON_CC6],\norigem.[HON_PC6],\norigem.[HON_VL6],\norigem.[hon_psv_solic],\norigem.[hon_ih_origem],\norigem.[HON_DIA],\norigem.[HON_HOR_INI],\norigem.[HON_HOR_FIM],\norigem.[hon_obs],\norigem.[hon_smk_tipo],\norigem.[hon_smk_cod],\norigem.[hon_forma_pag],\norigem.[hon_ind_rat],\norigem.[hon_gmr_solic],\norigem.[hon_cnv_emp_cod],\norigem.[hon_psv_tipo_solic],\norigem.[hon_tap_cod],\norigem.[hon_dce_id],\norigem.[hon_adicional_1],\norigem.[hon_adicional_2],\norigem.[hon_adicional_3],\norigem.[hon_adicional_4],\norigem.[hon_adicional_5],\norigem.[hon_adicional_6],\norigem.[hon_grupo_id]\n) ;\n \n\n\n"
								}
							]
						}
					},
					{
						"name": "STG TO DW FLE",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy STG FLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "WITH STG_FLE \nAS\n(\n\nSELECT DISTINCT\n\t   '96' as estabelecimento\n\t ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_chegada as varchar(1000))) = 1 THEN  cast(fle_dthr_chegada as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_chegada as varchar(1000))) <> 1 THEN Null \n\t  END as fle_dthr_chegada\n      ,[FLE_PSV_COD]\n      ,[FLE_STR_COD]\n      ,[FLE_PAC_REG]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_atendimento as varchar(1000))) = 1 THEN  cast(fle_dthr_atendimento as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_atendimento as varchar(1000))) <> 1 THEN Null \n\t   END as fle_dthr_atendimento\n      ,[FLE_ORDEM]\n      ,[FLE_STATUS]\n      ,[FLE_USR_LOGIN]\n    --  ,[FLE_OBS_OLD]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_marcada as varchar(1000))) = 1 THEN  cast(fle_dthr_marcada as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_marcada as varchar(1000))) <> 1 THEN Null \n\t\tEND as fle_dthr_marcada\n      ,[FLE_MARC_EXTRA]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(FLE_DTHR_FINAL as varchar(1000))) = 1 THEN  cast(FLE_DTHR_FINAL as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(FLE_DTHR_FINAL as varchar(1000))) <> 1 THEN Null \n\t\tEND as FLE_DTHR_FINAL\n      ,[FLE_PSV_RESP]\n      ,[FLE_MFL_RETORNO]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(FLE_DTHR_REG as varchar(1000))) = 1 THEN  cast(FLE_DTHR_REG as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(FLE_DTHR_REG as varchar(1000))) <> 1 THEN Null \n\t\tEND as FLE_DTHR_REG\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_chegada_inicial as varchar(1000))) = 1 THEN  cast(fle_dthr_chegada_inicial as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_chegada_inicial as varchar(1000))) <> 1 THEN Null \n\t   END as fle_dthr_chegada_inicial\n      ,[FLE_PROCED]\n      ,[FLE_COR]\n      ,[FLE_BIP]\n      ,[FLE_VERSAO]\n      ,[FLE_USR_ATENDIMENTO]\n      ,[FLE_USR_FINAL]\n      ,CASE  \n\t\t\tWHEN ISDATE(cast(fle_dthr_hora_aguardo as varchar(1000))) = 1 THEN  cast(fle_dthr_hora_aguardo as varchar(1000))  \n\t\t\tWHEN ISDATE(cast(fle_dthr_hora_aguardo as varchar(1000))) <> 1 THEN Null \n\t\tEND as fle_dthr_hora_aguardo\n\n      ,[FLE_OSM_SERIE]\n      ,[FLE_OSM_NUM]\n      ,[FLE_SMM_NUM]\n      ,[FLE_LOC_COD]\n      ,[FLE_OBS]\n      ,[FLE_OBS_PSV]\n      ,[FLE_PREFERENCIAL]\n      ,[FLE_ID]\n      ,[FLE_SMA_SERIE]\n      ,[FLE_SMA_NUM]\n      ,[FLE_IND_OCUPADO]\n      ,[FLE_PSV_T_PREFIXO]\n      ,[FLE_ID_FILA_SOLICITACAO_RD]\n      ,[FLE_PAC_NOME]\n      ,[FLE_RETORNO]\n      ,[FLE_RISCO_QUEDA]\n      ,[FLE_VULNERAVEL]\n   --   ,[FLE_TOLIFE_EPISODE]\n\t  \n  FROM [stg].[iris_FLE]  with(nolock)\n\t  )\n\n--delete [a].[tbl_FLE] where Estabelecimento = 96\n--select count(*)  from [a].[tbl_FLE] where Estabelecimento = 96  --696.551\n\n--Sincronize a tabela de destino com dados atualizados da tabela de origem\nMERGE\t\n\t[a].[tbl_FLE] AS destino\nUSING \n\tSTG_FLE AS origem\n\n\tON (\n\t\tdestino.estabelecimento\t\t\t= origem.estabelecimento\t\t\tAND\t\n\t\tdestino.FLE_DTHR_CHEGADA\t\t= origem.FLE_DTHR_CHEGADA\t\t\tAND\n\t\tdestino.FLE_PSV_COD\t\t\t\t= origem.FLE_PSV_COD\t\t\t\tAND \n\t\tdestino.FLE_PAC_REG\t\t\t\t= origem.FLE_PAC_REG\t\t\t\tAND\n\t\tdestino.fle_str_cod\t\t\t\t= origem.fle_str_cod\t\t\t\tAND\t\n\n\t\tdestino.FLE_USR_LOGIN\t\t\t= origem.FLE_USR_LOGIN\t\t\t\tAND\n\t\tdestino.fle_loc_cod\t\t\t\t= origem.fle_loc_cod\t\t\t\tAND\n\t\t\n\t\tdestino.FLE_DTHR_ATENDIMENTO\t= origem.FLE_DTHR_ATENDIMENTO\t\tAND\n\t\tdestino.FLE_DTHR_FINAL\t\t\t= origem.FLE_DTHR_FINAL\t\t\t\tAND\n\t\tdestino.FLE_ORDEM\t\t\t\t= origem.FLE_ORDEM\t\t\t\t\tAND\n\t\tdestino.FLE_DTHR_MARCADA\t\t= origem.FLE_DTHR_MARCADA\t\t\t\n\t\t\n\t\t\n\t\n\t\t)\n\n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração\nWHEN MATCHED \nTHEN UPDATE SET      \ndestino.fle_bip=origem.fle_bip,\ndestino.fle_cor=origem.fle_cor,\ndestino.fle_dthr_atendimento=origem.fle_dthr_atendimento,\ndestino.fle_dthr_chegada=origem.fle_dthr_chegada,\ndestino.fle_dthr_chegada_inicial=origem.fle_dthr_chegada_inicial,\ndestino.FLE_DTHR_FINAL=origem.FLE_DTHR_FINAL,\ndestino.fle_dthr_hora_aguardo=origem.fle_dthr_hora_aguardo,\ndestino.fle_dthr_marcada=origem.fle_dthr_marcada,\ndestino.FLE_DTHR_REG=origem.FLE_DTHR_REG,\ndestino.fle_id=origem.fle_id,\ndestino.fle_id_fila_solicitacao_rd=origem.fle_id_fila_solicitacao_rd,\ndestino.fle_ind_ocupado=origem.fle_ind_ocupado,\ndestino.fle_loc_cod=origem.fle_loc_cod,\ndestino.fle_marc_extra=origem.fle_marc_extra,\ndestino.FLE_MFL_RETORNO=origem.FLE_MFL_RETORNO,\ndestino.fle_obs=origem.fle_obs,\ndestino.FLE_OBS_PSV=origem.FLE_OBS_PSV,\ndestino.fle_ordem=origem.fle_ordem,\ndestino.fle_osm_num=origem.fle_osm_num,\ndestino.fle_osm_serie=origem.fle_osm_serie,\ndestino.fle_pac_nome=origem.fle_pac_nome,\ndestino.fle_pac_reg=origem.fle_pac_reg,\ndestino.fle_preferencial=origem.fle_preferencial,\ndestino.fle_proced=origem.fle_proced,\ndestino.fle_psv_cod=origem.fle_psv_cod,\ndestino.FLE_PSV_RESP=origem.FLE_PSV_RESP,\ndestino.fle_psv_t_prefixo=origem.fle_psv_t_prefixo,\ndestino.fle_retorno=origem.fle_retorno,\ndestino.fle_risco_queda=origem.fle_risco_queda,\ndestino.fle_sma_num=origem.fle_sma_num,\ndestino.fle_sma_serie=origem.fle_sma_serie,\ndestino.fle_smm_num=origem.fle_smm_num,\ndestino.fle_status=origem.fle_status,\ndestino.fle_str_cod=origem.fle_str_cod,\ndestino.fle_usr_atendimento=origem.fle_usr_atendimento,\ndestino.fle_usr_final=origem.fle_usr_final,\ndestino.fle_usr_login=origem.fle_usr_login,\ndestino.fle_versao=origem.fle_versao,\ndestino.fle_vulneravel=origem.fle_vulneravel\n\n\n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT \n\tVALUES (  \norigem.estabelecimento,\norigem.fle_dthr_chegada,\norigem.fle_psv_cod,\norigem.fle_str_cod,\norigem.fle_pac_reg,\norigem.fle_dthr_atendimento,\norigem.fle_ordem,\norigem.fle_status,\norigem.fle_usr_login,\norigem.fle_obs,\norigem.fle_dthr_marcada,\norigem.fle_marc_extra,\norigem.FLE_DTHR_FINAL,\norigem.FLE_PSV_RESP,\norigem.FLE_OBS_PSV,\norigem.FLE_MFL_RETORNO,\norigem.FLE_DTHR_REG,\norigem.fle_dthr_chegada_inicial,\norigem.fle_cor,\norigem.fle_bip,\norigem.fle_proced,\norigem.fle_versao,\norigem.fle_usr_atendimento,\norigem.fle_usr_final,\norigem.fle_dthr_hora_aguardo,\norigem.fle_osm_serie,\norigem.fle_osm_num,\norigem.fle_smm_num,\norigem.fle_loc_cod,\norigem.fle_preferencial,\norigem.fle_id,\norigem.fle_sma_serie,\norigem.fle_sma_num,\norigem.fle_ind_ocupado,\norigem.fle_psv_t_prefixo,\norigem.fle_id_fila_solicitacao_rd,\norigem.fle_pac_nome,\norigem.fle_retorno,\norigem.fle_risco_queda,\norigem.fle_vulneravel\n\n) ;\n \n\n\n"
								}
							]
						}
					}
				],
				"concurrency": 5,
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Data Warehouse/P&P"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRIS_STORAGE_ACCOUNT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lista arquivos",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_HMAISDATADRIVEN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"FileSystem": "urobrasil"
								}
							},
							"fieldList": [
								"childItems",
								"itemType",
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filtro",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lista arquivos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lista arquivos').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endsWith(item().name, 'csv')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filtro",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filtro').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copia dados para a STG",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "@{concat('Drop table stg.',activity('Lista arquivos').output.itemName)}",
												"type": "Expression"
											},
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_HMAISDATADRIVEN",
											"type": "DatasetReference",
											"parameters": {
												"Filesystem": {
													"value": "@activity('Lista arquivos').output.itemName",
													"type": "Expression"
												},
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AZ_SQL_STG",
											"type": "DatasetReference",
											"parameters": {
												"SCHEMA": "stg",
												"TABELA": {
													"value": "@activity('Lista arquivos').output.itemName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Move arquivo para PROCESSADOS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "STG DW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_HMAISDATADRIVEN",
											"type": "DatasetReference",
											"parameters": {
												"Filesystem": {
													"value": "@activity('Lista arquivos').output.itemName",
													"type": "Expression"
												},
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_HMAISDATADRIVEN",
											"type": "DatasetReference",
											"parameters": {
												"Filesystem": {
													"value": "@concat(activity('Lista arquivos').output.itemName,'\\Processados')",
													"type": "Expression"
												},
												"File": {
													"value": "@concat(item().name,'-',utcnow())",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Apaga arquivo",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Move arquivo para PROCESSADOS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_HMAISDATADRIVEN",
											"type": "DatasetReference",
											"parameters": {
												"Filesystem": {
													"value": "@activity('Lista arquivos').output.itemName",
													"type": "Expression"
												},
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "sv_hmaisbrasildatadriven",
												"type": "LinkedServiceReference"
											},
											"path": "ceop/logs"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "STG DW",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Copia dados para a STG",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SQL_DESTINO",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": "MERGE\t           \n\tdw.ortocity AS destino           \nUSING            \n\tstg.ortocity AS origem           \n           \n    ON(        \ndestino.CD_ESTABELECIMENTO\t\t= origem.CD_ESTABELECIMENTO AND\ndestino.DS_ESTABELECIMENTO\t\t= origem.DS_ESTABELECIMENTO AND\ndestino.NR_ATENDIMENTO\t\t\t= origem.NR_ATENDIMENTO AND\ndestino.NR_INTERNO_CONTA\t\t= origem.NR_INTERNO_CONTA AND\ndestino.CD_PESSOA_FISICA\t\t= origem.CD_PESSOA_FISICA AND\ndestino.CD_CONVENIO\t\t\t\t= origem.CD_CONVENIO AND\ndestino.CD_MEDICO_EXECUTANTE\t=\torigem.CD_MEDICO_EXECUTANTE \n)        \n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \ndestino.CD_ESTABELECIMENTO=origem.CD_ESTABELECIMENTO ,\ndestino.DS_ESTABELECIMENTO=origem.DS_ESTABELECIMENTO ,\ndestino.NR_ATENDIMENTO=origem.NR_ATENDIMENTO ,\ndestino.NR_INTERNO_CONTA=origem.NR_INTERNO_CONTA ,\ndestino.CD_PESSOA_FISICA=origem.CD_PESSOA_FISICA ,\ndestino.NM_PESSOA_FISICA=origem.NM_PESSOA_FISICA ,\ndestino.DT_NASCIMENTO=origem.DT_NASCIMENTO ,\ndestino.CD_CONVENIO=origem.CD_CONVENIO ,\ndestino.DS_CONVENIO=origem.DS_CONVENIO ,\ndestino.CD_MEDICO_EXECUTANTE=origem.CD_MEDICO_EXECUTANTE ,\ndestino.NM_MEDICO_EXECUTANTE=origem.NM_MEDICO_EXECUTANTE ,\ndestino.CD_SETOR_EXECUTANTE=origem.CD_SETOR_EXECUTANTE ,\ndestino.DS_SETOR_EXECUTANTE=origem.DS_SETOR_EXECUTANTE ,\ndestino.DT_ENTRADA=origem.DT_ENTRADA ,\ndestino.CD_ITEM=origem.CD_ITEM ,\ndestino.DS_ITEM=origem.DS_ITEM ,\ndestino.DT_LANC_ITEM=origem.DT_LANC_ITEM ,\ndestino.QT=origem.QT ,\ndestino.VALOR=origem.VALOR \n\n\n  \n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.CD_ESTABELECIMENTO,\norigem.DS_ESTABELECIMENTO,\norigem.NR_ATENDIMENTO,\norigem.NR_INTERNO_CONTA,\norigem.CD_PESSOA_FISICA,\norigem.NM_PESSOA_FISICA,\norigem.DT_NASCIMENTO,\norigem.CD_CONVENIO,\norigem.DS_CONVENIO,\norigem.CD_MEDICO_EXECUTANTE,\norigem.NM_MEDICO_EXECUTANTE,\norigem.CD_SETOR_EXECUTANTE,\norigem.DS_SETOR_EXECUTANTE,\norigem.DT_ENTRADA,\norigem.CD_ITEM,\norigem.DS_ITEM,\norigem.DT_LANC_ITEM,\norigem.QT,\norigem.VALOR\n); "
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"query": "\nSELECT \nosm_num\n,osm_pac\n,osm_dthr\n,osm_cnv\n,osm_proc\n,osm_mreq\n,osm_str\n,osm_status\n,osm_ind_urg\n,osm_serie\n,osm_hsp_num\n,osm_tipo\n,osm_dt_result\n,osm_atend\n,osm_obs_coleta\n,osm_lta_cod\n,osm_ctle_cnv\n,osm_nota_sala\n,osm_cid_cod\n,osm_obs\n,osm_mcnv\n,OSM_PADRAO_PRECO\n,OSM_DT_SOLIC\n,OSM_HORA_ESP\n,OSM_SUS_GRUPO_ATENDE\n,OSM_SUS_TIPO_ATENDE\n,OSM_CNPJ_SOLIC\n,OSM_SAP_COD\n,OSM_LIB_PAG\n,OSM_LIB_PAG_DTHR\n,OSM_LIB_PAG_USR\n,OSM_MTE_SERIE_BENEF\n,OSM_MTE_SEQ_BENEF\n,OSM_OSM_SERIE_BENEF\n,OSM_OSM_NUM_BENEF\n,OSM_LIB_PAG_SERIE\n,OSM_LIB_PAG_NUM\n,OSM_ASO_MES_REF\n,OSM_NUM_EXTERNO\n,OSM_CML_CNV_COD\n,OSM_LEG_COD\n,OSM_CML_CONV_COD\n,OSM_CML_CONV_NOME\n,OSM_LIB_PAG_NFL_NUM\n,OSM_LIB_PAG_NFL_SERIE\n,OSM_IND_COLETA_DOM\n,OSM_MREQ_IND_SLINE\n,osm_usr_login_cad\n,osm_mreq_2\n,osm_mreq_3\n,osm_dt_solic_2\n,osm_dt_solic_3\n,osm_nota_sala_cobranca_mat\n,OSM_MCNV_PROTOCOLO\n,osm_tipo_acidente\n,osm_tipo_doenca\n,osm_tempo_doenca\n,osm_escala_doenca\n,osm_tiss_indic_clinica\n,osm_tiss_tipo_atende\n,OSM_TISS_TIPO_SAIDA\n,osm_sus_idade\n,osm_sus_sexo\n,osm_dthr_saida\n,osm_empnome_solic\n,osm_tiss_guia_principal\n,osm_cnes_solic\n,osm_w_login\n,osm_w_senha\n,osm_num_externo_alfa\n,osm_pln_cod\n,osm_obs_tiss\n,osm_psv_indic\n,osm_imp_etiq\n,osm_ind_web\n,osm_etiqueta_cip_lsf\n,osm_tipo_audit\n,OSM_PAC_ETIQUETA_CIP_LSF\n,osm_planserv_rat_empresa\n,osm_cod_cebim\n,osm_email_result\n,osm_cr_cor\n,osm_planserv_bm_mot_tipo\n,osm_planserv_bm_mot_cod\n,osm_obs_extenso\n,osm_trak_passagem\n,osm_id_alvaro\n,osm_obs_pend_b2b\n,osm_ind_vacina\n,osm_lib_pag_prt\n,osm_tiss_guia_operadora\n,osm_planserv_rat_dt_emis\n,osm_dthr_biometria_unimed\n,osm_resultado_biometria_unimed\n,OSM_IND_ANTECIPADA\n,OSM_ORI_SOL\n,osm_click_protocolo\n,osm_click_requisicao\n,osm_click_ind_integracao\n,osm_dthr_exp\n,osm_orp_num\n,osm_sus_ind_prog_transp\n,osm_mcnv_protocolo_v2\n,osm_token\n,osm_cod_justificativa\n,osm_status_confirmacao\n,osm_id_integra\n,osm_tp_ident_benef\n  FROM dba.osm\n\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_IRIS_ODBC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "iris_osm"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data Warehouse/P&P"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Importa CSV Py to AZ')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CSV to AZ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_CNPJ_PY_AZ_FINAL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_DIM_CNPJ",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CNPJ"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Movimento_Estoque')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Mov Estoque HTML",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "WITH AUX AS(\nselect operacao_estoque.cd_operacao_estoque,\n    dt_movimento_estoque,\n    movimento_estoque.cd_local_estoque,\n    ds_local_estoque,\n    movimento_estoque.cd_estabelecimento,\n    nm_fantasia_estab,\n    movimento_estoque.nr_documento,\n    movimento_estoque.cd_material,\n    /*case \n        when ds_familia is null then 'Sem classificação'\n        else ds_familia\n        end familia_padrao,*/\n    MATERIAL.CD_CLASSE_MATERIAL,   \n    ds_classe_material classe_material,\n    ds_subgrupo_material Subgrupo,\n    ds_grupo_material Grupo,\n    ds_fabricante Fabricante,\n    ds_reduzida,\n    ds_operacao,\n    ie_entrada_saida,\n    cd_acao,\n    case \n        when ds_operacao in ('Consumo', 'Execução Prescrição', 'Consumo da Produção')\n        then sum(qt_movimento)/(avg(QT_CONV_ESTOQUE_CONSUMO))\n        else sum(qt_movimento)\n        end qt_movimento,\n    sum(case when movimento_estoque_valor.cd_tipo_valor = 5 then - movimento_estoque_valor.vl_movimento else + movimento_estoque_valor.vl_movimento end ) valor_movimento\n    \n    from movimento_estoque\n    left join operacao_estoque\n    on movimento_estoque.cd_operacao_estoque = operacao_estoque.cd_operacao_estoque\n    \n    left join estabelecimento\n    on (movimento_estoque.cd_estabelecimento = estabelecimento.cd_estabelecimento)\n    \n    left join local_estoque\n    on (local_estoque.cd_estabelecimento = movimento_estoque.cd_estabelecimento AND\n        local_estoque.cd_local_estoque = movimento_estoque.cd_local_estoque)\n        \n    left join material\n    on (movimento_estoque.cd_material = material.cd_material) \n    \n    left join material_familia\n    on (material.nr_seq_familia = material_familia.nr_sequencia)\n    \n    left join classe_material\n    on (material.cd_classe_material = classe_material.cd_classe_material)\n    \n    left join subgrupo_material\n    on (classe_material.cd_subgrupo_material = subgrupo_material.cd_subgrupo_material)\n    \n    left join grupo_material\n    on (subgrupo_material.cd_grupo_material = grupo_material.cd_grupo_material)\n    \n    left join mat_fabricante\n    on material.nr_seq_fabric =  mat_fabricante.nr_sequencia\n    \n    left join movimento_estoque_valor\n    on movimento_estoque_valor.nr_movimento_estoque = movimento_estoque.nr_movimento_estoque\n\n    --where dt_movimento_estoque >= '01/01/2020' \n\n    GROUP BY operacao_estoque.cd_operacao_estoque,\n        dt_movimento_estoque,\n        movimento_estoque.cd_local_estoque,\n        ds_local_estoque,\n        movimento_estoque.cd_estabelecimento,\n        nm_fantasia_estab,\n        movimento_estoque.nr_documento,\n        movimento_estoque.cd_material,\n        --case when ds_familia is null then 'Sem classificação' else ds_familia end,\n        material.cd_classe_material,\n        ds_classe_material,\n        ds_subgrupo_material,\n        ds_grupo_material,\n        ds_fabricante,\n        ds_reduzida,\n        ds_operacao,\n        ie_entrada_saida,\n        cd_acao\n)\nSELECT \n    TO_CHAR(A.DT_MOVIMENTO_ESTOQUE,'YYYY-MM-DD') AS DATA_MOVIMENTO\n    ,A.CD_LOCAL_ESTOQUE\n    ,A.DS_LOCAL_ESTOQUE\n    ,A.CD_ESTABELECIMENTO\n    ,A.nm_fantasia_estab                         AS DS_ESTABELECIMENTO\n    ,A.CD_MATERIAL\n    ,A.DS_REDUZIDA                                AS DS_MATERIAL_SHORT\n    ,A.CD_CLASSE_MATERIAL\n    ,A.CLASSE_MATERIAL                           AS DS_CLASSE_MATERIAL\n    ,A.cd_operacao_estoque\n    ,A.DS_OPERACAO\n    ,A.QT_MOVIMENTO\n    ,CASE \n        WHEN A.CD_ACAO = 2 THEN A.VALOR_MOVIMENTO * -1\n        ELSE A.VALOR_MOVIMENTO\n     END VL_MOVIMENTO   \nFROM AUX A\nWHERE TO_CHAR(TRUNC(A.DT_MOVIMENTO_ESTOQUE,'MM'),'YYYY-MM-DD') = TO_CHAR(TRUNC(SYSDATE,'MM'),'YYYY-MM-DD')",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DECLARE @MES INT\nDECLARE @ANO INT\n\nSET @MES = MONTH(GETDATE())\nSET @ANO = YEAR(GETDATE())\n\nDELETE FROM MOVIMENTO_ESTOQUE\nWHERE MONTH(DATA_MOVIMENTO) = @MES\n    AND YEAR(DATA_MOVIMENTO) = @ANO",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOQUE"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO_ESTOQUE"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO"
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO"
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque Delphi",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque HTML",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "WITH AUX AS(\nselect operacao_estoque.cd_operacao_estoque,\n    dt_movimento_estoque,\n    movimento_estoque.cd_local_estoque,\n    ds_local_estoque,\n    movimento_estoque.cd_estabelecimento,\n    nm_fantasia_estab,\n    movimento_estoque.nr_documento,\n    movimento_estoque.cd_material,\n    /*case \n        when ds_familia is null then 'Sem classificação'\n        else ds_familia\n        end familia_padrao,*/\n    MATERIAL.CD_CLASSE_MATERIAL,   \n    ds_classe_material classe_material,\n    ds_subgrupo_material Subgrupo,\n    ds_grupo_material Grupo,\n    ds_fabricante Fabricante,\n    ds_reduzida,\n    ds_operacao,\n    ie_entrada_saida,\n    cd_acao,\n    case \n        when ds_operacao in ('Consumo', 'Execução Prescrição', 'Consumo da Produção')\n        then sum(qt_movimento)/(avg(QT_CONV_ESTOQUE_CONSUMO))\n        else sum(qt_movimento)\n        end qt_movimento,\n    sum(case when movimento_estoque_valor.cd_tipo_valor = 5 then - movimento_estoque_valor.vl_movimento else + movimento_estoque_valor.vl_movimento end ) valor_movimento\n    \n    from movimento_estoque\n    left join operacao_estoque\n    on movimento_estoque.cd_operacao_estoque = operacao_estoque.cd_operacao_estoque\n    \n    left join estabelecimento\n    on (movimento_estoque.cd_estabelecimento = estabelecimento.cd_estabelecimento)\n    \n    left join local_estoque\n    on (local_estoque.cd_estabelecimento = movimento_estoque.cd_estabelecimento AND\n        local_estoque.cd_local_estoque = movimento_estoque.cd_local_estoque)\n        \n    left join material\n    on (movimento_estoque.cd_material = material.cd_material) \n    \n    left join material_familia\n    on (material.nr_seq_familia = material_familia.nr_sequencia)\n    \n    left join classe_material\n    on (material.cd_classe_material = classe_material.cd_classe_material)\n    \n    left join subgrupo_material\n    on (classe_material.cd_subgrupo_material = subgrupo_material.cd_subgrupo_material)\n    \n    left join grupo_material\n    on (subgrupo_material.cd_grupo_material = grupo_material.cd_grupo_material)\n    \n    left join mat_fabricante\n    on material.nr_seq_fabric =  mat_fabricante.nr_sequencia\n    \n    left join movimento_estoque_valor\n    on movimento_estoque_valor.nr_movimento_estoque = movimento_estoque.nr_movimento_estoque\n\n    --where dt_movimento_estoque >= '01/01/2020' \n\n    GROUP BY operacao_estoque.cd_operacao_estoque,\n        dt_movimento_estoque,\n        movimento_estoque.cd_local_estoque,\n        ds_local_estoque,\n        movimento_estoque.cd_estabelecimento,\n        nm_fantasia_estab,\n        movimento_estoque.nr_documento,\n        movimento_estoque.cd_material,\n        --case when ds_familia is null then 'Sem classificação' else ds_familia end,\n        material.cd_classe_material,\n        ds_classe_material,\n        ds_subgrupo_material,\n        ds_grupo_material,\n        ds_fabricante,\n        ds_reduzida,\n        ds_operacao,\n        ie_entrada_saida,\n        cd_acao\n)\nSELECT \n    TO_CHAR(A.DT_MOVIMENTO_ESTOQUE,'YYYY-MM-DD') AS DATA_MOVIMENTO\n    ,A.CD_LOCAL_ESTOQUE\n    ,A.DS_LOCAL_ESTOQUE\n    ,A.CD_ESTABELECIMENTO\n    ,A.nm_fantasia_estab                         AS DS_ESTABELECIMENTO\n    ,A.CD_MATERIAL\n    ,A.DS_REDUZIDA                                AS DS_MATERIAL_SHORT\n    ,A.CD_CLASSE_MATERIAL\n    ,A.CLASSE_MATERIAL                           AS DS_CLASSE_MATERIAL\n    ,A.cd_operacao_estoque\n    ,A.DS_OPERACAO\n    ,A.QT_MOVIMENTO\n    ,CASE \n        WHEN A.CD_ACAO = 2 THEN A.VALOR_MOVIMENTO * -1\n        ELSE A.VALOR_MOVIMENTO\n     END VL_MOVIMENTO   \nFROM AUX A\nWHERE TO_CHAR(TRUNC(A.DT_MOVIMENTO_ESTOQUE,'MM'),'YYYY-MM-DD') = TO_CHAR(TRUNC(SYSDATE,'MM'),'YYYY-MM-DD')",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOQUE"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO_ESTOQUE"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO"
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO"
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque ITG - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque Delphi",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque ITB - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque ITG - Smart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque IOF - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque ITB - Smart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_IOF_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque OFTALMOCLIN - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque IOF - Smart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Mov Estoque HOSL - Smart",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Mov Estoque OFTALMOCLIN - Smart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "DECLARE @MES_REF DATE\n\nSET @MES_REF = CAST(SUBSTRING(CAST(CAST(GETDATE() AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE);\n\n\nSELECT DISTINCT \n    CAST(MMA_DATA_MOV AS DATE)  as DATA_MOVIMENTO\n    ,MMA_SBA_COD                AS CD_LOCAL_ESTOOUE\n    ,SBA_NOME                   AS DS_LOCAL_ESTOQUE\n    ,GCC.gcc_cod                AS CD_ESTABELECIMENTO\n    ,GCC.gcc_descr              AS DS_ESTABELECIMENTO\n    ,mma_mat_cod                AS CD_MATERIAL\n    ,MAT_DESC_RESUMIDA          AS DS_MATERIAL_SHORT\n    ,LMA.LMA_COD                AS CD_CLASSE_MATERIAL\n    ,LMA.LMA_NOME               AS DS_CLASSE_MATERIAL\n    ,gmm_cod                    as CD_GRUPO_MATERIAL\n    -- , mma_ism_seq\n    -- , MMA_ISM_SEQ\n    -- , mma_lot_num\n    , gmm_nome                  AS DS_GRUPO_MATERIAL    \n    ,MMA_TIPO_OPERACAO          AS CD_OPERACAO\n    , tmm_descr                 AS DS_OPERACAO\n    , mma_qtd                   AS QT_MOVIMENTO\n    ,cast(mma_valor as decimal) AS VL_MOVIMENTO\nFROM mma with (nolock)\nLEFT JOIN tmm  with (nolock)\n    ON tmm_cod = MMA_TIPO_OPERACAO\nLEFT JOIN mat with (nolock)\n    ON mma_mat_cod = mat_cod\nLEFT JOIN gmm with (nolock)\n    ON gmm_cod = mma_gmm_cod\nLEFT JOIN sba with (nolock)\n    ON sba_cod = mma_sba_cod\nLEFT JOIN str with (nolock)\n    ON str_cod = sba_str_cod\nLEFT JOIN str str_e  with (nolock)\n    ON str.str_str_cod = str_e.str_cod\nLEFT JOIN fne  with (nolock)\n    ON mat_fne_ult_entrada = FNE_COD\nLEFT JOIN GCC GCC (NOLOCK) ON gcc_str_cod = STR.str_str_cod\nLEFT JOIN LMA LMA (NOLOCK) ON LMA.LMA_GMM_COD = MAT_GMM_COD          \n\nWHERE CAST(SUBSTRING(CAST(CAST(MMA_DATA_MOV AS DATE) AS VARCHAR(30)),1,7)+'-01' AS DATE) = @MES_REF\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DATA_MOVIMENTO",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CD_LOCAL_ESTOOUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_LOCAL_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_ESTABELECIMENTO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_MATERIAL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CD_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_MATERIAL_SHORT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DS_CLASSE_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_OPERACAO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DS_OPERACAO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_OPERACAO_ESTOQUE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "QT_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "VL_MOVIMENTO",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DS_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CD_GRUPO_MATERIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_MOVIMENTO_ESTOQUE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"DATA": {
						"type": "String",
						"defaultValue": "2021-05-01"
					}
				},
				"folder": {
					"name": "Estoque"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nota Fiscal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline que extrai informações de notas fiscais das unidades para compor relatório ao setor de FP&A.",
				"activities": [
					{
						"name": "Nota Fiscal Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select obter_cgc_estabelecimento(n.cd_estabelecimento) as CNPJ,\nobter_nome_estab(n.cd_estabelecimento) as DS_UNIDADE ,\nn.DT_EMISSAO,\ndt_entrada_saida as dt_entrada_saida,\nn.nr_sequencia, \nn.nr_nota_fiscal, \ni.cd_conta_contabil, \nc.ds_conta_contabil, \nobter_nome_pj(n.cd_cgc) as fornecedor,\t\nsum(i.vl_total_item_nf) as vl_total_item_nf,\nSUBSTR(n.ds_observacao,1,100) AS ds_observacao\nfrom nota_fiscal n,\nnota_fiscal_item i,\nconta_contabil c,\noperacao_nota a\nwhere n.nr_sequencia = i.nr_sequencia\nand i.cd_conta_contabil = c.cd_conta_contabil (+)\nand n.cd_operacao_nf = a.cd_operacao_nf (+)\nand a.ie_operacao_fiscal = 'E'\nand n.ie_situacao = 1\ngroup by n.cd_estabelecimento,\nn.cd_estabelecimento ,\nn.DT_EMISSAO,\ndt_entrada_saida,\nn.nr_sequencia, \nn.nr_nota_fiscal, \ni.cd_conta_contabil, \nc.ds_conta_contabil, \nn.cd_cgc,\t\nn.ds_observacao\norder by 5",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select obter_cgc_estabelecimento(n.cd_estabelecimento) as CNPJ,\nobter_nome_estab(n.cd_estabelecimento) as DS_UNIDADE ,\nn.DT_EMISSAO,\ndt_entrada_saida as dt_entrada_saida,\nn.nr_sequencia, \nn.nr_nota_fiscal, \ni.cd_conta_contabil, \nc.ds_conta_contabil, \nobter_nome_pj(n.cd_cgc) as fornecedor,\t\nsum(i.vl_total_item_nf) as vl_total_item_nf,\nSUBSTR(n.ds_observacao,1,100) AS ds_observacao\nfrom nota_fiscal n,\nnota_fiscal_item i,\nconta_contabil c,\noperacao_nota a\nwhere n.nr_sequencia = i.nr_sequencia\nand i.cd_conta_contabil = c.cd_conta_contabil (+)\nand n.cd_operacao_nf = a.cd_operacao_nf (+)\nand a.ie_operacao_fiscal = 'E'\nand n.ie_situacao = 1\ngroup by n.cd_estabelecimento,\nn.cd_estabelecimento ,\nn.DT_EMISSAO,\ndt_entrada_saida,\nn.nr_sequencia, \nn.nr_nota_fiscal, \ni.cd_conta_contabil, \nc.ds_conta_contabil, \nn.cd_cgc,\t\nn.ds_observacao\norder by 5",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal Itaigara",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITAIGARA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal Itabuna",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_INOB_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal IOF",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_IOF_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Nota Fiscal Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "  select emp_1.emp_cgc as CNPJ,\n  gcc_descr as DS_UNIDADE,\n  nfe.nfe_dt_entrada as DT_ENTRADA_SAIDA,\n  nfe_dt_emissao AS DT_EMISSAO, \n  convert(varchar,(nfe_serie)) + convert(varchar,(nfe.nfe_num)) as NR_SEQUENCIA,\n  nfe.nfe_num AS NR_NOTA_FISCAL,\n  mcc.mcc_cfo_cod AS CD_CONTA_CONTABIL,\n  cfo_nome AS DS_CONTA_CONTABIL,\n  EMP.EMP_NOME_FANTASIA AS FORNECEDOR,\n  mcc_deb AS VL_TOTAL_ITEM_NF,\n  nfe_obs AS DS_OBSERVACAO\n  from nfe \n\n  LEFT OUTER JOIN CPG ON NFE.NFE_SERIE = CPG.CPG_NFE_SERIE \n  AND NFE.NFE_NUM = CPG.CPG_NFE_NUM \n  AND NFE.NFE_FNE_COD = CPG.CPG_NFE_FNE_COD \n  AND NFE.NFE_TIPO = CPG.CPG_NFE_TIPO \n\n  inner join mcc on mcc_cpg_num = cpg_num and mcc_cpg_serie = cpg_serie\n  inner join cfo on mcc_cfo_cod = cfo_cod\n  inner join emp on emp_cod = cpg_emp_cod\n  inner join ipg on cpg_num = ipg_cpg_num and cpg_serie = ipg_cpg_serie\n  inner join gcc on gcc_cod = IPG_GCC_COD_COLIG\n  inner join str on gcc_str_cod = str_cod\n  inner join emp emp_1 on emp_1.emp_cod = str_emp_cod\n\n  where MCC.MCC_IPG_PARC = 1 \n  and MCC.MCC_TIPO = 'P' \n  and MCC.MCC_IND_CPG_GERACAO IS not NULL ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Notas_Fiscais",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Fiscal"
				},
				"annotations": [],
				"lastPublishTime": "2020-02-10T20:56:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OFTALMODIAGNOSE_ADF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LISTA ORIGEM DESTINO",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.05:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[sp_origem_destino]",
								"storedProcedureParameters": {
									"Dt_inicio_manual": {
										"type": "DateTime",
										"value": null
									},
									"manual": {
										"type": "String",
										"value": "N"
									},
									"plataforma": {
										"type": "String",
										"value": {
											"value": "SMART_OFTALMODIAGONOSE",
											"type": "Expression"
										}
									},
									"COD_TABELA": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LISTA_TABELAS_ADF",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "PROCESSA ETL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LIMPA TABELAS DESTINO",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SE CARGA COMPLETA",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().TIPO_CARGA,'COMPLETA')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "DATA_HORA_INICIO_PARCIAL",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA PARCIAL",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													},
													{
														"activity": "Data Inicio Banco",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OdbcSource",
														"query": {
															"value": "@concat(\n'select * from ',item().NOME_TABELA_ORIGEM,' where SUBSTRING(', item().nome_coluna_referencia,',1,10) >= ',variables('DT_INICIO') \n\n )",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "Oftalmodiagnose_ODBC",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"table_name": "@item().NOME_TABELA_ORIGEM"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA PARCIAL').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Data Inicio Banco",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "DT_INICIO",
													"value": {
														"value": "@concat('''',string(formatDateTime(adddays(utcnow(), -30), 'yyyy-MM-dd')),'''')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "DATA_HORA_INICIO_COMPLETA",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA COMPLETA",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OdbcSource",
														"query": {
															"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_OFTALMODIAGNOSE_ODBC_WITH_PARAM",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"table_name": {
																"value": "@item().NOME_TABELA_ORIGEM",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA COMPLETA').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "LIMPA TABELAS DESTINO",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LISTA ORIGEM DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LIMPA TABELA DESTINO",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.05:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('truncate table ',\nitem().NOME_SCHEMA_DESTINO,\n'.',\nitem().NOME_TABELA_DESTINO,\n' SELECT 0')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DESTINO_TABELAS_ADF",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Destino": {
													"value": "@item().NOME_SCHEMA_DESTINO",
													"type": "Expression"
												},
												"Tabela_Destino": {
													"value": "@item().NOME_TABELA_DESTINO",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					},
					{
						"name": "Merge DW",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "PROCESSA ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "exec sp_carga_oft_tbl_AGM;\nexec sp_carga_oft_tbl_ctf;\nexec sp_carga_oft_tbl_cnv;\nexec sp_carga_oft_tbl_gcc;\nexec sp_carga_oft_tbl_emp;\nexec sp_carga_oft_tbl_psv;\nexec sp_carga_oft_tbl_smk;\nexec sp_carga_oft_tbl_str;\nexec sp_carga_oft_tbl_gmm;\nexec sp_carga_oft_tbl_hon;\nexec sp_carga_oft_tbl_pac;\nexec sp_carga_oft_tbl_smm;\nexec sp_carga_oft_tbl_nfs;\nEXEC sp_carga_oft_tbl_ext;\nEXEC sp_carga_oft_tbl_fat;\nEXEC sp_carga_oft_tbl_mns;\nEXEC sp_carga_oft_tbl_mte;\nEXEC sp_carga_oft_tbl_nfl;\n"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					},
					"DT_INICIO": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Data Warehouse/2_Pipeline_Cargas_DW"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OFTALMODIAGNOSE_ADF_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LISTA ORIGEM DESTINO",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.05:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[sp_origem_destino]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "String",
										"value": null
									},
									"Dt_inicio_manual": {
										"type": "DateTime",
										"value": null
									},
									"manual": {
										"type": "String",
										"value": "N"
									},
									"plataforma": {
										"type": "String",
										"value": "SMART_OFTALMODIAGONOSE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LISTA_TABELAS_ADF",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_GERA ARQUIVOS",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Apaga Arquivos Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "GERA ARQUIVOS",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().TIPO_CARGA,'COMPLETA')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "GERA ARQUIVOS_PARCIAL",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OdbcSource",
														"query": {
															"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_OFTALMODIAGNOSE_ODBC_WITH_PARAM",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"table_name": {
																"value": "@item().NOME_TABELA_ORIGEM",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "Parquet_Oftalmodiagnose",
														"type": "DatasetReference",
														"parameters": {
															"nome_tabela": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "GERA ARQUIVOS_COMPLETA",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OdbcSource",
														"query": {
															"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_OFTALMODIAGNOSE_ODBC_WITH_PARAM",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"table_name": {
																"value": "@item().NOME_TABELA_ORIGEM",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "Parquet_Oftalmodiagnose",
														"type": "DatasetReference",
														"parameters": {
															"nome_tabela": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "LIMPA TABELAS DESTINO",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ForEach_GERA ARQUIVOS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LIMPA TABELA DESTINO",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.05:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('IF  EXISTS (SELECT * FROM sys.objects WHERE name = ','''', item().NOME_TABELA_DESTINO,'''',' AND type =' ,'''U''',')', ' \nTRUNCATE TABLE ', item().NOME_SCHEMA_DESTINO, '.', item().NOME_TABELA_DESTINO, \n' select 0')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DESTINO_TABELAS_ADF",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Destino": {
													"value": "@item().NOME_SCHEMA_DESTINO",
													"type": "Expression"
												},
												"Tabela_Destino": {
													"value": "@item().NOME_TABELA_DESTINO",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					},
					{
						"name": "PROCESSA ETL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LIMPA TABELAS DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SE CARGA COMPLETA",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().TIPO_CARGA,'COMPLETA')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "DATA_HORA_INICIO_PARCIAL",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA PARCIAL",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													},
													{
														"activity": "Data Inicio Banco",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "CSV_OFTALMODIAGNOSE",
														"type": "DatasetReference",
														"parameters": {
															"nome_tabela": {
																"value": "@concat(item().NOME_TABELA_DESTINO,'.csv')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA PARCIAL').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Data Inicio Banco",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "DT_INICIO",
													"value": {
														"value": "@concat('''',string(formatDateTime(adddays(utcnow(), -30), 'yyyy-MM-dd')),'''')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "DATA_HORA_INICIO_COMPLETA",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA COMPLETA",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "CSV_OFTALMODIAGNOSE",
														"type": "DatasetReference",
														"parameters": {
															"nome_tabela": {
																"value": "@concat(item().NOME_TABELA_DESTINO,'.csv')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA COMPLETA').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "CARGA DW",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PROCESSA ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_OFT_SMART_CARGA_DW"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Apaga Arquivos Blob",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LISTA ORIGEM DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "CSV_OFTALMODIAGNOSE",
											"type": "DatasetReference",
											"parameters": {
												"nome_tabela": {
													"value": "@concat(item().NOME_TABELA_DESTINO,'.csv')",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					},
					"DT_INICIO": {
						"type": "String"
					},
					"NM_ARQ": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Data Warehouse/2_Pipeline_Cargas_DW"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORTOCITY_CARGA_DINAMICA_ADF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LISTA ORIGEM DESTINO",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.05:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[sp_origem_destino]",
								"storedProcedureParameters": {
									"Dt_inicio_manual": {
										"type": "DateTime",
										"value": null
									},
									"manual": {
										"type": "String",
										"value": "N"
									},
									"plataforma": {
										"type": "String",
										"value": "ORTOCITY"
									},
									"COD_TABELA": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LISTA_TABELAS_ADF",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "PROCESSA ETL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LIMPA TABELAS DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SE CARGA COMPLETA",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().TIPO_CARGA,'COMPLETA')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "DATA_HORA_INICIO_PARCIAL",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA PARCIAL",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "@concat(\n'select * from ', item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM,' where ', item().nome_coluna_referencia,' >= ''',\nitem().Data_Inicio, ''' and ', item().nome_coluna_referencia, ' <= ''', item().Data_Fim, ''''\n\n )",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SQL_DINAMICO",
														"type": "DatasetReference",
														"parameters": {
															"NOME_KEYVAULT_SECRET": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"schema_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"table_name": {
																"value": "@item().NOME_TABELA_ORIGEM",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA PARCIAL').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "DATA_HORA_INICIO_COMPLETA",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "StartTime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CARGA COMPLETA",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"oracleReaderQuery": {
															"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
															"type": "Expression"
														},
														"partitionOption": "None",
														"convertDecimalToInteger": false,
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ORTOCITY_WITH_PARAM",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"table_name": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_HMAISDATADRIVEN",
														"type": "DatasetReference",
														"parameters": {
															"Filesystem": "ortocity",
															"File": "arquivo.csv"
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA COMPLETA').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "LIMPA TABELAS DESTINO",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LISTA ORIGEM DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LISTA ORIGEM DESTINO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LIMPA TABELA DESTINO",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.05:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('truncate table ',\nitem().NOME_SCHEMA_DESTINO,\n'.',\nitem().NOME_TABELA_DESTINO,\n' SELECT 0')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DESTINO_TABELAS_ADF",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Destino": {
													"value": "@item().NOME_SCHEMA_DESTINO",
													"type": "Expression"
												},
												"Tabela_Destino": {
													"value": "@item().NOME_TABELA_DESTINO",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Data Warehouse/P&P"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORTOCITY_STORAGE_ACCOUNT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lista arquivos",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "GERA ARQUIVO QUERY ORTOCITY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_HMAISDATADRIVEN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"FileSystem": "ortocity"
								}
							},
							"fieldList": [
								"childItems",
								"itemType",
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filtro",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lista arquivos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lista arquivos').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endsWith(item().name, 'csv')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filtro",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filtro').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copia dados para a STG",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "@{concat('Drop table stg.',activity('Lista arquivos').output.itemName)}",
												"type": "Expression"
											},
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_HMAISDATADRIVEN",
											"type": "DatasetReference",
											"parameters": {
												"Filesystem": {
													"value": "@activity('Lista arquivos').output.itemName",
													"type": "Expression"
												},
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AZ_SQL_STG",
											"type": "DatasetReference",
											"parameters": {
												"SCHEMA": "stg",
												"TABELA": {
													"value": "@activity('Lista arquivos').output.itemName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Move arquivo para PROCESSADOS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Palativo Stg DW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_HMAISDATADRIVEN",
											"type": "DatasetReference",
											"parameters": {
												"Filesystem": {
													"value": "@activity('Lista arquivos').output.itemName",
													"type": "Expression"
												},
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_HMAISDATADRIVEN",
											"type": "DatasetReference",
											"parameters": {
												"Filesystem": {
													"value": "@concat(activity('Lista arquivos').output.itemName,'\\Processados')",
													"type": "Expression"
												},
												"File": {
													"value": "@concat(item().name,'-',utcnow())",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Apaga arquivo",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Move arquivo para PROCESSADOS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_HMAISDATADRIVEN",
											"type": "DatasetReference",
											"parameters": {
												"Filesystem": {
													"value": "@activity('Lista arquivos').output.itemName",
													"type": "Expression"
												},
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "sv_hmaisbrasildatadriven",
												"type": "LinkedServiceReference"
											},
											"path": "ceop/logs"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "STG DW",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Copia dados para a STG",
											"dependencyConditions": [
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SQL_DESTINO",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": "WITH REF AS(\n\nSELECT \nPK_ARQUIVO\n\t\t\t,CD_ESTABELECIMENTO\n\t\t\t,DS_ESTABELECIMENTO\n\t\t\t,NR_ATENDIMENTO\n\t\t\t,NR_INTERNO_CONTA\n\t\t\t,CD_PESSOA_FISICA\n\t\t\t,NM_PESSOA_FISICA\n\t\t\t,DT_NASCIMENTO\n\t\t\t,CNPJ_CONVENIO\n\t\t\t,CD_CONVENIO\n\t\t\t,DS_CONVENIO\n\t\t\t,CRM\n\t\t\t,CD_MEDICO_EXECUTANTE\n\t\t\t,NM_MEDICO_EXECUTANTE\n\t\t\t,CD_SETOR_EXECUTANTE\n\t\t\t,DS_SETOR_EXECUTANTE\n\t\t\t,DT_ENTRADA\n\t\t\t,[COD TUSS ou AMB]\n\t\t\t,CD_ITEM\n\t\t\t,DS_ITEM\n\t\t\t,DT_LANC_ITEM\n\t\t\t,QT\n\t\t\t,VALOR\n\n FROM \n\t\t( SELECT \n\t\t\tPK_ARQUIVO\n\t\t\t,CD_ESTABELECIMENTO\n\t\t\t,DS_ESTABELECIMENTO\n\t\t\t,NR_ATENDIMENTO\n\t\t\t,NR_INTERNO_CONTA\n\t\t\t,CD_PESSOA_FISICA\n\t\t\t,NM_PESSOA_FISICA\n\t\t\t,DT_NASCIMENTO\n\t\t\t,CNPJ_CONVENIO\n\t\t\t,CD_CONVENIO\n\t\t\t,DS_CONVENIO\n\t\t\t,CRM\n\t\t\t,CD_MEDICO_EXECUTANTE\n\t\t\t,NM_MEDICO_EXECUTANTE\n\t\t\t,CD_SETOR_EXECUTANTE\n\t\t\t,DS_SETOR_EXECUTANTE\n\t\t\t,DT_ENTRADA\n\t\t\t,[COD TUSS ou AMB]\n\t\t\t,CD_ITEM\n\t\t\t,DS_ITEM\n\t\t\t,DT_LANC_ITEM\n\t\t\t,SUM(CAST(QT AS MONEY)) AS QT\n\t\t\t,SUM(cast(replace(VALOR,',','.') as decimal(19,2))) as VALOR\n\t\t\t\n\n\t\tFROM STG.ortocity\n\t\tGROUP BY\n\t\t\tPK_ARQUIVO\n\t\t\t,CD_ESTABELECIMENTO\n\t\t\t,DS_ESTABELECIMENTO\n\t\t\t,NR_ATENDIMENTO\n\t\t\t,NR_INTERNO_CONTA\n\t\t\t,CD_PESSOA_FISICA\n\t\t\t,NM_PESSOA_FISICA\n\t\t\t,DT_NASCIMENTO\n\t\t\t,CNPJ_CONVENIO\n\t\t\t,CD_CONVENIO\n\t\t\t,DS_CONVENIO\n\t\t\t,CRM\n\t\t\t,CD_MEDICO_EXECUTANTE\n\t\t\t,NM_MEDICO_EXECUTANTE\n\t\t\t,CD_SETOR_EXECUTANTE\n\t\t\t,DS_SETOR_EXECUTANTE\n\t\t\t,DT_ENTRADA\n\t\t\t,[COD TUSS ou AMB]\n\t\t\t,CD_ITEM\n\t\t\t,DS_ITEM\n\t\t\t,DT_LANC_ITEM\n\n\t\t\t) AS A\n\n)\n\n\nMERGE               \n    dw.ortocity AS destino           \nUSING            \n    REF AS ORIGEM           \n           \n    ON(    \n    destino.PK_ARQUIVO    = ORIGEM.PK_ARQUIVO    AND\n    destino.CD_ITEM        = ORIGEM.CD_ITEM     AND\n    destino.NR_ATENDIMENTO = ORIGEM.NR_ATENDIMENTO AND\n    destino.CD_SETOR_EXECUTANTE = ORIGEM.CD_SETOR_EXECUTANTE\n\n)        \n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET         \n\n\n\ndestino.PK_ARQUIVO                = ORIGEM.PK_ARQUIVO                ,\ndestino.CD_ESTABELECIMENTO        = ORIGEM.CD_ESTABELECIMENTO        ,\ndestino.DS_ESTABELECIMENTO        = ORIGEM.DS_ESTABELECIMENTO        ,\ndestino.NR_ATENDIMENTO            = ORIGEM.NR_ATENDIMENTO            ,\ndestino.NR_INTERNO_CONTA        = ORIGEM.NR_INTERNO_CONTA        ,\ndestino.CD_PESSOA_FISICA        = ORIGEM.CD_PESSOA_FISICA        ,\ndestino.NM_PESSOA_FISICA        = ORIGEM.NM_PESSOA_FISICA        ,\ndestino.DT_NASCIMENTO            = ORIGEM.DT_NASCIMENTO            ,\ndestino.CNPJ_CONVENIO            = ORIGEM.CNPJ_CONVENIO            ,\ndestino.CD_CONVENIO                = ORIGEM.CD_CONVENIO            ,\ndestino.DS_CONVENIO                = ORIGEM.DS_CONVENIO            ,\ndestino.CRM                        = ORIGEM.CRM                    ,\ndestino.CD_MEDICO_EXECUTANTE    = ORIGEM.CD_MEDICO_EXECUTANTE    ,\ndestino.NM_MEDICO_EXECUTANTE    = ORIGEM.NM_MEDICO_EXECUTANTE    ,\ndestino.CD_SETOR_EXECUTANTE        = ORIGEM.CD_SETOR_EXECUTANTE    ,\ndestino.DS_SETOR_EXECUTANTE        = ORIGEM.DS_SETOR_EXECUTANTE    ,\ndestino.DT_ENTRADA                = ORIGEM.DT_ENTRADA                ,\ndestino.[COD TUSS ou AMB]        = ORIGEM.[COD TUSS ou AMB]        ,        \ndestino.CD_ITEM                    = ORIGEM.CD_ITEM                ,\ndestino.DS_ITEM                    = ORIGEM.DS_ITEM                ,\ndestino.DT_LANC_ITEM            = ORIGEM.DT_LANC_ITEM            ,\ndestino.QT                        = ORIGEM.QT                        ,\ndestino.VALOR                    = ORIGEM.VALOR\n\n\n\n \n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n    VALUES (\n\nORIGEM.PK_ARQUIVO                ,\nORIGEM.CD_ESTABELECIMENTO        ,\nORIGEM.DS_ESTABELECIMENTO        ,\nORIGEM.NR_ATENDIMENTO            ,\nORIGEM.NR_INTERNO_CONTA            ,\nORIGEM.CD_PESSOA_FISICA            ,\nORIGEM.NM_PESSOA_FISICA            ,\nORIGEM.DT_NASCIMENTO            ,\nORIGEM.CNPJ_CONVENIO            ,\nORIGEM.CD_CONVENIO                ,\nORIGEM.DS_CONVENIO                ,\nORIGEM.CRM                        ,\nORIGEM.CD_MEDICO_EXECUTANTE        ,\nORIGEM.NM_MEDICO_EXECUTANTE        ,\nORIGEM.CD_SETOR_EXECUTANTE        ,\nORIGEM.DS_SETOR_EXECUTANTE        ,\nORIGEM.DT_ENTRADA                ,\nORIGEM.[COD TUSS ou AMB]        ,    \nORIGEM.CD_ITEM                    ,\nORIGEM.DS_ITEM                    ,\nORIGEM.DT_LANC_ITEM                ,\nORIGEM.QT                        ,\nORIGEM.VALOR\n);\n"
											}
										]
									}
								},
								{
									"name": "Palativo Stg DW",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Copia dados para a STG",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSQL_DB_Procedimentos",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": "BEGIN\n  TRUNCATE TABLE DW.ORTOCITY\nEND;\n\nBEGIN\n  INSERT INTO DW.ortocity\n  SELECT \n  PK_ARQUIVO\n  \t\t\t,CD_ESTABELECIMENTO\n  \t\t\t,DS_ESTABELECIMENTO\n  \t\t\t,NR_ATENDIMENTO\n  \t\t\t,NR_INTERNO_CONTA\n  \t\t\t,CD_PESSOA_FISICA\n  \t\t\t,NM_PESSOA_FISICA\n  \t\t\t,DT_NASCIMENTO\n  \t\t\t,CNPJ_CONVENIO\n  \t\t\t,CD_CONVENIO\n  \t\t\t,DS_CONVENIO\n  \t\t\t,CRM\n  \t\t\t,CD_MEDICO_EXECUTANTE\n  \t\t\t,NM_MEDICO_EXECUTANTE\n  \t\t\t,CD_SETOR_EXECUTANTE\n  \t\t\t,DS_SETOR_EXECUTANTE\n  \t\t\t,DT_ENTRADA\n  \t\t\t,[COD TUSS ou AMB]\n  \t\t\t,CD_ITEM\n  \t\t\t,DS_ITEM\n  \t\t\t,DT_LANC_ITEM\n  \t\t\t,QT\n  \t\t\t,VALOR\n\n   FROM \n  \t\t( SELECT \n  \t\t\tPK_ARQUIVO\n  \t\t\t,CD_ESTABELECIMENTO\n  \t\t\t,DS_ESTABELECIMENTO\n  \t\t\t,NR_ATENDIMENTO\n  \t\t\t,NR_INTERNO_CONTA\n  \t\t\t,CD_PESSOA_FISICA\n  \t\t\t,NM_PESSOA_FISICA\n  \t\t\t,DT_NASCIMENTO\n  \t\t\t,CNPJ_CONVENIO\n  \t\t\t,CD_CONVENIO\n  \t\t\t,DS_CONVENIO\n  \t\t\t,CRM\n  \t\t\t,CD_MEDICO_EXECUTANTE\n  \t\t\t,NM_MEDICO_EXECUTANTE\n  \t\t\t,CD_SETOR_EXECUTANTE\n  \t\t\t,DS_SETOR_EXECUTANTE\n  \t\t\t,DT_ENTRADA\n  \t\t\t,[COD TUSS ou AMB]\n  \t\t\t,CD_ITEM\n  \t\t\t,DS_ITEM\n  \t\t\t,DT_LANC_ITEM\n  \t\t\t,SUM(CAST(QT AS MONEY)) AS QT\n  \t\t\t,SUM(cast(replace(VALOR,',','.') as decimal(19,2))) as VALOR\n  \n\n  \t\tFROM STG.ortocity\n  \t\tGROUP BY\n  \t\t\tPK_ARQUIVO\n  \t\t\t,CD_ESTABELECIMENTO\n  \t\t\t,DS_ESTABELECIMENTO\n  \t\t\t,NR_ATENDIMENTO\n  \t\t\t,NR_INTERNO_CONTA\n  \t\t\t,CD_PESSOA_FISICA\n  \t\t\t,NM_PESSOA_FISICA\n  \t\t\t,DT_NASCIMENTO\n  \t\t\t,CNPJ_CONVENIO\n  \t\t\t,CD_CONVENIO\n  \t\t\t,DS_CONVENIO\n  \t\t\t,CRM\n  \t\t\t,CD_MEDICO_EXECUTANTE\n  \t\t\t,NM_MEDICO_EXECUTANTE\n  \t\t\t,CD_SETOR_EXECUTANTE\n  \t\t\t,DS_SETOR_EXECUTANTE\n  \t\t\t,DT_ENTRADA\n  \t\t\t,[COD TUSS ou AMB]\n  \t\t\t,CD_ITEM\n  \t\t\t,DS_ITEM\n  \t\t\t,DT_LANC_ITEM\n\n  \t\t\t) AS A\nEND;        \n\n\n"
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "GERA ARQUIVO QUERY ORTOCITY",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "PROCESSA ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.05:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT \nPK_ARQUIVO,\nCD_ESTABELECIMENTO,\nDS_ESTABELECIMENTO,\nNR_ATENDIMENTO,\nNR_INTERNO_CONTA,\nCD_PESSOA_FISICA,\nNM_PESSOA_FISICA,\nDT_NASCIMENTO,\nCNPJ_CONVENIO,\nCD_CONVENIO,\nDS_CONVENIO,\nCRM,\nCD_MEDICO_EXECUTANTE,\nNM_MEDICO_EXECUTANTE,\nCD_SETOR_EXECUTANTE,\nDS_SETOR_EXECUTANTE,\nDT_ENTRADA,\nCOD_TUSS_CO as \"COD TUSS ou AMB\",\nCD_ITEM_CO as  CD_ITEM,\nDS_ITEM_CO as  DS_ITEM,\nTP_ITEM_CO as  TP_ITEM,\nDT_LANC_ITEM_CO as  DT_LANC_ITEM,\nSUM(NVL(QT_CO,0))+SUM(NVL(QT_PR,0))+SUM(NVL(QT_RX1,0))+SUM(NVL(QT_RX2,0))+SUM(NVL(QT_KIT1,0))+SUM(NVL(QT_KIT2,0))+SUM(NVL(QT_KIT3,0))+SUM(NVL(QT_KIT4,0))+SUM(NVL(QT_TX1,0))+SUM(NVL(QT_TX2,0)) as  QT\n,SUM(NVL(VALOR_CO,0))+SUM(NVL(VALOR_PR,0))+SUM(NVL(VALOR_RX1,0))+SUM(NVL(VALOR_RX2,0))+SUM(NVL(VALOR_KIT1,0))+SUM(NVL(VALOR_KIT2,0))+SUM(NVL(VALOR_KIT3,0))+SUM(NVL(VALOR_KIT4,0))+SUM(NVL(VALOR_TX1,0))+SUM(NVL(VALOR_TX2,0)) as  VALOR\nFROM \n(\n\nselect f.codfat as pk_arquivo\n,a.unidade as cd_estabelecimento\n,a.unidade as ds_estabelecimento\n,f.numficha as nr_atendimento\n,f.numficha as nr_interno_conta\n,f.numreg as cd_pessoa_fisica\n,(select nome from cadpac where cadpac.numreg=f.numreg) as nm_pessoa_fisica\n,(select datanasc from cadpac where cadpac.numreg=f.numreg) as dt_nascimento\n,(select cnpj from cadnome where cadnome.codigo=a.codconv) as cnpj_convenio\n,a.codconv as cd_convenio\n,(select nome from cadconv where cadconv.codconv=a.codconv) as ds_convenio\n,(select crm from cadnome where cadnome.codigo=a.resp1) as crm\n,a.resp1 as cd_medico_executante\n,(select nome from cadmedresp where cadmedresp.codmed=a.resp1) as nm_medico_executante\n,a.tipo as cd_setor_executante\n,a.tipo as ds_setor_executante\n,a.DATAFICHA AS dt_entrada\n--,a.data as dt_entrada\n/* consulta */\n,case when f.tipo='CO' and f.consulta='S' and f.valor_cons>0 then '10101012' else '' end as cod_tuss_co\n,case when f.tipo='CO' and f.consulta='S' and f.valor_cons>0 then 'CO14' else '' end as cd_item_co\n,case when f.tipo='CO' and f.consulta='S' and f.valor_cons>0 then 'CONSULTA' else '' end as ds_item_co\n,case when f.tipo='CO' and f.consulta='S' and f.valor_cons>0 then 'PROCEDIMENTO' else '' end as tp_item_co\n,case when f.tipo='CO' and f.consulta='S' and f.valor_cons>0 then a.datafatura else '' end as dt_lanc_item_co\n,case when f.tipo='CO' and f.consulta='S' and f.valor_cons>0 then '1' else '' end as qt_co\n,case when f.tipo='CO' and f.consulta='S' and f.valor_cons>0 then TO_CHAR(f.valor_cons) else '' end as valor_co\n/* honorario (procedimento) */\n,f.codigo_tuss as cod_tuss_pr\n,f.codigo_m as cd_item_pr\n,f.exame as ds_item_pr\n,case when f.valor_honor>0 then 'PRPOCEDIMENTO' else '' end as tp_item_pr\n,case when f.valor_honor>0 then a.datafatura else '' end as dt_lanc_item_pr\n,case when f.valor_honor>0 then TO_CHAR(f.quant) else '' end as qt_pr\n,case when f.valor_honor>0 then TO_CHAR(f.valor_honor) else '' end as valor_pr\n/* rx1 */\n,f.rx as cod_tuss_rx1\n,f.mrx as cd_item_rx1\n,case when NVL(f.mrx,'x')<>'x' and f.valor_rx>0 then (select exame from tabexame where tabexame.codigo_m=f.mrx and rownum<=1) else '' end as ds_item_rx1\n,case when NVL(f.mrx,'x')<>'x' and f.valor_rx>0 then 'RAIO-X' else '' end as tp_item_rx1\n,case when NVL(f.mrx,'x')<>'x' and f.valor_rx>0 then a.datafatura else '' end as dt_lanc_item_rx1\n,case when NVL(f.mrx,'x')<>'x' and f.valor_rx>0 then TO_CHAR(f.quant) else '' end as qt_rx1\n,case when NVL(f.mrx,'x')<>'x' and f.valor_rx>0 then TO_CHAR(f.valor_rx) else '' end as valor_rx1\n/* rx2 */\n,f.rx2 as cod_tuss_rx2\n,f.mrx2 as cd_item_rx2\n,case when NVL(f.mrx2,'x')<>'x' and f.valor_rx2>0 then (select exame from tabexame where tabexame.codigo_m=f.mrx2 and rownum<=1) else '' end as ds_item_rx2\n,case when NVL(f.mrx2,'x')<>'x' and f.valor_rx2>0 then 'RAIO-X' else '' end as tp_item_rx2\n,case when NVL(f.mrx2,'x')<>'x' and f.valor_rx2>0 then a.datafatura else '' end as dt_lanc_item_rx2\n,case when NVL(f.mrx2,'x')<>'x' and f.valor_rx2>0 then TO_CHAR(f.quant) else '' end as qt_rx2\n,case when NVL(f.mrx2,'x')<>'x' and f.valor_rx2>0 then TO_CHAR(f.valor_rx2) else '' end as valor_rx2\n/* kit1 */\n,case when NVL(f.codnome,'x')<>'x' and f.valor_mat1>0 then (select nome from tabkit1 where tabkit1.codkit=f.codnome and rownum<=1) else '' end as ds_item_kit1\n,case when NVL(f.codnome,'x')<>'x' and f.valor_mat1>0 then 'MAT/MED' else '' end as tp_item_kit1\n,case when NVL(f.codnome,'x')<>'x' and f.valor_mat1>0 then a.datafatura else '' end as dt_lanc_item_kit1\n,case when NVL(f.codnome,'x')<>'x' and f.valor_mat1>0 then TO_CHAR(f.quant) else '' end as qt_kit1\n,case when NVL(f.codnome,'x')<>'x' and f.valor_mat1>0 then TO_CHAR(f.valor_mat1) else '' end as valor_kit1\n/* kit2 */\n,case when NVL(f.codnome2,'x')<>'x' and f.valor_mat2>0 then (select nome from tabkit1 where tabkit1.codkit=f.codnome2 and rownum<=1) else '' end as ds_item_kit2\n,case when NVL(f.codnome2,'x')<>'x' and f.valor_mat2>0 then 'MAT/MED' else '' end as tp_item_kit2\n,case when NVL(f.codnome2,'x')<>'x' and f.valor_mat2>0 then a.datafatura else '' end as dt_lanc_item_kit2\n,case when NVL(f.codnome2,'x')<>'x' and f.valor_mat2>0 then TO_CHAR(f.quant) else '' end as qt_kit2\n,case when NVL(f.codnome2,'x')<>'x' and f.valor_mat2>0 then TO_CHAR(f.valor_mat2) else '' end as valor_kit2\n/* kit3 */\n,case when NVL(f.codnome3,'x')<>'x' and f.valor_mat3>0 then (select nome from tabkit1 where tabkit1.codkit=f.codnome3 and rownum<=1) else '' end as ds_item_kit3\n,case when NVL(f.codnome3,'x')<>'x' and f.valor_mat3>0 then 'MAT/MED' else '' end as tp_item_kit3\n,case when NVL(f.codnome3,'x')<>'x' and f.valor_mat3>0 then a.datafatura else '' end as dt_lanc_item_kit3\n,case when NVL(f.codnome3,'x')<>'x' and f.valor_mat3>0 then TO_CHAR(f.quant) else '' end as qt_kit3\n,case when NVL(f.codnome3,'x')<>'x' and f.valor_mat3>0 then TO_CHAR(f.valor_mat3) else '' end as valor_kit3\n/* kit4 */\n,case when NVL(f.codnome4,'x')<>'x' and f.valor_mat4>0 then (select nome from tabkit1 where tabkit1.codkit=f.codnome4 and rownum<=1) else '' end as ds_item_kit4\n,case when NVL(f.codnome4,'x')<>'x' and f.valor_mat4>0 then 'MAT/MED' else '' end as tp_item_kit4\n,case when NVL(f.codnome4,'x')<>'x' and f.valor_mat4>0 then a.datafatura else '' end as dt_lanc_item_kit4\n,case when NVL(f.codnome4,'x')<>'x' and f.valor_mat4>0 then TO_CHAR(f.quant) else '' end as qt_kit4\n,case when NVL(f.codnome4,'x')<>'x' and f.valor_mat4>0 then TO_CHAR(f.valor_mat4) else '' end as valor_kit4\n/* taxa1 */\n,case when NVL(f.tx,'x')<>'x' and f.valor_tx>0 then (select nome from cadtaxa1 where cadtaxa1.codigo_m=f.tx and rownum<=1) else '' end as ds_item_tx1\n,case when NVL(f.tx,'x')<>'x' and f.valor_tx>0 then 'TAXA' else '' end as tp_item_tx1\n,case when NVL(f.tx,'x')<>'x' and f.valor_tx>0 then a.datafatura else '' end as dt_lanc_item_tx1\n,case when NVL(f.tx,'x')<>'x' and f.valor_tx>0 then TO_CHAR(f.quant) else '' end as qt_tx1\n,case when NVL(f.tx,'x')<>'x' and f.valor_tx>0 then TO_CHAR(f.valor_tx) else '' end as valor_tx1\n/* taxa1 */\n,case when NVL(f.tx2,'x')<>'x' and f.valor_tx2>0 then (select nome from cadtaxa1 where cadtaxa1.codigo_m=f.tx2 and rownum<=1) else '' end as ds_item_tx2\n,case when NVL(f.tx2,'x')<>'x' and f.valor_tx2>0 then 'TAXA' else '' end as tp_item_tx2\n,case when NVL(f.tx2,'x')<>'x' and f.valor_tx2>0 then a.datafatura else '' end as dt_lanc_item_tx2\n,case when NVL(f.tx2,'x')<>'x' and f.valor_tx2>0 then TO_CHAR(f.quant) else '' end as qt_tx2\n,case when NVL(f.tx2,'x')<>'x' and f.valor_tx2>0 then TO_CHAR(f.valor_tx2) else '' end as valor_tx2\n/*  */\nfrom FERNANDO.ARQFAT f\ninner join FERNANDO.CADATEND a on f.numficha=a.numficha\nWHERE a.DATAFICHA  >='2022-01-01'\n--where a.data >= '2022-01-01'\n) \nGROUP BY \nPK_ARQUIVO,\nCD_ESTABELECIMENTO,\nDS_ESTABELECIMENTO,\nNR_ATENDIMENTO,\nNR_INTERNO_CONTA,\nCD_PESSOA_FISICA,\nNM_PESSOA_FISICA,\nDT_NASCIMENTO,\nCNPJ_CONVENIO,\nCD_CONVENIO,\nDS_CONVENIO,\nCRM,\nCD_MEDICO_EXECUTANTE,\nNM_MEDICO_EXECUTANTE,\nCD_SETOR_EXECUTANTE,\nDS_SETOR_EXECUTANTE,\nDT_ENTRADA,\nCOD_TUSS_CO,\nCD_ITEM_CO,\nDS_ITEM_CO,\nTP_ITEM_CO,\nDT_LANC_ITEM_CO",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ORTOCITY",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_HMAISDATADRIVEN",
								"type": "DatasetReference",
								"parameters": {
									"Filesystem": "ortocity",
									"File": "QUERY_ORTOCITY.csv"
								}
							}
						]
					},
					{
						"name": "Lista Tabelas",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[sp_origem_destino]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "String",
										"value": null
									},
									"Dt_inicio_manual": {
										"type": "DateTime",
										"value": null
									},
									"manual": {
										"type": "String",
										"value": "N"
									},
									"plataforma": {
										"type": "String",
										"value": "SLFW"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LISTA_TABELAS_ADF",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LIMPAR TABELA DESTINO",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lista Tabelas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lista Tabelas').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Limpa Tabela",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('TRUNCATE TABLE ',item().NOME_SCHEMA_DESTINO,'.',item().NOME_TABELA_DESTINO)",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "PROCESSA ETL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LIMPAR TABELA DESTINO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lista Tabelas').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SE CARGA COMPLETA",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().TIPO_CARGA,'COMPLETA')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "CARGA PARCIAL",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_INICIO_CARGA_PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"oracleReaderQuery": {
															"value": "@concat(\n'select 50 AS ESTABELECIMENTO, A.* from ', item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM,' A where (', item().nome_coluna_referencia,'INCL >=', \n'''',substring(item().Data_Inicio,0,10),'''',' and ', item().nome_coluna_referencia,'INCL',' <= ', '''',substring(item().Data_Fim,0,10),'''', ') OR (', item().nome_coluna_referencia,'ALTERA',' >= ',\n'''',substring(item().Data_Inicio,0,10),'''', ' and ', item().nome_coluna_referencia,'ALTERA',' <= ', '''',substring(item().Data_Fim,0,10),'''', ')'\n)\n",
															"type": "Expression"
														},
														"partitionOption": "None",
														"convertDecimalToInteger": false,
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SLFW_Dinamico",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "@item().NOME_SCHEMA_ORIGEM",
															"table_name": "@item().NOME_TABELA_ORIGEM",
															"NOME_KEYVAULT_SECRET": "@item().NOME_KEYVAULT_SECRET"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "DATA_INICIO_CARGA_PARCIAL",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "Starttime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA SUCESSO_copy1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('Starttime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": "CARGA PARCIAL",
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": "SUCESSO",
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA ERRO_copy1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('Starttime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": "CARGA PARCIAL",
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": "ERRO",
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CARGA COMPLETA",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_INICIO_CARGA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"oracleReaderQuery": {
															"value": "@concat(' select 50 AS ESTABELECIMENTO, A.* from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM,' A')",
															"type": "Expression"
														},
														"partitionOption": "None",
														"convertDecimalToInteger": false,
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SLFW_Dinamico",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "@item().NOME_SCHEMA_ORIGEM",
															"table_name": "@item().NOME_TABELA_ORIGEM",
															"NOME_KEYVAULT_SECRET": "@item().NOME_KEYVAULT_SECRET"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "DATA_INICIO_CARGA",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "Starttime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('Starttime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": "CARGA COMPLETA",
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": "SUCESSO",
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('Starttime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": "CARGA COMPLETA",
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": "ERRO",
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "CARGA DW",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PROCESSA ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_SLFW_CARGA_DW"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Starttime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Data Warehouse/2_Pipeline_Cargas_DW"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OTORRINOCENTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copia dados para a STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "EXEC SP_PROD_DIARIA_GRUPOHMAIS_DATAMART",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'otorrinocenter')\n\n    DROP table stg.otorrinocenter",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Otorrinocenter",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_STG",
								"type": "DatasetReference",
								"parameters": {
									"SCHEMA": "stg",
									"TABELA": "otorrinocenter"
								}
							}
						]
					},
					{
						"name": "EXEC SP_PROD_DIARIA_GRUPOHMAIS_DATAMART",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CARGA DW",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[dbo].SP_PROD_DIARIA_GRUPOHMAIS_DATAMART",
							"storedProcedureParameters": {
								"CLASSE": {
									"value": null,
									"type": "Int32"
								},
								"CONVENIO": {
									"value": null,
									"type": "Int32"
								},
								"DATA_FINAL": {
									"value": "2022-12-31 00:00:00",
									"type": "DateTime"
								},
								"DATA_INICIAL": {
									"value": "2022-01-01 00:00:00",
									"type": "DateTime"
								},
								"EMPRESA": {
									"value": null,
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Otorrinocenter",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "MERGE",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copia dados para a STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SQL_DESTINO",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "-- select * from stg.otorrinocenter with (nolock)\n-- select * from dw.otorrinocenter with (nolock)\n\n\nMERGE\t           \n\tdw.otorrinocenter AS destino           \nUSING            \n\tstg.otorrinocenter AS origem           \n           \n    ON\t(        \n\torigem.pk_otorrinocenter\t\t\t=\tdestino.pk_otorrinocenter\t\t\n\t\t)        \n\n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \n\ndestino.PK_OTORRINOCENTER=origem.PK_OTORRINOCENTER,\ndestino.EMPRESA_ID=origem.EMPRESA_ID,\ndestino.CONVENIO_ID=origem.CONVENIO_ID,\ndestino.EMPRESA=origem.EMPRESA,\ndestino.SETOR=origem.SETOR,\ndestino.CONVENIO=origem.CONVENIO,\ndestino.NOME=origem.NOME,\ndestino.GUIA=origem.GUIA,\ndestino.GUIA_ID=origem.GUIA_ID,\ndestino.STATUS_GUIA=origem.STATUS_GUIA,\ndestino.ESPECIALIDADE=origem.ESPECIALIDADE,\ndestino.DATA_ABERTURA=origem.DATA_ABERTURA,\ndestino.DATA_ENTRADA=origem.DATA_ENTRADA,\ndestino.DATA_SAIDA=origem.DATA_SAIDA,\ndestino.DATA_FECHAMENTO=origem.DATA_FECHAMENTO,\ndestino.DATA_FATURAMENTO=origem.DATA_FATURAMENTO,\ndestino.DATA_ITEM=origem.DATA_ITEM,\ndestino.PROF_RESPONSAVEL=origem.PROF_RESPONSAVEL,\ndestino.PROF_EXECUTANTE=origem.PROF_EXECUTANTE,\ndestino.PROF_SOLICITANTE=origem.PROF_SOLICITANTE,\ndestino.CODIGO_PRODUTO_PRINCIPAL=origem.CODIGO_PRODUTO_PRINCIPAL,\ndestino.PRODUTO_PRINCIPAL=origem.PRODUTO_PRINCIPAL,\ndestino.CODIGO_ITEM=origem.CODIGO_ITEM,\ndestino.ITEM=origem.ITEM,\ndestino.QTD_ITEM=origem.QTD_ITEM,\ndestino.ID_PRODUTOS=origem.ID_PRODUTOS,\ndestino.GRUPO_PRODUTOS=origem.GRUPO_PRODUTOS,\ndestino.VALOR_ATENDIDO=origem.VALOR_ATENDIDO,\ndestino.VALOR_FATURADO=origem.VALOR_FATURADO,\ndestino.VALOR_NAO_FATURADO=origem.VALOR_NAO_FATURADO,\ndestino.VALOR_RECEBIDO=origem.VALOR_RECEBIDO,\ndestino.VALOR_ANALISE=origem.VALOR_ANALISE,\ndestino.VALOR_ACATADO=origem.VALOR_ACATADO,\ndestino.VALOR_REAPRESENTADO=origem.VALOR_REAPRESENTADO,\ndestino.VALOR_RECEBIDO_REAP=origem.VALOR_RECEBIDO_REAP,\ndestino.VALOR_ACATADO_REAP=origem.VALOR_ACATADO_REAP,\ndestino.VALOR_REAPRESENTADO_REAP=origem.VALOR_REAPRESENTADO_REAP,\ndestino.VALOR_ANALISE_REAP=origem.VALOR_ANALISE_REAP,\ndestino.VALOR_FECHAMENTO=origem.VALOR_FECHAMENTO\n\n\n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.PK_OTORRINOCENTER,\norigem.EMPRESA_ID,\norigem.CONVENIO_ID,\norigem.EMPRESA,\norigem.SETOR,\norigem.CONVENIO,\norigem.NOME,\norigem.GUIA,\norigem.GUIA_ID,\norigem.STATUS_GUIA,\norigem.ESPECIALIDADE,\norigem.DATA_ABERTURA,\norigem.DATA_ENTRADA,\norigem.DATA_SAIDA,\norigem.DATA_FECHAMENTO,\norigem.DATA_FATURAMENTO,\norigem.DATA_ITEM,\norigem.PROF_RESPONSAVEL,\norigem.PROF_EXECUTANTE,\norigem.PROF_SOLICITANTE,\norigem.CODIGO_PRODUTO_PRINCIPAL,\norigem.PRODUTO_PRINCIPAL,\norigem.CODIGO_ITEM,\norigem.ITEM,\norigem.QTD_ITEM,\norigem.ID_PRODUTOS,\norigem.GRUPO_PRODUTOS,\norigem.VALOR_ATENDIDO,\norigem.VALOR_FATURADO,\norigem.VALOR_NAO_FATURADO,\norigem.VALOR_RECEBIDO,\norigem.VALOR_ANALISE,\norigem.VALOR_ACATADO,\norigem.VALOR_REAPRESENTADO,\norigem.VALOR_RECEBIDO_REAP,\norigem.VALOR_ACATADO_REAP,\norigem.VALOR_REAPRESENTADO_REAP,\norigem.VALOR_ANALISE_REAP,\norigem.VALOR_FECHAMENTO\n\n); \n\n\n"
								}
							]
						}
					},
					{
						"name": "Lista Tabela",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[sp_origem_destino]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "String",
										"value": null
									},
									"Dt_inicio_manual": {
										"type": "DateTime",
										"value": null
									},
									"manual": {
										"type": "String",
										"value": "N"
									},
									"plataforma": {
										"type": "String",
										"value": "TECHSALLUS"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LISTA_TABELAS_ADF",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "PROCESSA ETL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LIMPAR TABELAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lista Tabela').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SE CARGA COMPLETA",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().TIPO_CARGA,'COMPLETA')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "CARGA PARCIAL",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "@concat(\n'select 20 AS ESTABELECIMENTO ,A.* from ', item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM,' A where ', item().nome_coluna_referencia,' >= ''',\nitem().Data_Inicio, ''' and  ', item().nome_coluna_referencia,' <= ''', item().Data_Fim, ''''\n)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "TECHSALLUS_DINAMICO",
														"type": "DatasetReference",
														"parameters": {
															"NOME_KEYVAULT_SECRET": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"SCHEMA_NAME": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"TABLE_NAME": {
																"value": "@item().NOME_TABELA_ORIGEM",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "DATA_HORA_INICIO_PARCIAL",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "Starttime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('startTime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA PARCIAL').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_PARCIAL",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO PARCIAL SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA PARCIAL",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('Starttime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_PARCIAL",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA PARCIAL').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CARGA COMPLETA",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DATA_HORA_INICIO_COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "@concat(' select 20 AS ESTABELECIMENTO, A.* from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM,' A')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "TECHSALLUS_DINAMICO",
														"type": "DatasetReference",
														"parameters": {
															"NOME_KEYVAULT_SECRET": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"SCHEMA_NAME": {
																"value": "@item().NOME_SCHEMA_ORIGEM",
																"type": "Expression"
															},
															"TABLE_NAME": {
																"value": "@item().NOME_TABELA_ORIGEM",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DESTINO_TABELAS_ADF",
														"type": "DatasetReference",
														"parameters": {
															"Schema_Destino": {
																"value": "@item().NOME_SCHEMA_DESTINO",
																"type": "Expression"
															},
															"Tabela_Destino": {
																"value": "@item().NOME_TABELA_DESTINO",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA SUCESSO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('Starttime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": null,
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "SUCESSO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "LOG PROCESSAMENTO COMPLETA ERRO",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CARGA COMPLETA",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.05:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[adf].[SP_LOG_PROCESSAMENTO]",
													"storedProcedureParameters": {
														"CODIGO_TABELA": {
															"value": {
																"value": "@item().codigo_tabela",
																"type": "Expression"
															},
															"type": "String"
														},
														"COMANDO_SQL": {
															"value": {
																"value": "@concat(' select * from  ',item().NOME_SCHEMA_ORIGEM,'.',item().NOME_TABELA_ORIGEM)",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_FIM": {
															"value": {
																"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_HORA_EXECUCAO": {
															"value": {
																"value": "@replace(string(convertTimeZone(pipeline().TriggerTime,'UTC','E. South America Standard Time') ),'T',' ')",
																"type": "Expression"
															},
															"type": "String"
														},
														"DATA_INICIO": {
															"value": {
																"value": "@variables('Starttime')",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_EXECUCAO": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"ID_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"MENSAGEM_ERRO": {
															"value": {
																"value": "@activity('CARGA COMPLETA').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ADF": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_CONTAINER": {
															"value": {
																"value": "CARGA_COMPLETA",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_ORIGEM": {
															"value": {
																"value": "@item().NOME_KEYVAULT_SECRET",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PIPELINE": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_PROCESSO": {
															"value": null,
															"type": "String"
														},
														"NOME_TABELA_ORIGEM": {
															"value": {
																"value": "@item().nome_tabela_origem",
																"type": "Expression"
															},
															"type": "String"
														},
														"NOME_TRIGGER": {
															"value": {
																"value": "@pipeline().TriggerName",
																"type": "Expression"
															},
															"type": "String"
														},
														"QUANTIDADE_REGISTROS": {
															"value": {
																"value": "@activity('CARGA COMPLETA').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"TIPO_FINALIZACAO": {
															"value": {
																"value": "ERRO",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSQL_DB_Procedimentos",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "DATA_HORA_INICIO_COMPLETA",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "Starttime",
													"value": {
														"value": "@replace(string(convertTimeZone(utcnow(),'UTC','E. South America Standard Time') ),'T',' ')",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "CARGA DW",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PROCESSA ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_TECHSALLUS_CARGA_DW]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LIMPAR TABELAS",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lista Tabela",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lista Tabela').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Apagar Stg",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSQL_DB_Procedimentos",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": {
													"value": "@concat('TRUNCATE TABLE ',item().NOME_SCHEMA_DESTINO,'.',item().NOME_TABELA_DESTINO)",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Starttime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Data Warehouse/2_Pipeline_Cargas_DW"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Orientacao e Conversao Cirurgicas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline utilizado para alimentar tabelas do SMC:\n\n",
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Orientacoes Cirurgicas Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- ORIENTAÇÃO\n\nSELECT Z.DT_AGENDA, Z.CD_AGENDA, Z.CD_PESSOA_FISICA, Z.NM_PESSOA_FISICA,Z.IE_LADO,Z.AUTORIZACAO AS DS_AUTORIZACAO,Z.PROCEDIMENTO, Z.CNPJ, Z.DS_UNIDADE, Z.BASE, Z.NR_SEQ_PROC_INTERNO,\n\n(SELECT COUNT(*)\nFROM AGENDA_PACIENTE AB,\n     PESSOA_FISICA PF_1,\n     AGENDA AG_1\nWHERE AB.CD_PESSOA_FISICA = PF_1.CD_PESSOA_FISICA\nAND AB.CD_AGENDA = AG_1.CD_AGENDA\nAND AB.CD_AGENDA NOT IN (4442,4443,4444,4445,4513,4563,4553,5273,4464,4465,4466,4467,4552,3043,11)\nAND AB.CD_PESSOA_FISICA = Z.CD_PESSOA_FISICA\nAND AG_1.CD_TIPO_AGENDA = 1\nAND AB.DT_AGENDA > Z.DT_AGENDA) AS INDICADOR_CIRURGIA\n\nFROM\n\n(SELECT MAX(A.DT_AGENDA) AS DT_AGENDA, A.CD_AGENDA, A.CD_PESSOA_FISICA, PF.NM_PESSOA_FISICA, \nOBTER_VALOR_DOMINIO(1227,A.IE_AUTORIZACAO) AS AUTORIZACAO, \nOBTER_DESC_PROCEDIMENTO(A.CD_PROCEDIMENTO, A.IE_ORIGEM_PROCED) AS PROCEDIMENTO,\n\nA.IE_LADO,\nES.CD_CGC AS CNPJ,\nES.NM_FANTASIA_ESTAB AS DS_UNIDADE,\n'Tasy Delphi' as BASE,\nA.NR_SEQ_PROC_INTERNO\n\nFROM AGENDA_PACIENTE A,\n     PESSOA_FISICA PF,\n     AGENDA AG,\n     ESTABELECIMENTO ES,\n     EMPRESA EM\nWHERE A.CD_PESSOA_FISICA = PF.CD_PESSOA_FISICA\nAND A.CD_AGENDA = AG.CD_AGENDA\nAND AG.CD_ESTABELECIMENTO = ES.CD_ESTABELECIMENTO\nAND ES.CD_EMPRESA = ES.CD_EMPRESA\nAND A.CD_AGENDA IN (4442,4443,4444,4445,4513,4563,4553,5273,4464,4465,4466,4467,4552,3043,11)\nAND AG.CD_TIPO_AGENDA = 1\nGROUP BY A.CD_PESSOA_FISICA, PF.NM_PESSOA_FISICA,A.IE_LADO, OBTER_VALOR_DOMINIO(1227,A.IE_AUTORIZACAO), OBTER_DESC_PROCEDIMENTO(A.CD_PROCEDIMENTO, A.IE_ORIGEM_PROCED),\nES.CD_CGC, ES.NM_FANTASIA_ESTAB, A.CD_AGENDA, A.NR_SEQ_PROC_INTERNO\nORDER BY 1 desc) Z \nWHERE Z.DT_AGENDA BETWEEN SYSDATE - 365 AND SYSDATE + 365",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DT_AGENDA"
										},
										"sink": {
											"name": "DT_AGENDA",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CD_AGENDA"
										},
										"sink": {
											"name": "CD_AGENDA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CD_PESSOA_FISICA"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NM_PESSOA_FISICA"
										},
										"sink": {
											"name": "NM_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_AUTORIZACAO"
										},
										"sink": {
											"name": "DS_AUTORIZACAO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IE_LADO"
										},
										"sink": {
											"name": "IE_LADO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PROCEDIMENTO"
										},
										"sink": {
											"name": "PROCEDIMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CNPJ"
										},
										"sink": {
											"name": "CNPJ",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_UNIDADE"
										},
										"sink": {
											"name": "DS_UNIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BASE"
										},
										"sink": {
											"name": "BASE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INDICADOR_CIRURGIA"
										},
										"sink": {
											"name": "INDICADOR_CIRURGIA",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Orientacao_Cirurgia_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamento Cirurgico Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- AGENDA CIRURGICA\n\nSELECT\nAB.DT_AGENDA, AB.CD_AGENDA,\nAB.CD_PESSOA_FISICA, \nPF_1.NM_PESSOA_FISICA, \nOBTER_VALOR_DOMINIO(1227,AB.IE_AUTORIZACAO) AS DS_AUTORIZACAO, \nOBTER_DESC_PROCEDIMENTO(AB.CD_PROCEDIMENTO, AB.IE_ORIGEM_PROCED) AS PROCEDIMENTO,\nAB.NR_CIRURGIA,\nAB.IE_LADO,\nAB.CD_CONVENIO,\nES.NM_FANTASIA_ESTAB AS DS_UNIDADE,\nES.CD_CGC AS CNPJ,\n'Tasy Delphi' as BASE,\nAB.NR_SEQ_PROC_INTERNO\nFROM AGENDA_PACIENTE AB,\n     PESSOA_FISICA PF_1,\n     AGENDA AG_1,\n     ESTABELECIMENTO ES,\n     EMPRESA EM\nWHERE AB.CD_PESSOA_FISICA = PF_1.CD_PESSOA_FISICA\nAND AB.CD_AGENDA = AG_1.CD_AGENDA\nAND AG_1.CD_ESTABELECIMENTO = ES.CD_ESTABELECIMENTO\nAND AB.DT_AGENDA BETWEEN SYSDATE - 365 AND SYSDATE + 365\nAND ES.CD_EMPRESA = EM.CD_EMPRESA\nAND AB.CD_AGENDA NOT IN (4442,4443,4444,4445,4513,4563,4553,5273,4464,4465,4466,4467,4552,3043,11)\nAND AG_1.CD_TIPO_AGENDA = 1\nORDER BY 1",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento_Cirurgia_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Orientacoes Cirurgicas HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- ORIENTAÇÃO\n\nSELECT Z.DT_AGENDA, Z.CD_AGENDA, Z.CD_PESSOA_FISICA, Z.NM_PESSOA_FISICA,Z.IE_LADO,Z.AUTORIZACAO AS DS_AUTORIZACAO,Z.PROCEDIMENTO, Z.CNPJ, Z.DS_UNIDADE, Z.BASE, Z.NR_SEQ_PROC_INTERNO,\n\n(SELECT COUNT(*)\nFROM AGENDA_PACIENTE AB,\n     PESSOA_FISICA PF_1,\n     AGENDA AG_1\nWHERE AB.CD_PESSOA_FISICA = PF_1.CD_PESSOA_FISICA\nAND AB.CD_AGENDA = AG_1.CD_AGENDA\nAND AB.CD_AGENDA NOT IN (549,802,659,776,665,607,663,666,664,662,660,661,609)\nAND AB.CD_PESSOA_FISICA = Z.CD_PESSOA_FISICA\nAND AG_1.CD_TIPO_AGENDA = 1\nAND AB.DT_AGENDA > Z.DT_AGENDA) AS INDICADOR_CIRURGIA\n\nFROM\n\n(SELECT MAX(A.DT_AGENDAMENTO) AS DT_AGENDA, A.CD_AGENDA, A.CD_PESSOA_FISICA, PF.NM_PESSOA_FISICA, \nOBTER_VALOR_DOMINIO(1227,A.IE_AUTORIZACAO) AS AUTORIZACAO, \nOBTER_DESC_PROCEDIMENTO(A.CD_PROCEDIMENTO, A.IE_ORIGEM_PROCED) AS PROCEDIMENTO,\nA.IE_LADO,\nES.CD_CGC AS CNPJ,\nES.NM_FANTASIA_ESTAB AS DS_UNIDADE,\n'Tasy HTML' as BASE,\nA.NR_SEQ_PROC_INTERNO\n\nFROM AGENDA_PACIENTE A,\n     PESSOA_FISICA PF,\n     AGENDA AG,\n     ESTABELECIMENTO ES,\n     EMPRESA EM\nWHERE A.CD_PESSOA_FISICA = PF.CD_PESSOA_FISICA\nAND A.CD_AGENDA = AG.CD_AGENDA\nAND AG.CD_ESTABELECIMENTO = ES.CD_ESTABELECIMENTO\nAND ES.CD_EMPRESA = ES.CD_EMPRESA\nAND A.CD_AGENDA IN (549,802,659,776,665,607,663,666,664,662,660,661,609)\nAND AG.CD_TIPO_AGENDA = 1\nGROUP BY A.CD_PESSOA_FISICA, PF.NM_PESSOA_FISICA,A.IE_LADO, OBTER_VALOR_DOMINIO(1227,A.IE_AUTORIZACAO), OBTER_DESC_PROCEDIMENTO(A.CD_PROCEDIMENTO, A.IE_ORIGEM_PROCED),\nES.CD_CGC, ES.NM_FANTASIA_ESTAB, A.CD_AGENDA, A.NR_SEQ_PROC_INTERNO\nORDER BY 1 desc) Z \nWHERE Z.DT_AGENDA BETWEEN SYSDATE - 365 AND SYSDATE + 365",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Orientacao_Cirurgia_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Agendamento Cirurgico HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "-- AGENDA CIRURGICA\n\nSELECT\nAB.DT_AGENDA, AB.CD_AGENDA,\nAB.CD_PESSOA_FISICA, \nPF_1.NM_PESSOA_FISICA, \nOBTER_VALOR_DOMINIO(1227,AB.IE_AUTORIZACAO) AS DS_AUTORIZACAO, \nOBTER_DESC_PROCEDIMENTO(AB.CD_PROCEDIMENTO, AB.IE_ORIGEM_PROCED) AS PROCEDIMENTO,\nAB.NR_CIRURGIA,\nAB.IE_LADO,\nAB.CD_CONVENIO,\nES.NM_FANTASIA_ESTAB AS DS_UNIDADE,\nES.CD_CGC AS CNPJ,\n'Tasy HTML' as BASE,\nAB.NR_SEQ_PROC_INTERNO\nFROM AGENDA_PACIENTE AB,\n     PESSOA_FISICA PF_1,\n     AGENDA AG_1,\n     ESTABELECIMENTO ES,\n     EMPRESA EM\nWHERE AB.CD_PESSOA_FISICA = PF_1.CD_PESSOA_FISICA\nAND AB.CD_AGENDA = AG_1.CD_AGENDA\nAND AG_1.CD_ESTABELECIMENTO = ES.CD_ESTABELECIMENTO\nAND AB.DT_AGENDA BETWEEN SYSDATE - 365 AND SYSDATE + 365\nAND ES.CD_EMPRESA = EM.CD_EMPRESA\nAND AB.CD_AGENDA NOT IN (549,802,659,776,665,607,663,666,664,662,660,661,609)\nAND AG_1.CD_TIPO_AGENDA = 1\nORDER BY 1",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Agendamento_Cirurgia_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Cirurgias"
				},
				"annotations": [],
				"lastPublishTime": "2020-02-12T14:12:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pacientes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carregamento das informações de pacientes de todas as unidades do sistema Tasy e Smart.",
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Clear Base",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Pacientes DH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select pac_reg as CD_PESSOA_FISICA, \nrtrim(ltrim(pac_nome)) AS NM_PESSOA_FISICA, \npac_numcpf AS NR_CPF, \nconvert(char(10),pac_nasc,121) as DT_NASCIMENTO, \nPAC_CELULAR AS NR_TELEFONE_CELULAR,\npac_fone AS NR_TELEFONE, \n'13188370000227' AS CNPJ,\n'DAYHORC -  UNIDADE ITAIGARA' as DS_UNIDADE,\n'DH' as MARCA,\npac_reg as NR_PRONTUARIO,\npac_dreg as DT_CADASTRO_ORIGINAL,\npac_dult as DT_ATUALIZACAO,\nPAC_SEXO as IE_SEXO,\npac_cep as CD_CEP,\n'Smart DH Itaigara' as BASE\nfrom pac\ninner join usr on USR_LOGIN = PAC_USR_LOGIN_CAD",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										},
										"sink": {
											"name": "CD_PESSOA_FISICA",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "NM_PESSOA_FISICA",
											"type": "String"
										},
										"sink": {
											"name": "NM_PESSOA_FISICA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_CPF",
											"type": "String"
										},
										"sink": {
											"name": "NR_CPF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DT_NASCIMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DT_NASCIMENTO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "NR_TELEFONE_CELULAR",
											"type": "String"
										},
										"sink": {
											"name": "NR_TELEFONE_CELULAR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_TELEFONE",
											"type": "String"
										},
										"sink": {
											"name": "NR_TELEFONE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CNPJ",
											"type": "String"
										},
										"sink": {
											"name": "CNPJ",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DS_UNIDADE",
											"type": "String"
										},
										"sink": {
											"name": "DS_UNIDADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NR_PRONTUARIO",
											"type": "Int32"
										},
										"sink": {
											"name": "NR_PRONTUARIO",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DT_CADASTRO_ORIGINAL",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_CADASTRO_ORIGINAL",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_ATUALIZACAO",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "IE_SEXO",
											"type": "String"
										},
										"sink": {
											"name": "IE_SEXO",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Pacientes_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Pacientes HOSL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select pac_reg as CD_PESSOA_FISICA, \nrtrim(ltrim(pac_nome)) AS NM_PESSOA_FISICA, \npac_numcpf AS NR_CPF, \nconvert(char(10),pac_nasc,121) as DT_NASCIMENTO, \npac_celular AS NR_TELEFONE_CELULAR,\npac_fone AS NR_TELEFONE, \n'12305371000160' AS CNPJ,\n'HOSPITAL DE OLHOS SANTA LUZIA SS LTDA' as DS_UNIDADE,\n'HOSL' as MARCA,\npac_reg as NR_PRONTUARIO,\npac_dreg as DT_CADASTRO_ORIGINAL,\npac_dult as DT_ATUALIZACAO,\nPAC_SEXO as IE_SEXO,\npac_cep as CD_CEP,\n'Smart HOSL' as BASE\nfrom pac\ninner join usr on USR_LOGIN = PAC_USR_LOGIN_CAD",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Pacientes_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Pacientes INOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select pac_reg as CD_PESSOA_FISICA, \nrtrim(ltrim(pac_nome)) AS NM_PESSOA_FISICA, \npac_numcpf AS NR_CPF, \nconvert(char(10),pac_nasc,121) as DT_NASCIMENTO, \npac_celular AS NR_TELEFONE_CELULAR,\npac_fone AS NR_TELEFONE, \n'00363702000130' AS CNPJ,\n'INOB' as DS_UNIDADE,\n'INOB' as MARCA,\npac_reg as NR_PRONTUARIO,\npac_dreg as DT_CADASTRO_ORIGINAL,\npac_dult as DT_ATUALIZACAO,\nPAC_SEXO as IE_SEXO,\npac_cep as CD_CEP,\n'Smart INOB' as BASE\nfrom pac\ninner join usr on USR_LOGIN = PAC_USR_LOGIN_CAD",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_HOSL_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Pacientes_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Pacientes IOF",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select pac_reg as CD_PESSOA_FISICA, \nrtrim(ltrim(pac_nome)) AS NM_PESSOA_FISICA, \npac_numcpf AS NR_CPF, \nconvert(char(10),pac_nasc,121) as DT_NASCIMENTO, \npac_celular AS NR_TELEFONE_CELULAR,\npac_fone AS NR_TELEFONE, \n'40514432000305' AS CNPJ,\n'INSTITUTO DE OLHOS FREITAS LF' as DS_UNIDADE,\n'INSTITUTO DE OLHOS FREITAS LF' as MARCA,\npac_reg as NR_PRONTUARIO,\npac_dreg as DT_CADASTRO_ORIGINAL,\npac_dult as DT_ATUALIZACAO,\nPAC_SEXO as IE_SEXO,\npac_cep as CD_CEP,\n'Smart IOF' as BASE\nfrom pac\ninner join usr on USR_LOGIN = PAC_USR_LOGIN_CAD",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_IOF_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Pacientes_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Pacientes Itabuna",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select pac_reg as CD_PESSOA_FISICA, \nrtrim(ltrim(pac_nome)) AS NM_PESSOA_FISICA, \npac_numcpf AS NR_CPF, \nconvert(char(10),pac_nasc,121) as DT_NASCIMENTO, \npac_celular AS NR_TELEFONE_CELULAR,\npac_fone AS NR_TELEFONE, \n'13188370000146' AS CNPJ,\n'DayHORC ITABUNA' as DS_UNIDADE,\n'DayHORC' as MARCA,\npac_reg as NR_PRONTUARIO,\npac_dreg as DT_CADASTRO_ORIGINAL,\npac_dult as DT_ATUALIZACAO,\nPAC_SEXO as IE_SEXO,\npac_cep as CD_CEP,\n'Smart DH Itabuna' as BASE\nfrom pac\ninner join usr on USR_LOGIN = PAC_USR_LOGIN_CAD",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_ITABUNA_PrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Pacientes_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Pacientes Oftalmoclin",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select pac_reg as CD_PESSOA_FISICA, \nrtrim(ltrim(pac_nome)) AS NM_PESSOA_FISICA, \npac_numcpf AS NR_CPF, \nconvert(char(10),pac_nasc,121) as DT_NASCIMENTO, \npac_celular AS NR_TELEFONE_CELULAR,\npac_fone AS NR_TELEFONE, \n'OFTALMOCLIN Hospital de Olhos da Bahia' AS CNPJ,\n'OFTALMOCLIN' as DS_UNIDADE,\n'OFTALMOCLIN' as MARCA,\npac_reg as NR_PRONTUARIO,\npac_dreg as DT_CADASTRO_ORIGINAL,\npac_dult as DT_ATUALIZACAO,\nPAC_SEXO as IE_SEXO,\npac_cep as CD_CEP,\n'Smart Oftalmoclin' as BASE\nfrom pac\ninner join usr on USR_LOGIN = PAC_USR_LOGIN_CAD",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SMART_Oftalmoclin_Prd_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZSQL_TB_Pacientes_Unidade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Paciente Sadalla",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select pf.cd_pessoa_fisica,\n       pf.nm_pessoa_fisica,\n       pf.nr_cpf,\n       to_char((pf.dt_nascimento) , 'dd/mm/yyyy') as dt_nascimento,\n       pf.nr_ddd_celular||''||substr(replace(LTRIM(translate(pf.nr_telefone_celular, translate(pf.nr_telefone_celular, '1234567890', ' ') , ' ')),' ',''),1,100) as nr_telefone_celular,\n       obter_compl_pf(pf.cd_pessoa_fisica,1,'DDT')||''||obter_compl_pf(pf.cd_pessoa_fisica,1,'T') as nr_telefone,\n       obter_cnpj_estabelecimento(decode(pf.cd_estabelecimento,null,1,pf.cd_estabelecimento)) as CNPJ,\n       e.nm_fantasia_estab as DS_UNIDADE,\n       em.nm_razao_social as MARCA,\n       pf.nr_prontuario,\n       pf.dt_cadastro_original ,\n       pf.dt_atualizacao,\n       pf.ie_sexo,\n       obter_compl_pf(pf.cd_pessoa_fisica, 1, 'CEP') as cd_cep,\n'Tasy Delphi' as BASE\nfrom pessoa_fisica pf,\n     estabelecimento e,\n     empresa em\nwhere decode(pf.cd_estabelecimento,null,1,pf.cd_estabelecimento) = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SadallaTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Pacientes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Paciente HOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select pf.cd_pessoa_fisica,\n       pf.nm_pessoa_fisica,\n       pf.nr_cpf,\n       to_char((pf.dt_nascimento) , 'dd/mm/yyyy') as dt_nascimento,\n       pf.nr_ddd_celular||''||substr(replace(LTRIM(translate(pf.nr_telefone_celular, translate(pf.nr_telefone_celular, '1234567890', ' ') , ' ')),' ',''),1,100) as nr_telefone_celular,\n       obter_compl_pf(pf.cd_pessoa_fisica,1,'DDT')||''||obter_compl_pf(pf.cd_pessoa_fisica,1,'T') as nr_telefone,\n       obter_cnpj_estabelecimento(decode(pf.cd_estabelecimento,null,1,pf.cd_estabelecimento)) as CNPJ,\n       e.nm_fantasia_estab as DS_UNIDADE,\n       em.nm_razao_social as MARCA,\n       pf.nr_prontuario,\n       pf.dt_cadastro_original ,\n       pf.dt_atualizacao,\n       pf.ie_sexo,\n       obter_compl_pf(pf.cd_pessoa_fisica, 1, 'CEP') as cd_cep,\n'Tasy HTML' as BASE\nfrom pessoa_fisica pf,\n     estabelecimento e,\n     empresa em\nwhere decode(pf.cd_estabelecimento,null,1,pf.cd_estabelecimento) = e.cd_estabelecimento\nand e.cd_empresa = em.cd_empresa",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudTasyPrdDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_SQL_TB_Pacientes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Clear Base",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CLEARBASEPACIENTES]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Clientes"
				},
				"annotations": [],
				"lastPublishTime": "2020-02-10T20:56:26Z"
			},
			"dependsOn": []
		}
	]
}