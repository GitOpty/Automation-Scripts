{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "OptyADF"
		},
		"AzureSQL_DB_Procedimentos_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSQL_DB_Procedimentos'"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"Five9_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Five9'"
		},
		"SQL_CONTROLE_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL_CONTROLE'"
		},
		"SQL_DESTINO_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL_DESTINO'"
		},
		"sv_hmaisbrasildatadriven_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'sv_hmaisbrasildatadriven'"
		},
		"Five9_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.five9.com/wsadmin/AdminWebService?wsdl&user=%27"
		},
		"Five9_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "api@opty"
		},
		"SV_OptyKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://OptyKeyVault.vault.azure.net/"
		},
		"sv_hmaisbrasildatadriven_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://hmaisbrasildatadriven.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Send email')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Send notification",
						"description": "Generic pipeline for sending email using Azure Logic App",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-53.eastus2.logic.azure.com:443/workflows/464dec07d29247d9961de309d3bce20f/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=sh4Xorsyt738hlUwbioYqXIxNAoMWRw8gey3yBcg8fc",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().parameters.MasterPipeline}",
								"Subject": "@{pipeline().parameters.Subject}",
								"ErrorMessage": "@{pipeline().parameters.ErrorMessage}",
								"EmailTo": "@pipeline().parameters.EmailTo"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"EmailTo": {
						"type": "string",
						"defaultValue": "No email set!"
					},
					"Subject": {
						"type": "string",
						"defaultValue": "No subject set!"
					},
					"ErrorMessage": {
						"type": "string",
						"defaultValue": "No message set!"
					},
					"MasterPipeline": {
						"type": "string",
						"defaultValue": "No pipeline set!"
					}
				},
				"annotations": [],
				"lastPublishTime": "2019-10-07T12:43:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL_DB_Procedimentos')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSQL_DB_Procedimentos_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Five9')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Five9_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Five9_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Five9_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_CONTROLE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQL_CONTROLE_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_DESTINO')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQL_DESTINO_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SV_OptyKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('SV_OptyKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sv_hmaisbrasildatadriven')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('sv_hmaisbrasildatadriven_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('sv_hmaisbrasildatadriven_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily 05h')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-11-24T12:05:00",
						"timeZone": "E. South America Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ServidorArquivosBI')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_ProdDiariaSMARTV2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP_SMART_RAW_PRODUCAO_DIARIA",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_SMART_RAW_PRODUCAO_DIARIA"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP_PROCESSA_PROD_DIARIA_SMART",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SP_SMART_RAW_PRODUCAO_DIARIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_PROCESSA_PROD_DIARIA_SMART"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data Warehouse/3_Pipeline_Datamart/datamart_ProducaoDiaria"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL_DB_Procedimentos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_ProdDiaria_NAJA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RAW DATA NAJA",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.SP_NAJA_RAW_DATA_PROD_DIARIA"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ODS NAJA",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RAW DATA NAJA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.SP_NAJA_ODS_PROD_DIARIA"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data Warehouse/3_Pipeline_Datamart/datamart_ProducaoDiaria"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL_DB_Procedimentos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_ProdDiaria_SMART')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Producao Diaria         RAW Data",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.07:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_SMART_PRODUCAO_DIARIA]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Producao Diaria         ODS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Producao Diaria         RAW Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.07:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_SMART_ODS_PRODUCAO_DIARIA]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Producao Diaria DW",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Producao Diaria         ODS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.sp_dw_prod_diaria"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "REPROCESSA_PROD_DIARIA_SMART",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Producao Diaria DW",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_REPROCESSA_PROD_DIARIA_SMART"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data Warehouse/3_Pipeline_Datamart/datamart_ProducaoDiaria"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL_DB_Procedimentos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_ProdDiaria_TASY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TASY PRODUCAO DIARIA",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.05:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "DBO.SP_TASY_PRODUCAO_DIARIA",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "TASY ODS PRODUCAO DIARIA",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TASY PRODUCAO DIARIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.09:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "DBO.SP_TASY_ODS_PRODUCAO_DIARIA",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "MERGE DW PROD FINAL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TASY ODS PRODUCAO DIARIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.sp_dw_prod_diaria_TASY"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "AJUSTE DATAMART",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "MERGE DW PROD FINAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.SP_DW_PROD_DIARIA_BUSCA_LIMPA"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data Warehouse/3_Pipeline_Datamart/datamart_ProducaoDiaria"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL_DB_Procedimentos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_ProdDiaria_TasyV2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline criado para gerar informações paliativo",
				"activities": [
					{
						"name": "SP_ODS_TASY_PROD_DIARIA_V2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_ODS_TASY_PROD_DIARIA_V2"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP_INSERT_PRODIARIA_DATAMART",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SP_ODS_TASY_PROD_DIARIA_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_INSERT_PRODIARIA_DATAMART"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data Warehouse/3_Pipeline_Datamart/datamart_ProducaoDiaria"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL_DB_Procedimentos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_Recebimento')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Processa Datamart Recebimento",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_PROCESSA_RECEBIMENTO_SYS_LEG"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data Warehouse/3_Pipeline_Datamart/datamart_Recebimento"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL_DB_Procedimentos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Five9')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG DW FIVE9_ESP0001",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SQL_DESTINO",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "MERGE\t           \n\tdw.FIVE9_ESP0001 AS destino           \nUSING            \n\tstg.FIVE9_ESP0001 AS origem           \n           \n    ON(        \n        destino.id_ligacao = origem.id_ligacao        \n          )        \n       \n      \n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \ndestino.DATA\t\t\t\t\t=origem.DATA,\ndestino.REGISTRO_DATA_HORA\t\t=origem.REGISTRO_DATA_HORA,\ndestino.CAMPANHA\t\t\t\t=origem.CAMPANHA,\ndestino.COMPETENCIA\t\t\t\t=origem.COMPETENCIA,\ndestino.AGENTE\t\t\t\t\t=origem.AGENTE,\ndestino.NOME_AGENTE\t\t\t\t=origem.NOME_AGENTE,\ndestino.POSICAO\t\t\t\t\t=origem.POSICAO,\ndestino.ANI\t\t\t\t\t\t=origem.ANI,\ndestino.NOME_CLIENTE\t\t\t=origem.NOME_CLIENTE,\ndestino.DNIS\t\t\t\t\t=origem.DNIS,\ndestino.TEMPO_LIGACAO\t\t\t=origem.TEMPO_LIGACAO,\ndestino.TEMPO_FATURAMENTO_ARRED\t=origem.TEMPO_FATURAMENTO_ARRED,\ndestino.TEMPO_IVR\t\t\t\t=origem.TEMPO_IVR,\ndestino.CAMINHO_IVR\t\t\t\t=origem.CAMINHO_IVR,\ndestino.TEMPO_ESPERA_FILA\t\t=origem.TEMPO_ESPERA_FILA,\ndestino.TEMPO_TOQUE\t\t\t\t=origem.TEMPO_TOQUE,\ndestino.TEMPO_CONVERSA\t\t\t=origem.TEMPO_CONVERSA,\ndestino.TEMPO_RETENCAO\t\t\t=origem.TEMPO_RETENCAO,\ndestino.TEMPO_ESPERA\t\t\t=origem.TEMPO_ESPERA,\ndestino.TEMPO_ABANDONAR\t\t\t=origem.TEMPO_ABANDONAR,\ndestino.TEMPO_TOTAL_FILA\t\t\t=origem.TEMPO_TOTAL_FILA,\ndestino.AP_TEMPO_ATIVIDADE_LIGACAO\t=origem.AP_TEMPO_ATIVIDADE_LIGACAO,\ndestino.TRANSFERENCIAS\t\t\t\t=origem.TRANSFERENCIAS,\ndestino.CONFERENCIAS\t\t\t\t=origem.CONFERENCIAS,\ndestino.RETENCOES\t\t\t\t\t=origem.RETENCOES,\ndestino.ABANDONADA\t\t\t\t\t=origem.ABANDONADA,\ndestino.GRAVACOES\t\t\t\t\t=origem.GRAVACOES,\ndestino.TIPO_CAMPANHA\t\t\t\t=origem.TIPO_CAMPANHA,\ndestino.TIPO_LIGACAO\t\t\t\t=origem.TIPO_LIGACAO,\ndestino.GRUPO_AGENTES\t\t\t\t=origem.GRUPO_AGENTES\n  \n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.id_ligacao\t\n,origem.DATA\n,origem.REGISTRO_DATA_HORA\n,origem.CAMPANHA\n,origem.COMPETENCIA\n,origem.AGENTE\n,origem.NOME_AGENTE\n,origem.POSICAO\n,origem.ANI\n,origem.NOME_CLIENTE\n,origem.DNIS\n,origem.TEMPO_LIGACAO\n,origem.TEMPO_FATURAMENTO_ARRED\n,origem.TEMPO_IVR\n,origem.CAMINHO_IVR\n,origem.TEMPO_ESPERA_FILA\n,origem.TEMPO_TOQUE\n,origem.TEMPO_CONVERSA\n,origem.TEMPO_RETENCAO\n,origem.TEMPO_ESPERA\n,origem.TEMPO_ABANDONAR\n,origem.TEMPO_TOTAL_FILA\n,origem.AP_TEMPO_ATIVIDADE_LIGACAO\n,origem.TRANSFERENCIAS\n,origem.CONFERENCIAS\n,origem.RETENCOES\n,origem.ABANDONADA\n,origem.GRAVACOES\n,origem.TIPO_CAMPANHA\n,origem.TIPO_LIGACAO\n,origem.GRUPO_AGENTES\n);        "
								}
							]
						}
					},
					{
						"name": "STG DW FIVE9_ESP0002",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "STG DW FIVE9_ESP0001",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SQL_DESTINO",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "MERGE\t           \n\tdw.FIVE9_ESP0002 AS destino           \nUSING            \n\tstg.FIVE9_ESP0002 AS origem           \n           \n    ON(        \n        destino.agente = origem.agente AND\n\t\tdestino.REGISTRO_HORA_DATA_ACESSO = origem.REGISTRO_HORA_DATA_ACESSO\n          )        \n       \n      \n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \ndestino.DATA_HORA\t\t\t\t\t=origem.DATA_HORA,\ndestino.NOME_AGENTE\t\t\t\t\t=origem.NOME_AGENTE,\ndestino.GRUPO_AGENTES\t\t\t\t=origem.GRUPO_AGENTES,\ndestino.REGISTRO_HORA_DATA_SAIDA\t=origem.REGISTRO_HORA_DATA_SAIDA,\ndestino.TEMPO_LOGIN\t\t\t\t\t=origem.TEMPO_LOGIN,\ndestino.DATA\t\t\t\t\t\t=origem.DATA\n  \n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.DATA_HORA\n,origem.AGENTE\n,origem.NOME_AGENTE\n,origem.GRUPO_AGENTES\n,origem.REGISTRO_HORA_DATA_ACESSO\n,origem.REGISTRO_HORA_DATA_SAIDA\n,origem.TEMPO_LOGIN\n,origem.DATA\n);        \n"
								}
							]
						}
					},
					{
						"name": "STG DW FIVE9_ESP0003",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "STG DW FIVE9_ESP0002",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SQL_DESTINO",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "MERGE\t           \n\tdw.FIVE9_ESP0003 AS destino           \nUSING            \n\tstg.FIVE9_ESP0003 AS origem           \n           \n    ON(        \n        destino.id_ligacao = origem.id_ligacao \n          )        \n       \n      \n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \ndestino.ID_LIGACAO\t\t\t\t\t\t\t=origem.ID_LIGACAO,\ndestino.CAMPANHA\t\t\t\t\t\t\t=origem.CAMPANHA,\ndestino.TIPO_LIGACAO\t\t\t\t\t\t=origem.TIPO_LIGACAO,\ndestino.AGENTE\t\t\t\t\t\t\t\t=origem.AGENTE,\ndestino.NOME_AGENTE\t\t\t\t\t\t\t=origem.NOME_AGENTE,\ndestino.POSICAO\t\t\t\t\t\t\t\t=origem.POSICAO,\ndestino.ANI\t\t\t\t\t\t\t\t\t=origem.ANI,\ndestino.TEMPO_LIGACAO\t\t\t\t\t\t=origem.TEMPO_LIGACAO,\ndestino.TEMPO_FATURAMENTO_ARRENDONDADO\t\t=origem.TEMPO_FATURAMENTO_ARRENDONDADO,\ndestino.TEMPO_RETENCAO\t\t\t\t\t\t=origem.TEMPO_RETENCAO,\ndestino.TEMPO_ESPERA\t\t\t\t\t\t=origem.TEMPO_ESPERA,\ndestino.APÓS_TEMPO_ATIVIDADE_LIGACAO\t\t=origem.APÓS_TEMPO_ATIVIDADE_LIGACAO,\ndestino.TRANSFERENCIAS\t\t\t\t\t\t=origem.TRANSFERENCIAS,\ndestino.CONFERENCIAS\t\t\t\t\t\t=origem.CONFERENCIAS,\ndestino.ABANDONADA\t\t\t\t\t\t\t=origem.ABANDONADA,\ndestino.DATA\t\t\t\t\t\t\t\t=origem.DATA,\ndestino.HORA\t\t\t\t\t\t\t\t=origem.HORA,\ndestino.COMPETENCIA\t\t\t\t\t\t\t=origem.COMPETENCIA,\ndestino.TEMPO_CONVERSA\t\t\t\t\t\t=origem.TEMPO_CONVERSA\n  \n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.ID_LIGACAO\n,origem.CAMPANHA\n,origem.TIPO_LIGACAO\n,origem.AGENTE\n,origem.NOME_AGENTE\n,origem.POSICAO\n,origem.ANI\n,origem.TEMPO_LIGACAO\n,origem.TEMPO_FATURAMENTO_ARRENDONDADO\n,origem.TEMPO_RETENCAO\n,origem.TEMPO_ESPERA\n,origem.APÓS_TEMPO_ATIVIDADE_LIGACAO\n,origem.TRANSFERENCIAS\n,origem.CONFERENCIAS\n,origem.ABANDONADA\n,origem.DATA\n,origem.HORA\n,origem.COMPETENCIA\n,origem.TEMPO_CONVERSA\n\n);        \n"
								}
							]
						}
					},
					{
						"name": "STG DW FIVE9_ESP0004",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "STG DW FIVE9_ESP0003",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SQL_DESTINO",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "MERGE\t           \n\tdw.FIVE9_ESP0004 AS destino           \nUSING            \n\tstg.FIVE9_ESP0004 AS origem           \n           \n    ON(        \ndestino.CAMPANHA\t\t\t\t\t=origem.CAMPANHA\t\t\tAND\ndestino.TIPO_LIGACAO\t\t\t\t=origem.TIPO_LIGACAO\t\tAND\ndestino.AGENTE\t\t\t\t\t\t=origem.AGENTE\t\t\t\tAND\ndestino.NOME_AGENTE\t\t\t\t\t=origem.NOME_AGENTE\t\t\tAND\ndestino.POSICAO\t\t\t\t\t\t=origem.POSICAO\t\t\t\tAND\ndestino.ANI\t\t\t\t\t\t\t=origem.ANI\t\t\t\t\tAND\ndestino.DNIS\t\t\t\t\t\t=origem.DNIS\t\t\t\tAND\ndestino.TEMPO_LIGACAO\t\t\t\t=origem.TEMPO_LIGACAO\t\tAND\ndestino.TEMPO_ESPERA_FILA\t\t\t=origem.TEMPO_ESPERA_FILA\tAND\ndestino.TEMPO_CONVERSA\t\t\t\t=origem.TEMPO_CONVERSA\t\tAND\ndestino.TEMPO_ESPERA\t\t\t\t=origem.TEMPO_ESPERA\t\tAND\ndestino.ABANDONADA\t\t\t\t\t=origem.ABANDONADA\t\t\tAND\ndestino.DATA\t\t\t\t\t\t=origem.DATA\t\t\t\tAND\ndestino.HORA\t\t\t\t\t\t=origem.HORA\n          )        \n       \n      \n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \ndestino.CAMPANHA\t\t\t\t\t=origem.CAMPANHA,\ndestino.TIPO_LIGACAO\t\t\t\t=origem.TIPO_LIGACAO,\ndestino.AGENTE\t\t\t\t\t\t=origem.AGENTE,\ndestino.NOME_AGENTE\t\t\t\t\t=origem.NOME_AGENTE,\ndestino.POSICAO\t\t\t\t\t\t=origem.POSICAO,\ndestino.ANI\t\t\t\t\t\t\t=origem.ANI,\ndestino.DNIS\t\t\t\t\t\t=origem.DNIS,\ndestino.TEMPO_LIGACAO\t\t\t\t=origem.TEMPO_LIGACAO,\ndestino.TEMPO_ESPERA_FILA\t\t\t=origem.TEMPO_ESPERA_FILA,\ndestino.TEMPO_CONVERSA\t\t\t\t=origem.TEMPO_CONVERSA,\ndestino.TEMPO_ESPERA\t\t\t\t=origem.TEMPO_ESPERA,\ndestino.ABANDONADA\t\t\t\t\t=origem.ABANDONADA,\ndestino.DATA\t\t\t\t\t\t=origem.DATA,\ndestino.HORA\t\t\t\t\t\t=origem.HORA\n  \n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.CAMPANHA\n,origem.TIPO_LIGACAO\n,origem.AGENTE\n,origem.NOME_AGENTE\n,origem.POSICAO\n,origem.ANI\n,origem.DNIS\n,origem.TEMPO_LIGACAO\n,origem.TEMPO_ESPERA_FILA\n,origem.TEMPO_CONVERSA\n,origem.TEMPO_ESPERA\n,origem.ABANDONADA\n,origem.DATA\n,origem.HORA\n);"
								}
							]
						}
					},
					{
						"name": "STG DW FIVE9_ESP0006",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "STG DW FIVE9_ESP0004",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SQL_DESTINO",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "MERGE\t           \n\tdw.FIVE9_ESP0006 AS destino           \nUSING            \n\tstg.FIVE9_ESP0006 AS origem           \n           \n    ON(        \n       \n\t\tdestino.campanha\t\t\t\t\t\t= origem.campanha\t\tAND\t\n\t\tdestino.tipo_ligacao\t\t\t\t\t= origem.tipo_ligacao\tAND\t\n\t\tdestino.agente\t\t\t\t\t\t\t= origem.agente\t\t\tAND\n\t\tdestino.tempo_conversa\t\t\t\t\t= origem.tempo_conversa AND \n\t\tdestino.apos_tempo_atividade_ligacao\t= origem.apos_tempo_atividade_ligacao AND \t\n\t\tdestino.data\t\t\t\t\t\t\t= origem.data\n          )        \n       \n      \n--Quando os registros são correspondidos, atualize os registros se houver alguma alteração           \nWHEN MATCHED            \nTHEN UPDATE SET           \ndestino.campanha\t\t\t\t\t=origem.campanha,\ndestino.tipo_ligacao\t\t\t\t=origem.tipo_ligacao,\ndestino.agente\t\t\t\t\t\t=origem.agente,\ndestino.tempo_conversa\t\t\t\t=origem.tempo_conversa,\ndestino.apos_tempo_atividade_ligacao=origem.apos_tempo_atividade_ligacao,\ndestino.data\t\t\t\t\t\t=origem.data\n  \n--Quando nenhum registro é correspondido, insira os registros de entrada da tabela de origem para a tabela de destino           \nWHEN NOT MATCHED BY TARGET            \nTHEN INSERT            \n\tVALUES (\norigem.campanha\n,origem.tipo_ligacao\n,origem.agente\n,origem.tempo_conversa\n,origem.apos_tempo_atividade_ligacao\n,origem.data\n);        \n"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data Warehouse/Five9"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_DESTINO')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Procedure_Marca')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Procedure_Marca",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_UPDATETRADEMARKV2",
							"storedProcedureParameters": {
								"CNPJ_FIELDNAME": {
									"value": "cd_cgc_estab",
									"type": "String"
								},
								"INITIALS_FIELDNAME": {
									"value": "SIGLA_UNIDADE",
									"type": "String"
								},
								"MARK_FIELDNAME": {
									"value": "MARCA",
									"type": "String"
								},
								"TABLENAME": {
									"value": "Aging_Baixa_Titulo_Receber",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Contas a receber"
				},
				"annotations": [],
				"lastPublishTime": "2019-09-10T17:22:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL_DB_Procedimentos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Processamento e Armaz')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Processa Prod Diaria",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_PROCESSA_PROD_DIARIA]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL_DB_Procedimentos",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Producao Diaria"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-20T18:04:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL_DB_Procedimentos')]"
			]
		}
	]
}